<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="326" onload="init(evt)" viewBox="0 0 1200 326" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="326.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="309" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="309" > </text>
<g id="frames">
<g >
<title>exc_page_fault (581,217 samples, 0.02%)</title><rect x="1188.3" y="213" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1191.31" y="223.5" ></text>
</g>
<g >
<title>__kmem_cache_free (75,716,958 samples, 2.43%)</title><rect x="498.0" y="117" width="28.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="500.96" y="127.5" >__..</text>
</g>
<g >
<title>syscall_return_via_sysret (235,090,278 samples, 7.55%)</title><rect x="1096.8" y="213" width="89.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1099.76" y="223.5" >syscall_re..</text>
</g>
<g >
<title>bprm_execve (842,201 samples, 0.03%)</title><rect x="10.4" y="165" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="13.44" y="175.5" ></text>
</g>
<g >
<title>kmalloc_slab (18,222,204 samples, 0.59%)</title><rect x="754.0" y="101" width="6.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="757.04" y="111.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (712,045 samples, 0.02%)</title><rect x="10.5" y="101" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="13.49" y="111.5" ></text>
</g>
<g >
<title>__check_object_size (189,734,628 samples, 6.09%)</title><rect x="610.2" y="133" width="71.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="613.23" y="143.5" >__check_..</text>
</g>
<g >
<title>kfree (6,540,107 samples, 0.21%)</title><rect x="470.9" y="149" width="2.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="473.94" y="159.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (617,112 samples, 0.02%)</title><rect x="37.4" y="181" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="40.40" y="191.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (2,908,849 samples, 0.09%)</title><rect x="1036.1" y="165" width="1.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1039.12" y="175.5" ></text>
</g>
<g >
<title>lookup_nulls_elem_raw (5,809,271 samples, 0.19%)</title><rect x="442.3" y="133" width="2.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="445.32" y="143.5" ></text>
</g>
<g >
<title>_copy_to_user (6,581,854 samples, 0.21%)</title><rect x="375.3" y="149" width="2.5" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="378.32" y="159.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,294,392 samples, 0.04%)</title><rect x="11.0" y="197" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.97" y="207.5" ></text>
</g>
<g >
<title>memset_orig (5,841,472 samples, 0.19%)</title><rect x="569.3" y="117" width="2.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="572.31" y="127.5" ></text>
</g>
<g >
<title>should_failslab (713,771 samples, 0.02%)</title><rect x="571.5" y="117" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="574.53" y="127.5" ></text>
</g>
<g >
<title>do_user_addr_fault (581,217 samples, 0.02%)</title><rect x="1188.3" y="197" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1191.31" y="207.5" ></text>
</g>
<g >
<title>__audit_syscall_entry (11,643,099 samples, 0.37%)</title><rect x="852.2" y="149" width="4.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="855.23" y="159.5" ></text>
</g>
<g >
<title>htab_map_alloc (1,321,110 samples, 0.04%)</title><rect x="1189.5" y="149" width="0.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1192.48" y="159.5" ></text>
</g>
<g >
<title>lookup_nulls_elem_raw (23,302,053 samples, 0.75%)</title><rect x="424.4" y="117" width="8.8" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="427.35" y="127.5" ></text>
</g>
<g >
<title>bpf_map_copy_value (190,619,866 samples, 6.12%)</title><rect x="377.8" y="149" width="72.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="380.81" y="159.5" >bpf_map_..</text>
</g>
<g >
<title>rep_movs_alternative (28,473,224 samples, 0.91%)</title><rect x="586.2" y="149" width="10.8" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="589.17" y="159.5" ></text>
</g>
<g >
<title>__virt_addr_valid (18,897,825 samples, 0.61%)</title><rect x="330.1" y="133" width="7.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="333.08" y="143.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (732,057 samples, 0.02%)</title><rect x="1092.9" y="197" width="0.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1095.89" y="207.5" ></text>
</g>
<g >
<title>get_page_from_freelist (659,289 samples, 0.02%)</title><rect x="1189.7" y="53" width="0.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1192.73" y="63.5" ></text>
</g>
<g >
<title>_find_next_bit (661,821 samples, 0.02%)</title><rect x="1189.5" y="101" width="0.2" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1192.48" y="111.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (7,297,745 samples, 0.23%)</title><rect x="1087.4" y="181" width="2.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1090.37" y="191.5" ></text>
</g>
<g >
<title>exc_page_fault (617,112 samples, 0.02%)</title><rect x="37.4" y="165" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="40.40" y="175.5" ></text>
</g>
<g >
<title>__perf_addr_filters_adjust (531,729 samples, 0.02%)</title><rect x="10.0" y="53" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="13.00" y="63.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (5,782,523 samples, 0.19%)</title><rect x="823.5" y="181" width="2.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="826.55" y="191.5" ></text>
</g>
<g >
<title>memcpy_orig (6,561,307 samples, 0.21%)</title><rect x="576.5" y="149" width="2.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="579.49" y="159.5" ></text>
</g>
<g >
<title>bpf_map_area_alloc (659,289 samples, 0.02%)</title><rect x="1189.7" y="133" width="0.3" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1192.73" y="143.5" ></text>
</g>
<g >
<title>_dl_map_object (531,729 samples, 0.02%)</title><rect x="10.0" y="213" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (732,318 samples, 0.02%)</title><rect x="681.8" y="117" width="0.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="684.83" y="127.5" ></text>
</g>
<g >
<title>__virt_addr_valid (6,588,335 samples, 0.21%)</title><rect x="684.9" y="133" width="2.5" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="687.87" y="143.5" ></text>
</g>
<g >
<title>bpf_map_value_size (16,774,936 samples, 0.54%)</title><rect x="788.8" y="165" width="6.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="791.78" y="175.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_array (2,181,978 samples, 0.07%)</title><rect x="369.2" y="149" width="0.9" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="372.23" y="159.5" ></text>
</g>
<g >
<title>__mmput (731,417 samples, 0.02%)</title><rect x="1189.2" y="149" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1192.20" y="159.5" ></text>
</g>
<g >
<title>do_syscall_64 (531,729 samples, 0.02%)</title><rect x="10.0" y="165" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.00" y="175.5" ></text>
</g>
<g >
<title>__cond_resched (2,891,822 samples, 0.09%)</title><rect x="708.3" y="101" width="1.1" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="711.30" y="111.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (531,729 samples, 0.02%)</title><rect x="10.0" y="117" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="13.00" y="127.5" ></text>
</g>
<g >
<title>htab_map_lookup_elem (68,539,257 samples, 2.20%)</title><rect x="416.4" y="133" width="25.9" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="419.35" y="143.5" >h..</text>
</g>
<g >
<title>amd_clear_divider (10,902,112 samples, 0.35%)</title><rect x="819.4" y="181" width="4.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="822.42" y="191.5" ></text>
</g>
<g >
<title>__kmalloc_node (182,686,820 samples, 5.87%)</title><rect x="703.0" y="117" width="69.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="706.05" y="127.5" >__kmall..</text>
</g>
<g >
<title>do_exit (731,417 samples, 0.02%)</title><rect x="1189.2" y="181" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1192.20" y="191.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (4,368,768 samples, 0.14%)</title><rect x="760.9" y="101" width="1.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="763.94" y="111.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (531,729 samples, 0.02%)</title><rect x="10.0" y="181" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title>do_sys_openat2 (630,233 samples, 0.02%)</title><rect x="10.2" y="165" width="0.2" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="13.20" y="175.5" ></text>
</g>
<g >
<title>__sys_bpf (10,893,380 samples, 0.35%)</title><rect x="217.8" y="181" width="4.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="220.84" y="191.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (16,652,042 samples, 0.53%)</title><rect x="464.6" y="149" width="6.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="467.63" y="159.5" ></text>
</g>
<g >
<title>do_user_addr_fault (617,112 samples, 0.02%)</title><rect x="37.4" y="149" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="40.40" y="159.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (5,093,921 samples, 0.16%)</title><rect x="559.9" y="101" width="2.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="562.93" y="111.5" ></text>
</g>
<g >
<title>__rcu_read_lock (1,464,194 samples, 0.05%)</title><rect x="397.6" y="133" width="0.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="400.61" y="143.5" ></text>
</g>
<g >
<title>do_group_exit (731,417 samples, 0.02%)</title><rect x="1189.2" y="197" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1192.20" y="207.5" ></text>
</g>
<g >
<title>unroll_tree_refs (13,122,147 samples, 0.42%)</title><rect x="1071.4" y="117" width="4.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1074.36" y="127.5" ></text>
</g>
<g >
<title>vmemdup_user (469,268,926 samples, 15.07%)</title><rect x="599.2" y="149" width="177.7" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="602.15" y="159.5" >vmemdup_user</text>
</g>
<g >
<title>do_syscall_64 (731,417 samples, 0.02%)</title><rect x="1189.2" y="229" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1192.20" y="239.5" ></text>
</g>
<g >
<title>handle_mm_fault (617,112 samples, 0.02%)</title><rect x="37.4" y="133" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="40.40" y="143.5" ></text>
</g>
<g >
<title>kvmalloc_node (131,580,163 samples, 4.22%)</title><rect x="526.6" y="149" width="49.9" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="529.64" y="159.5" >kvmal..</text>
</g>
<g >
<title>[unknown] (3,857,359 samples, 0.12%)</title><rect x="10.0" y="245" width="1.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>_copy_to_user (8,694,524 samples, 0.28%)</title><rect x="779.4" y="165" width="3.3" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="782.41" y="175.5" ></text>
</g>
<g >
<title>__vmalloc_node_range (659,289 samples, 0.02%)</title><rect x="1189.7" y="101" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1192.73" y="111.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (58,768,735 samples, 1.89%)</title><rect x="539.6" y="117" width="22.3" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="542.60" y="127.5" >_..</text>
</g>
<g >
<title>bpf_map_alloc_percpu (661,821 samples, 0.02%)</title><rect x="1189.5" y="133" width="0.2" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1192.48" y="143.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (7,268,701 samples, 0.23%)</title><rect x="1090.1" y="197" width="2.8" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1093.13" y="207.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (531,729 samples, 0.02%)</title><rect x="10.0" y="133" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="13.00" y="143.5" ></text>
</g>
<g >
<title>__alloc_pages (659,289 samples, 0.02%)</title><rect x="1189.7" y="69" width="0.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1192.73" y="79.5" ></text>
</g>
<g >
<title>alloc_pages (659,289 samples, 0.02%)</title><rect x="1189.7" y="85" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1192.73" y="95.5" ></text>
</g>
<g >
<title>kvmalloc_node (199,396,468 samples, 6.40%)</title><rect x="699.5" y="133" width="75.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="702.46" y="143.5" >kvmalloc..</text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (55,320,629 samples, 1.78%)</title><rect x="835.7" y="165" width="20.9" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="838.68" y="175.5" ></text>
</g>
<g >
<title>vmemdup_user (7,269,235 samples, 0.23%)</title><rect x="816.7" y="165" width="2.7" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="819.67" y="175.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (13,160,210 samples, 0.42%)</title><rect x="749.1" y="85" width="4.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="752.05" y="95.5" ></text>
</g>
<g >
<title>[vmlinux] (731,417 samples, 0.02%)</title><rect x="1189.2" y="213" width="0.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1192.20" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_bpf (16,740,718 samples, 0.54%)</title><rect x="200.2" y="197" width="6.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="203.20" y="207.5" ></text>
</g>
<g >
<title>htab_map_hash (48,010,734 samples, 1.54%)</title><rect x="398.2" y="133" width="18.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="401.16" y="143.5" ></text>
</g>
<g >
<title>check_stack_object (28,369,807 samples, 0.91%)</title><rect x="450.0" y="149" width="10.8" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="453.03" y="159.5" ></text>
</g>
<g >
<title>vm_mmap (712,045 samples, 0.02%)</title><rect x="10.5" y="117" width="0.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="13.49" y="127.5" ></text>
</g>
<g >
<title>memchr_inv (40,024,399 samples, 1.28%)</title><rect x="799.3" y="165" width="15.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="802.29" y="175.5" ></text>
</g>
<g >
<title>bpf_map_copy_value (5,832,661 samples, 0.19%)</title><rect x="786.6" y="165" width="2.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="789.57" y="175.5" ></text>
</g>
<g >
<title>htab_map_lookup_elem (10,181,591 samples, 0.33%)</title><rect x="460.8" y="149" width="3.8" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="463.77" y="159.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (81,555,949 samples, 2.62%)</title><rect x="825.7" y="181" width="30.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="828.74" y="191.5" >sy..</text>
</g>
<g >
<title>__fget_light (34,143,171 samples, 1.10%)</title><rect x="344.4" y="133" width="13.0" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="347.44" y="143.5" ></text>
</g>
<g >
<title>bpf_map_lookup_elem (40,037,618 samples, 1.29%)</title><rect x="11.5" y="229" width="15.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.46" y="239.5" ></text>
</g>
<g >
<title>_copy_from_user (13,894,598 samples, 0.45%)</title><rect x="370.1" y="149" width="5.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="373.05" y="159.5" ></text>
</g>
<g >
<title>migrate_disable (10,217,624 samples, 0.33%)</title><rect x="579.0" y="149" width="3.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="581.97" y="159.5" ></text>
</g>
<g >
<title>audit_reset_context (79,958,261 samples, 2.57%)</title><rect x="1046.0" y="133" width="30.3" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1049.04" y="143.5" >au..</text>
</g>
<g >
<title>__sys_bpf (1,294,392 samples, 0.04%)</title><rect x="11.0" y="165" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="13.97" y="175.5" ></text>
</g>
<g >
<title>__check_heap_object (29,833,692 samples, 0.96%)</title><rect x="318.8" y="133" width="11.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="321.78" y="143.5" ></text>
</g>
<g >
<title>[unknown] (531,729 samples, 0.02%)</title><rect x="10.0" y="229" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>walk_component (630,233 samples, 0.02%)</title><rect x="10.2" y="101" width="0.2" height="15.0" fill="rgb(241,167,40)" rx="2" ry="2" />
<text  x="13.20" y="111.5" ></text>
</g>
<g >
<title>kvmalloc_node (5,108,696 samples, 0.16%)</title><rect x="797.4" y="165" width="1.9" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="800.35" y="175.5" ></text>
</g>
<g >
<title>should_failslab (714,372 samples, 0.02%)</title><rect x="772.0" y="101" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="774.99" y="111.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (5,852,814 samples, 0.19%)</title><rect x="484.7" y="133" width="2.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="487.73" y="143.5" ></text>
</g>
<g >
<title>__check_object_size (139,782,642 samples, 4.49%)</title><rect x="291.5" y="149" width="52.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="294.49" y="159.5" >__che..</text>
</g>
<g >
<title>syscall (1,321,110 samples, 0.04%)</title><rect x="1189.5" y="245" width="0.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1192.48" y="255.5" ></text>
</g>
<g >
<title>do_mmap (531,729 samples, 0.02%)</title><rect x="10.0" y="101" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="13.00" y="111.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (6,519,054 samples, 0.21%)</title><rect x="772.3" y="117" width="2.4" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="775.26" y="127.5" ></text>
</g>
<g >
<title>syscall_exit_work (127,244,103 samples, 4.09%)</title><rect x="1037.2" y="165" width="48.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1040.22" y="175.5" >sysc..</text>
</g>
<g >
<title>path_openat (630,233 samples, 0.02%)</title><rect x="10.2" y="133" width="0.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="13.20" y="143.5" ></text>
</g>
<g >
<title>mntput (2,196,080 samples, 0.07%)</title><rect x="1067.0" y="117" width="0.8" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1069.96" y="127.5" ></text>
</g>
<g >
<title>exit_mmap (731,417 samples, 0.02%)</title><rect x="1189.2" y="133" width="0.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1192.20" y="143.5" ></text>
</g>
<g >
<title>main (29,058,443 samples, 0.93%)</title><rect x="26.6" y="229" width="11.0" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="29.63" y="239.5" ></text>
</g>
<g >
<title>all (3,114,766,582 samples, 100%)</title><rect x="10.0" y="277" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>__virt_addr_valid (5,117,466 samples, 0.16%)</title><rect x="367.3" y="149" width="1.9" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="370.29" y="159.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (842,201 samples, 0.03%)</title><rect x="10.4" y="181" width="0.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="13.44" y="191.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (15,999,429 samples, 0.51%)</title><rect x="1030.1" y="165" width="6.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1033.06" y="175.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (5,806,103 samples, 0.19%)</title><rect x="567.1" y="117" width="2.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="570.11" y="127.5" ></text>
</g>
<g >
<title>mmput (731,417 samples, 0.02%)</title><rect x="1189.2" y="165" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1192.20" y="175.5" ></text>
</g>
<g >
<title>do_syscall_64 (9,220,716 samples, 0.30%)</title><rect x="52.3" y="213" width="3.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="55.28" y="223.5" ></text>
</g>
<g >
<title>_find_next_bit (641,924 samples, 0.02%)</title><rect x="11.2" y="101" width="0.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="14.22" y="111.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1,294,392 samples, 0.04%)</title><rect x="11.0" y="213" width="0.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="13.97" y="223.5" ></text>
</g>
<g >
<title>_dl_start_user (1,091,656 samples, 0.04%)</title><rect x="1188.5" y="245" width="0.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1191.53" y="255.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (2,169,186 samples, 0.07%)</title><rect x="1029.2" y="165" width="0.9" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1032.23" y="175.5" ></text>
</g>
<g >
<title>map_benchmark_bpf__open (617,112 samples, 0.02%)</title><rect x="37.4" y="213" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="40.40" y="223.5" ></text>
</g>
<g >
<title>search_cache (558,804 samples, 0.02%)</title><rect x="10.8" y="229" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="13.76" y="239.5" ></text>
</g>
<g >
<title>syscall_exit_work (5,129,522 samples, 0.16%)</title><rect x="1085.4" y="181" width="2.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1088.42" y="191.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,332,347,186 samples, 74.88%)</title><rect x="206.5" y="197" width="883.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="209.54" y="207.5" >do_syscall_64</text>
</g>
<g >
<title>__x64_sys_bpf (1,577,057,604 samples, 50.63%)</title><rect x="222.0" y="181" width="597.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="224.97" y="191.5" >__x64_sys_bpf</text>
</g>
<g >
<title>__check_heap_object (6,566,754 samples, 0.21%)</title><rect x="607.7" y="133" width="2.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="610.74" y="143.5" ></text>
</g>
<g >
<title>do_syscall_64 (842,201 samples, 0.03%)</title><rect x="10.4" y="213" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.44" y="223.5" ></text>
</g>
<g >
<title>_copy_from_user (6,533,956 samples, 0.21%)</title><rect x="776.9" y="165" width="2.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="779.93" y="175.5" ></text>
</g>
<g >
<title>__d_lookup (630,233 samples, 0.02%)</title><rect x="10.2" y="69" width="0.2" height="15.0" fill="rgb(224,88,21)" rx="2" ry="2" />
<text  x="13.20" y="79.5" ></text>
</g>
<g >
<title>__sys_bpf (1,443,772,122 samples, 46.35%)</title><rect x="230.0" y="165" width="546.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="232.97" y="175.5" >__sys_bpf</text>
</g>
<g >
<title>perf_event_mmap (531,729 samples, 0.02%)</title><rect x="10.0" y="69" width="0.2" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="13.00" y="79.5" ></text>
</g>
<g >
<title>mmap_region (531,729 samples, 0.02%)</title><rect x="10.0" y="85" width="0.2" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="13.00" y="95.5" ></text>
</g>
<g >
<title>check_stack_object (9,406,316 samples, 0.30%)</title><rect x="693.4" y="133" width="3.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="696.42" y="143.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (6,554,252 samples, 0.21%)</title><rect x="697.0" y="133" width="2.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="699.98" y="143.5" ></text>
</g>
<g >
<title>do_syscall_64 (630,233 samples, 0.02%)</title><rect x="10.2" y="197" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.20" y="207.5" ></text>
</g>
<g >
<title>bpf_check (652,468 samples, 0.02%)</title><rect x="11.0" y="133" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="13.97" y="143.5" ></text>
</g>
<g >
<title>__fdget (34,143,171 samples, 1.10%)</title><rect x="344.4" y="149" width="13.0" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="347.44" y="159.5" ></text>
</g>
<g >
<title>path_put (2,929,107 samples, 0.09%)</title><rect x="1080.2" y="133" width="1.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1083.19" y="143.5" ></text>
</g>
<g >
<title>mmap64 (531,729 samples, 0.02%)</title><rect x="10.0" y="197" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>map_create (1,321,110 samples, 0.04%)</title><rect x="1189.5" y="165" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1192.48" y="175.5" ></text>
</g>
<g >
<title>syscall@plt (6,581,630 samples, 0.21%)</title><rect x="1185.8" y="229" width="2.5" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1188.82" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_bpf (1,294,392 samples, 0.04%)</title><rect x="11.0" y="181" width="0.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="13.97" y="191.5" ></text>
</g>
<g >
<title>__cond_resched (1,459,110 samples, 0.05%)</title><rect x="539.0" y="117" width="0.6" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="542.05" y="127.5" ></text>
</g>
<g >
<title>filemap_map_pages (617,112 samples, 0.02%)</title><rect x="37.4" y="85" width="0.2" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="40.40" y="95.5" ></text>
</g>
<g >
<title>mmap_region (712,045 samples, 0.02%)</title><rect x="10.5" y="69" width="0.3" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="13.49" y="79.5" ></text>
</g>
<g >
<title>do_fault (617,112 samples, 0.02%)</title><rect x="37.4" y="101" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="40.40" y="111.5" ></text>
</g>
<g >
<title>__fdget (8,737,826 samples, 0.28%)</title><rect x="226.7" y="165" width="3.3" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="229.66" y="175.5" ></text>
</g>
<g >
<title>path_put (9,433,374 samples, 0.30%)</title><rect x="1067.8" y="117" width="3.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1070.79" y="127.5" ></text>
</g>
<g >
<title>__x64_sys_execve (842,201 samples, 0.03%)</title><rect x="10.4" y="197" width="0.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="13.44" y="207.5" ></text>
</g>
<g >
<title>memset_orig (24,781,221 samples, 0.80%)</title><rect x="762.6" y="101" width="9.4" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="765.60" y="111.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (1,091,656 samples, 0.04%)</title><rect x="1188.5" y="229" width="0.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1191.53" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (630,233 samples, 0.02%)</title><rect x="10.2" y="213" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="13.20" y="223.5" ></text>
</g>
<g >
<title>_dl_relocate_object (600,754 samples, 0.02%)</title><rect x="1188.7" y="197" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1191.72" y="207.5" ></text>
</g>
<g >
<title>migrate_enable (14,543,051 samples, 0.47%)</title><rect x="444.5" y="133" width="5.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="447.52" y="143.5" ></text>
</g>
<g >
<title>do_filp_open (630,233 samples, 0.02%)</title><rect x="10.2" y="149" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="13.20" y="159.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (106,930,084 samples, 3.43%)</title><rect x="1043.0" y="149" width="40.5" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1046.00" y="159.5" >__a..</text>
</g>
<g >
<title>next_uptodate_folio (617,112 samples, 0.02%)</title><rect x="37.4" y="69" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="40.40" y="79.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (4,345,024 samples, 0.14%)</title><rect x="1034.5" y="149" width="1.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1037.45" y="159.5" ></text>
</g>
<g >
<title>do_mmap (712,045 samples, 0.02%)</title><rect x="10.5" y="85" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="13.49" y="95.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (731,417 samples, 0.02%)</title><rect x="1189.2" y="117" width="0.3" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1192.20" y="127.5" ></text>
</g>
<g >
<title>kfree (10,191,757 samples, 0.33%)</title><rect x="1076.3" y="133" width="3.9" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1079.33" y="143.5" ></text>
</g>
<g >
<title>kvfree (140,486,549 samples, 4.51%)</title><rect x="473.4" y="149" width="53.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="476.42" y="159.5" >kvfree</text>
</g>
<g >
<title>__kmalloc_node (102,424,990 samples, 3.29%)</title><rect x="533.0" y="133" width="38.8" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="535.99" y="143.5" >__k..</text>
</g>
<g >
<title>__kmalloc_node (7,284,953 samples, 0.23%)</title><rect x="682.1" y="133" width="2.8" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="685.11" y="143.5" ></text>
</g>
<g >
<title>elf_map (712,045 samples, 0.02%)</title><rect x="10.5" y="133" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="13.49" y="143.5" ></text>
</g>
<g >
<title>lock_vma_under_rcu (581,217 samples, 0.02%)</title><rect x="1188.3" y="181" width="0.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1191.31" y="191.5" ></text>
</g>
<g >
<title>do_lookup_x (665,217 samples, 0.02%)</title><rect x="1188.9" y="245" width="0.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1191.95" y="255.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (3,655,886 samples, 0.12%)</title><rect x="571.8" y="133" width="1.4" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="574.80" y="143.5" ></text>
</g>
<g >
<title>bpf_prog_load (1,294,392 samples, 0.04%)</title><rect x="11.0" y="149" width="0.5" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="13.97" y="159.5" ></text>
</g>
<g >
<title>check_stack_object (19,004,272 samples, 0.61%)</title><rect x="337.2" y="133" width="7.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="340.24" y="143.5" ></text>
</g>
<g >
<title>unroll_tree_refs (5,822,277 samples, 0.19%)</title><rect x="1081.3" y="133" width="2.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1084.30" y="143.5" ></text>
</g>
<g >
<title>__GI___libc_open (630,233 samples, 0.02%)</title><rect x="10.2" y="229" width="0.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="13.20" y="239.5" ></text>
</g>
<g >
<title>__handle_mm_fault (617,112 samples, 0.02%)</title><rect x="37.4" y="117" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="40.40" y="127.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (731,417 samples, 0.02%)</title><rect x="1189.2" y="245" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1192.20" y="255.5" ></text>
</g>
<g >
<title>audit_reset_context (5,054,469 samples, 0.16%)</title><rect x="1083.5" y="149" width="1.9" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1086.51" y="159.5" ></text>
</g>
<g >
<title>kmalloc_slab (13,853,315 samples, 0.44%)</title><rect x="561.9" y="117" width="5.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="564.86" y="127.5" ></text>
</g>
<g >
<title>lookup_fast (630,233 samples, 0.02%)</title><rect x="10.2" y="85" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="13.20" y="95.5" ></text>
</g>
<g >
<title>__kmem_cache_free (18,198,954 samples, 0.58%)</title><rect x="477.8" y="133" width="6.9" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="480.83" y="143.5" ></text>
</g>
<g >
<title>__virt_addr_valid (93,694,010 samples, 3.01%)</title><rect x="646.3" y="117" width="35.5" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="649.33" y="127.5" >__v..</text>
</g>
<g >
<title>kfree (104,778,265 samples, 3.36%)</title><rect x="486.9" y="133" width="39.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="489.95" y="143.5" >kfree</text>
</g>
<g >
<title>kmalloc_slab (730,627 samples, 0.02%)</title><rect x="774.7" y="117" width="0.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="777.73" y="127.5" ></text>
</g>
<g >
<title>__x64_sys_bpf (1,321,110 samples, 0.04%)</title><rect x="1189.5" y="197" width="0.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.48" y="207.5" ></text>
</g>
<g >
<title>__x64_sys_openat (630,233 samples, 0.02%)</title><rect x="10.2" y="181" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="13.20" y="191.5" ></text>
</g>
<g >
<title>security_bpf (5,808,814 samples, 0.19%)</title><rect x="597.0" y="149" width="2.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="599.95" y="159.5" ></text>
</g>
<g >
<title>bpf_prog_alloc (641,924 samples, 0.02%)</title><rect x="11.2" y="133" width="0.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="14.22" y="143.5" ></text>
</g>
<g >
<title>bpf_check_uarg_tail_zero (10,207,098 samples, 0.33%)</title><rect x="782.7" y="165" width="3.9" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="785.70" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (2,738,333,718 samples, 87.91%)</title><rect x="55.8" y="213" width="1037.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="58.77" y="223.5" >entry_SYSCALL_64</text>
</g>
<g >
<title>__check_object_size (12,397,114 samples, 0.40%)</title><rect x="222.0" y="165" width="4.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="224.97" y="175.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,321,110 samples, 0.04%)</title><rect x="1189.5" y="213" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1192.48" y="223.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (117,838,230 samples, 3.78%)</title><rect x="709.4" y="101" width="44.6" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="712.40" y="111.5" >__km..</text>
</g>
<g >
<title>release_pages (731,417 samples, 0.02%)</title><rect x="1189.2" y="69" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1192.20" y="79.5" ></text>
</g>
<g >
<title>__libc_start_call_main (3,106,457,694 samples, 99.73%)</title><rect x="11.5" y="245" width="1176.8" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="14.46" y="255.5" >__libc_start_call_main</text>
</g>
<g >
<title>__check_heap_object (60,409,602 samples, 1.94%)</title><rect x="623.4" y="117" width="22.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="626.45" y="127.5" >_..</text>
</g>
<g >
<title>__fget_light (10,146,333 samples, 0.33%)</title><rect x="357.4" y="149" width="3.8" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="360.38" y="159.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (731,417 samples, 0.02%)</title><rect x="1189.2" y="101" width="0.3" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="1192.20" y="111.5" ></text>
</g>
<g >
<title>clear_page_erms (659,289 samples, 0.02%)</title><rect x="1189.7" y="37" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1192.73" y="47.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1,321,110 samples, 0.04%)</title><rect x="1189.5" y="229" width="0.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1192.48" y="239.5" ></text>
</g>
<g >
<title>kmalloc_slab (8,728,257 samples, 0.28%)</title><rect x="573.2" y="133" width="3.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="576.18" y="143.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (842,201 samples, 0.03%)</title><rect x="10.4" y="229" width="0.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="13.44" y="239.5" ></text>
</g>
<g >
<title>__sys_bpf (1,321,110 samples, 0.04%)</title><rect x="1189.5" y="181" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1192.48" y="191.5" ></text>
</g>
<g >
<title>dput (2,192,838 samples, 0.07%)</title><rect x="1063.7" y="117" width="0.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1066.66" y="127.5" ></text>
</g>
<g >
<title>security_bpf (5,842,448 samples, 0.19%)</title><rect x="814.5" y="165" width="2.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="817.45" y="175.5" ></text>
</g>
<g >
<title>__bpf_map_area_alloc (659,289 samples, 0.02%)</title><rect x="1189.7" y="117" width="0.3" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1192.73" y="127.5" ></text>
</g>
<g >
<title>link_path_walk.part.0.constprop.0 (630,233 samples, 0.02%)</title><rect x="10.2" y="117" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="13.20" y="127.5" ></text>
</g>
<g >
<title>__audit_syscall_entry (9,473,375 samples, 0.30%)</title><rect x="832.1" y="165" width="3.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="835.09" y="175.5" ></text>
</g>
<g >
<title>bpf_object__open_skeleton (617,112 samples, 0.02%)</title><rect x="37.4" y="197" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="40.40" y="207.5" ></text>
</g>
<g >
<title>dl_main (1,091,656 samples, 0.04%)</title><rect x="1188.5" y="213" width="0.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1191.53" y="223.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (603,915,294 samples, 19.39%)</title><rect x="856.6" y="181" width="228.8" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="859.64" y="191.5" >syscall_exit_to_user_mode</text>
</g>
<g >
<title>syscall (3,030,780,003 samples, 97.30%)</title><rect x="37.6" y="229" width="1148.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="40.64" y="239.5" >syscall</text>
</g>
<g >
<title>_dl_allocate_tls_storage (581,217 samples, 0.02%)</title><rect x="1188.3" y="245" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1191.31" y="255.5" ></text>
</g>
<g >
<title>syscall (1,294,392 samples, 0.04%)</title><rect x="11.0" y="229" width="0.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="13.97" y="239.5" ></text>
</g>
<g >
<title>__rcu_read_lock (5,104,790 samples, 0.16%)</title><rect x="363.2" y="149" width="1.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="366.15" y="159.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (531,729 samples, 0.02%)</title><rect x="10.0" y="149" width="0.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="13.00" y="159.5" ></text>
</g>
<g >
<title>load_elf_binary (842,201 samples, 0.03%)</title><rect x="10.4" y="149" width="0.4" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="13.44" y="159.5" ></text>
</g>
<g >
<title>__check_heap_object (10,186,206 samples, 0.33%)</title><rect x="287.6" y="149" width="3.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="290.63" y="159.5" ></text>
</g>
<g >
<title>kvfree (5,862,589 samples, 0.19%)</title><rect x="795.1" y="165" width="2.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="798.13" y="175.5" ></text>
</g>
<g >
<title>map_benchmark (3,114,705,670 samples, 100.00%)</title><rect x="10.0" y="261" width="1180.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="13.00" y="271.5" >map_benchmark</text>
</g>
<g >
<title>__rcu_read_unlock (5,809,198 samples, 0.19%)</title><rect x="365.1" y="149" width="2.2" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="368.09" y="159.5" ></text>
</g>
<g >
<title>__alloc_percpu_gfp (641,924 samples, 0.02%)</title><rect x="11.2" y="117" width="0.3" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="14.22" y="127.5" ></text>
</g>
<g >
<title>_copy_from_user (15,982,299 samples, 0.51%)</title><rect x="687.4" y="133" width="6.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="690.36" y="143.5" ></text>
</g>
<g >
<title>rep_movs_alternative (5,093,183 samples, 0.16%)</title><rect x="775.0" y="133" width="1.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="778.00" y="143.5" ></text>
</g>
<g >
<title>__alloc_percpu_gfp (661,821 samples, 0.02%)</title><rect x="1189.5" y="117" width="0.2" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1192.48" y="127.5" ></text>
</g>
<g >
<title>__kmalloc_node (5,102,204 samples, 0.16%)</title><rect x="361.2" y="149" width="2.0" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="364.22" y="159.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (731,417 samples, 0.02%)</title><rect x="1189.2" y="85" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1192.20" y="95.5" ></text>
</g>
<g >
<title>kfree (6,504,158 samples, 0.21%)</title><rect x="1064.5" y="117" width="2.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1067.49" y="127.5" ></text>
</g>
<g >
<title>migrate_enable (8,769,782 samples, 0.28%)</title><rect x="582.8" y="149" width="3.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="585.84" y="159.5" ></text>
</g>
<g >
<title>memcmp (24,116,498 samples, 0.77%)</title><rect x="433.2" y="117" width="9.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="436.18" y="127.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (9,489,910 samples, 0.30%)</title><rect x="1093.2" y="213" width="3.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1096.16" y="223.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (581,217 samples, 0.02%)</title><rect x="1188.3" y="229" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1191.31" y="239.5" ></text>
</g>
</g>
</svg>
