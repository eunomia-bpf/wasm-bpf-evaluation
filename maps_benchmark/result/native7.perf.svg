<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="406" onload="init(evt)" viewBox="0 0 1200 406" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="406.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="389" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="389" > </text>
<g id="frames">
<g >
<title>__hrtimer_run_queues (829,900 samples, 0.03%)</title><rect x="403.1" y="165" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="406.11" y="175.5" ></text>
</g>
<g >
<title>alloc_pages (254,978 samples, 0.01%)</title><rect x="1189.8" y="165" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1192.77" y="175.5" ></text>
</g>
<g >
<title>kfree (7,443,537 samples, 0.26%)</title><rect x="490.6" y="229" width="3.0" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="493.57" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_bpf (1,519,142 samples, 0.05%)</title><rect x="1189.4" y="277" width="0.6" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.36" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (515,070 samples, 0.02%)</title><rect x="10.9" y="293" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="13.87" y="303.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (631,820 samples, 0.02%)</title><rect x="10.2" y="213" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="13.17" y="223.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_array (1,128,538 samples, 0.04%)</title><rect x="395.8" y="229" width="0.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="398.84" y="239.5" ></text>
</g>
<g >
<title>syscall (515,070 samples, 0.02%)</title><rect x="10.9" y="309" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="13.87" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (394,375 samples, 0.01%)</title><rect x="10.7" y="293" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.71" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (267,317 samples, 0.01%)</title><rect x="53.7" y="293" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="56.66" y="303.5" ></text>
</g>
<g >
<title>tick_sched_handle (829,900 samples, 0.03%)</title><rect x="403.1" y="133" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="406.11" y="143.5" ></text>
</g>
<g >
<title>migrate_enable (16,743,863 samples, 0.58%)</title><rect x="461.9" y="213" width="6.8" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="464.94" y="223.5" ></text>
</g>
<g >
<title>htab_map_hash (43,633,082 samples, 1.50%)</title><rect x="420.7" y="213" width="17.7" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="423.71" y="223.5" ></text>
</g>
<g >
<title>audit_reset_context (4,185,942 samples, 0.14%)</title><rect x="1079.5" y="229" width="1.7" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1082.50" y="239.5" ></text>
</g>
<g >
<title>__libc_start_call_main (2,900,855,168 samples, 99.83%)</title><rect x="11.1" y="325" width="1178.0" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="14.07" y="335.5" >__libc_start_call_main</text>
</g>
<g >
<title>__cond_resched (252,703 samples, 0.01%)</title><rect x="1189.7" y="229" width="0.1" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="1192.66" y="239.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (854,247 samples, 0.03%)</title><rect x="37.8" y="181" width="0.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="40.75" y="191.5" ></text>
</g>
<g >
<title>kvmalloc_node (128,329,341 samples, 4.42%)</title><rect x="531.9" y="229" width="52.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="534.94" y="239.5" >kvmal..</text>
</g>
<g >
<title>fpregs_assert_state_consistent (4,467,474 samples, 0.15%)</title><rect x="1018.8" y="229" width="1.8" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1021.79" y="239.5" ></text>
</g>
<g >
<title>memset_orig (11,353,047 samples, 0.39%)</title><rect x="576.7" y="197" width="4.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="579.72" y="207.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (838,721 samples, 0.03%)</title><rect x="468.4" y="197" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="471.40" y="207.5" ></text>
</g>
<g >
<title>load_elf_binary (394,375 samples, 0.01%)</title><rect x="10.7" y="229" width="0.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="13.71" y="239.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (1,111,652 samples, 0.04%)</title><rect x="393.7" y="229" width="0.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="396.68" y="239.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,519,142 samples, 0.05%)</title><rect x="1189.4" y="293" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1192.36" y="303.5" ></text>
</g>
<g >
<title>kmalloc_slab (2,478,724 samples, 0.09%)</title><rect x="762.7" y="197" width="1.0" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="765.71" y="207.5" ></text>
</g>
<g >
<title>update_curr (267,317 samples, 0.01%)</title><rect x="53.7" y="133" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="56.66" y="143.5" ></text>
</g>
<g >
<title>syscall (1,519,142 samples, 0.05%)</title><rect x="1189.4" y="325" width="0.6" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1192.36" y="335.5" ></text>
</g>
<g >
<title>syscall_exit_work (146,739,888 samples, 5.05%)</title><rect x="1021.6" y="245" width="59.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1024.61" y="255.5" >syscal..</text>
</g>
<g >
<title>__sys_bpf (515,070 samples, 0.02%)</title><rect x="10.9" y="245" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="13.87" y="255.5" ></text>
</g>
<g >
<title>unroll_tree_refs (7,162,683 samples, 0.25%)</title><rect x="1067.9" y="197" width="2.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1070.87" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (394,375 samples, 0.01%)</title><rect x="10.7" y="309" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="13.71" y="319.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (854,247 samples, 0.03%)</title><rect x="37.8" y="245" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="40.75" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (515,070 samples, 0.02%)</title><rect x="10.9" y="277" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.87" y="287.5" ></text>
</g>
<g >
<title>__fdget (42,331,898 samples, 1.46%)</title><rect x="371.0" y="229" width="17.1" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="373.96" y="239.5" ></text>
</g>
<g >
<title>__alloc_pages (254,978 samples, 0.01%)</title><rect x="1189.8" y="149" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1192.77" y="159.5" ></text>
</g>
<g >
<title>main (29,122,708 samples, 1.00%)</title><rect x="26.3" y="309" width="11.8" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="29.27" y="319.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (829,900 samples, 0.03%)</title><rect x="403.1" y="197" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="406.11" y="207.5" ></text>
</g>
<g >
<title>scheduler_tick (267,317 samples, 0.01%)</title><rect x="53.7" y="165" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="56.66" y="175.5" ></text>
</g>
<g >
<title>map_benchmark (2,905,662,225 samples, 100.00%)</title><rect x="10.0" y="341" width="1180.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="13.00" y="351.5" >map_benchmark</text>
</g>
<g >
<title>get_page_from_freelist (253,819 samples, 0.01%)</title><rect x="11.0" y="149" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="13.97" y="159.5" ></text>
</g>
<g >
<title>post_alloc_hook (254,978 samples, 0.01%)</title><rect x="1189.8" y="133" width="0.1" height="15.0" fill="rgb(227,104,24)" rx="2" ry="2" />
<text  x="1192.77" y="143.5" ></text>
</g>
<g >
<title>_copy_from_user (7,814,763 samples, 0.27%)</title><rect x="765.8" y="245" width="3.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="768.75" y="255.5" ></text>
</g>
<g >
<title>__check_heap_object (7,838,828 samples, 0.27%)</title><rect x="616.2" y="213" width="3.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="619.16" y="223.5" ></text>
</g>
<g >
<title>memset (2,507,534 samples, 0.09%)</title><rect x="750.3" y="181" width="1.0" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="753.30" y="191.5" ></text>
</g>
<g >
<title>amd_clear_divider (14,511,542 samples, 0.50%)</title><rect x="802.4" y="261" width="5.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="805.44" y="271.5" ></text>
</g>
<g >
<title>tick_sched_handle (267,317 samples, 0.01%)</title><rect x="53.7" y="197" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="56.66" y="207.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (12,532,572 samples, 0.43%)</title><rect x="485.5" y="229" width="5.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="488.48" y="239.5" ></text>
</g>
<g >
<title>kfree (9,488,401 samples, 0.33%)</title><rect x="1070.8" y="213" width="3.8" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1073.78" y="223.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (60,589,396 samples, 2.09%)</title><rect x="544.9" y="197" width="24.6" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="547.90" y="207.5" >_..</text>
</g>
<g >
<title>check_stack_object (3,392,728 samples, 0.12%)</title><rect x="690.6" y="213" width="1.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="693.60" y="223.5" ></text>
</g>
<g >
<title>[unknown] (2,415,070 samples, 0.08%)</title><rect x="10.1" y="325" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.09" y="335.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (854,247 samples, 0.03%)</title><rect x="37.8" y="277" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="40.75" y="287.5" ></text>
</g>
<g >
<title>mntput (4,678,700 samples, 0.16%)</title><rect x="1060.0" y="197" width="1.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1062.98" y="207.5" ></text>
</g>
<g >
<title>memcpy_orig (5,652,423 samples, 0.19%)</title><rect x="584.5" y="229" width="2.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="587.51" y="239.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (4,482,499 samples, 0.15%)</title><rect x="760.9" y="197" width="1.8" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="763.89" y="207.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (10,590,436 samples, 0.36%)</title><rect x="808.3" y="261" width="4.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="811.33" y="271.5" ></text>
</g>
<g >
<title>path_put (5,282,270 samples, 0.18%)</title><rect x="1074.6" y="213" width="2.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1077.63" y="223.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (8,359,025 samples, 0.29%)</title><rect x="1084.6" y="277" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1087.57" y="287.5" ></text>
</g>
<g >
<title>__rcu_read_lock (281,643 samples, 0.01%)</title><rect x="420.6" y="213" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="423.60" y="223.5" ></text>
</g>
<g >
<title>__check_object_size (261,251 samples, 0.01%)</title><rect x="10.9" y="197" width="0.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="13.87" y="207.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (838,721 samples, 0.03%)</title><rect x="468.4" y="37" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="471.40" y="47.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (838,721 samples, 0.03%)</title><rect x="468.4" y="101" width="0.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="471.40" y="111.5" ></text>
</g>
<g >
<title>migrate_disable (10,365,379 samples, 0.36%)</title><rect x="586.8" y="229" width="4.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="589.81" y="239.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (838,721 samples, 0.03%)</title><rect x="468.4" y="85" width="0.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="471.40" y="95.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (829,900 samples, 0.03%)</title><rect x="403.1" y="181" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="406.11" y="191.5" ></text>
</g>
<g >
<title>check_stack_object (14,743,603 samples, 0.51%)</title><rect x="365.0" y="213" width="6.0" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="367.97" y="223.5" ></text>
</g>
<g >
<title>__kmalloc_large_node (253,819 samples, 0.01%)</title><rect x="11.0" y="181" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="13.97" y="191.5" ></text>
</g>
<g >
<title>kvmalloc_node (3,093,958 samples, 0.11%)</title><rect x="782.2" y="245" width="1.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="785.25" y="255.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (631,820 samples, 0.02%)</title><rect x="10.2" y="229" width="0.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="13.17" y="239.5" ></text>
</g>
<g >
<title>kvmalloc_node (250,467 samples, 0.01%)</title><rect x="1189.6" y="213" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1192.56" y="223.5" ></text>
</g>
<g >
<title>__cond_resched (1,701,179 samples, 0.06%)</title><rect x="703.4" y="181" width="0.7" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="706.39" y="191.5" ></text>
</g>
<g >
<title>security_bpf (7,216,382 samples, 0.25%)</title><rect x="601.7" y="229" width="2.9" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="604.69" y="239.5" ></text>
</g>
<g >
<title>__fdget (7,002,400 samples, 0.24%)</title><rect x="228.0" y="245" width="2.9" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="231.02" y="255.5" ></text>
</g>
<g >
<title>lookup_nulls_elem_raw (6,135,448 samples, 0.21%)</title><rect x="459.4" y="213" width="2.5" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="462.45" y="223.5" ></text>
</g>
<g >
<title>__check_heap_object (46,421,619 samples, 1.60%)</title><rect x="637.8" y="197" width="18.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="640.80" y="207.5" ></text>
</g>
<g >
<title>__cond_resched (2,245,224 samples, 0.08%)</title><rect x="544.0" y="197" width="0.9" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="546.99" y="207.5" ></text>
</g>
<g >
<title>map_create (766,051 samples, 0.03%)</title><rect x="1189.7" y="245" width="0.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1192.66" y="255.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (838,721 samples, 0.03%)</title><rect x="468.4" y="181" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="471.40" y="191.5" ></text>
</g>
<g >
<title>__kmalloc_node (156,603,581 samples, 5.39%)</title><rect x="697.3" y="197" width="63.6" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="700.30" y="207.5" >__kmal..</text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (8,391,315 samples, 0.29%)</title><rect x="746.9" y="181" width="3.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="749.89" y="191.5" ></text>
</g>
<g >
<title>__audit_syscall_entry (10,367,798 samples, 0.36%)</title><rect x="817.6" y="245" width="4.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="820.61" y="255.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (267,317 samples, 0.01%)</title><rect x="53.7" y="229" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="56.66" y="239.5" ></text>
</g>
<g >
<title>should_failslab (1,947,740 samples, 0.07%)</title><rect x="737.9" y="165" width="0.7" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="740.86" y="175.5" ></text>
</g>
<g >
<title>memcpy (1,135,956 samples, 0.04%)</title><rect x="584.1" y="229" width="0.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="587.05" y="239.5" ></text>
</g>
<g >
<title>kvfree (94,430,649 samples, 3.25%)</title><rect x="493.6" y="229" width="38.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="496.59" y="239.5" >kvf..</text>
</g>
<g >
<title>do_syscall_64 (631,820 samples, 0.02%)</title><rect x="10.2" y="245" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.17" y="255.5" ></text>
</g>
<g >
<title>anon_inode_getfd (256,050 samples, 0.01%)</title><rect x="1189.5" y="229" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1192.46" y="239.5" ></text>
</g>
<g >
<title>tick_sched_timer (829,900 samples, 0.03%)</title><rect x="403.1" y="149" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="406.11" y="159.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (854,247 samples, 0.03%)</title><rect x="37.8" y="261" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="40.75" y="271.5" ></text>
</g>
<g >
<title>bpf_map_lookup_elem (37,424,215 samples, 1.29%)</title><rect x="11.1" y="309" width="15.2" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.07" y="319.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (838,721 samples, 0.03%)</title><rect x="468.4" y="133" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="471.40" y="143.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (5,061,247 samples, 0.17%)</title><rect x="574.7" y="197" width="2.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="577.66" y="207.5" ></text>
</g>
<g >
<title>__kmalloc_node (3,373,465 samples, 0.12%)</title><rect x="391.3" y="229" width="1.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="394.31" y="239.5" ></text>
</g>
<g >
<title>__check_object_size (172,772,111 samples, 5.95%)</title><rect x="300.8" y="229" width="70.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="303.80" y="239.5" >__check..</text>
</g>
<g >
<title>rep_movs_alternative (21,868,360 samples, 0.75%)</title><rect x="592.8" y="229" width="8.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="595.81" y="239.5" ></text>
</g>
<g >
<title>htab_map_lookup_elem (8,627,221 samples, 0.30%)</title><rect x="482.0" y="229" width="3.5" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="484.97" y="239.5" ></text>
</g>
<g >
<title>__fget_light (42,331,898 samples, 1.46%)</title><rect x="371.0" y="213" width="17.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="373.96" y="223.5" ></text>
</g>
<g >
<title>__kmem_cache_free (47,238,614 samples, 1.63%)</title><rect x="512.8" y="197" width="19.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="515.75" y="207.5" ></text>
</g>
<g >
<title>__virt_addr_valid (3,048,223 samples, 0.10%)</title><rect x="685.4" y="213" width="1.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="688.36" y="223.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (267,317 samples, 0.01%)</title><rect x="53.7" y="277" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="56.66" y="287.5" ></text>
</g>
<g >
<title>__virt_addr_valid (261,251 samples, 0.01%)</title><rect x="10.9" y="181" width="0.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="13.87" y="191.5" ></text>
</g>
<g >
<title>htab_map_alloc (513,348 samples, 0.02%)</title><rect x="1189.8" y="229" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1192.77" y="239.5" ></text>
</g>
<g >
<title>perf_event_task_tick (829,900 samples, 0.03%)</title><rect x="403.1" y="85" width="0.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="406.11" y="95.5" ></text>
</g>
<g >
<title>__x64_sys_execve (394,375 samples, 0.01%)</title><rect x="10.7" y="277" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="13.71" y="287.5" ></text>
</g>
<g >
<title>_dl_map_object (631,820 samples, 0.02%)</title><rect x="10.2" y="293" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="13.17" y="303.5" ></text>
</g>
<g >
<title>update_process_times (267,317 samples, 0.01%)</title><rect x="53.7" y="181" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="56.66" y="191.5" ></text>
</g>
<g >
<title>__kmalloc_node (250,467 samples, 0.01%)</title><rect x="1189.6" y="197" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1192.56" y="207.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (641,624 samples, 0.02%)</title><rect x="1189.1" y="309" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1192.10" y="319.5" ></text>
</g>
<g >
<title>__kmalloc_node (113,224,192 samples, 3.90%)</title><rect x="535.3" y="213" width="46.0" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="538.35" y="223.5" >__km..</text>
</g>
<g >
<title>tick_sched_timer (854,247 samples, 0.03%)</title><rect x="37.8" y="213" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="40.75" y="223.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (6,708,996 samples, 0.23%)</title><rect x="581.3" y="213" width="2.8" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="584.33" y="223.5" ></text>
</g>
<g >
<title>mmap_region (631,820 samples, 0.02%)</title><rect x="10.2" y="165" width="0.2" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="13.17" y="175.5" ></text>
</g>
<g >
<title>__anon_inode_getfile (256,050 samples, 0.01%)</title><rect x="1189.5" y="213" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1192.46" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_bpf (1,430,707,278 samples, 49.24%)</title><rect x="221.4" y="261" width="581.0" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="224.43" y="271.5" >__x64_sys_bpf</text>
</g>
<g >
<title>vmemdup_user (3,034,818 samples, 0.10%)</title><rect x="801.2" y="245" width="1.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="804.21" y="255.5" ></text>
</g>
<g >
<title>__sys_bpf (7,561,642 samples, 0.26%)</title><rect x="218.4" y="261" width="3.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="221.36" y="271.5" ></text>
</g>
<g >
<title>do_mmap (631,820 samples, 0.02%)</title><rect x="10.2" y="181" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="13.17" y="191.5" ></text>
</g>
<g >
<title>memset_orig (250,467 samples, 0.01%)</title><rect x="1189.6" y="181" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="1192.56" y="191.5" ></text>
</g>
<g >
<title>memchr_inv (37,728,577 samples, 1.30%)</title><rect x="783.5" y="245" width="15.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="786.51" y="255.5" ></text>
</g>
<g >
<title>all (2,905,725,211 samples, 100%)</title><rect x="10.0" y="357" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>htab_map_lookup_elem (51,749,099 samples, 1.78%)</title><rect x="438.4" y="213" width="21.0" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="441.43" y="223.5" ></text>
</g>
<g >
<title>syscall_exit_work (1,375,687 samples, 0.05%)</title><rect x="1081.2" y="261" width="0.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1084.20" y="271.5" ></text>
</g>
<g >
<title>tick_sched_timer (267,317 samples, 0.01%)</title><rect x="53.7" y="213" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="56.66" y="223.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,157,564,771 samples, 74.25%)</title><rect x="208.4" y="277" width="876.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="211.39" y="287.5" >do_syscall_64</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (267,317 samples, 0.01%)</title><rect x="53.7" y="261" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="56.66" y="271.5" ></text>
</g>
<g >
<title>__fget_light (7,783,846 samples, 0.27%)</title><rect x="388.1" y="229" width="3.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="391.15" y="239.5" ></text>
</g>
<g >
<title>__check_heap_object (39,193,890 samples, 1.35%)</title><rect x="338.4" y="213" width="15.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="341.41" y="223.5" ></text>
</g>
<g >
<title>update_wall_time (854,247 samples, 0.03%)</title><rect x="37.8" y="165" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="40.75" y="175.5" ></text>
</g>
<g >
<title>pcpu_freelist_populate (258,370 samples, 0.01%)</title><rect x="1189.9" y="213" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1192.87" y="223.5" ></text>
</g>
<g >
<title>do_syscall_64 (6,997,981 samples, 0.24%)</title><rect x="53.8" y="293" width="2.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="56.77" y="303.5" ></text>
</g>
<g >
<title>__bpf_map_area_alloc (254,978 samples, 0.01%)</title><rect x="1189.8" y="197" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1192.77" y="207.5" ></text>
</g>
<g >
<title>path_put (14,747,795 samples, 0.51%)</title><rect x="1061.9" y="197" width="6.0" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1064.88" y="207.5" ></text>
</g>
<g >
<title>_copy_from_user (9,850,685 samples, 0.34%)</title><rect x="686.6" y="213" width="4.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="689.60" y="223.5" ></text>
</g>
<g >
<title>_copy_to_user (2,539,381 samples, 0.09%)</title><rect x="768.9" y="245" width="1.1" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="771.93" y="255.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (10,032,721 samples, 0.35%)</title><rect x="565.0" y="181" width="4.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="567.97" y="191.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (631,820 samples, 0.02%)</title><rect x="10.2" y="197" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="13.17" y="207.5" ></text>
</g>
<g >
<title>timekeeping_advance (854,247 samples, 0.03%)</title><rect x="37.8" y="149" width="0.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="40.75" y="159.5" ></text>
</g>
<g >
<title>_dl_start_user (641,624 samples, 0.02%)</title><rect x="1189.1" y="325" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1192.10" y="335.5" ></text>
</g>
<g >
<title>memcmp (15,655,869 samples, 0.54%)</title><rect x="453.1" y="197" width="6.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="456.09" y="207.5" ></text>
</g>
<g >
<title>kmalloc_slab (20,307,002 samples, 0.70%)</title><rect x="738.6" y="181" width="8.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="741.65" y="191.5" ></text>
</g>
<g >
<title>bpf_map_value_size (8,124,090 samples, 0.28%)</title><rect x="776.8" y="245" width="3.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="779.79" y="255.5" ></text>
</g>
<g >
<title>_copy_from_user (14,227,734 samples, 0.49%)</title><rect x="396.3" y="229" width="5.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="399.30" y="239.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (267,317 samples, 0.01%)</title><rect x="53.7" y="245" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="56.66" y="255.5" ></text>
</g>
<g >
<title>lookup_nulls_elem_raw (18,647,651 samples, 0.64%)</title><rect x="445.5" y="197" width="7.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="448.52" y="207.5" ></text>
</g>
<g >
<title>bpf_check_uarg_tail_zero (13,127,492 samples, 0.45%)</title><rect x="770.0" y="245" width="5.3" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="772.96" y="255.5" ></text>
</g>
<g >
<title>__kmalloc_node (8,810,474 samples, 0.30%)</title><rect x="681.8" y="213" width="3.6" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="684.78" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1,519,142 samples, 0.05%)</title><rect x="1189.4" y="309" width="0.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1192.36" y="319.5" ></text>
</g>
<g >
<title>should_failslab (1,131,816 samples, 0.04%)</title><rect x="569.0" y="181" width="0.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="572.05" y="191.5" ></text>
</g>
<g >
<title>bpf_int_jit_compile (246,574 samples, 0.01%)</title><rect x="1189.4" y="213" width="0.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1192.36" y="223.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (854,247 samples, 0.03%)</title><rect x="37.8" y="293" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="40.75" y="303.5" ></text>
</g>
<g >
<title>dl_main (444,314 samples, 0.02%)</title><rect x="1189.2" y="293" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1192.18" y="303.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (2,480,114 samples, 0.09%)</title><rect x="1020.6" y="245" width="1.0" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1023.60" y="255.5" ></text>
</g>
<g >
<title>__virt_addr_valid (61,885,857 samples, 2.13%)</title><rect x="656.6" y="197" width="25.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="659.65" y="207.5" >_..</text>
</g>
<g >
<title>bpf_prog_load (515,070 samples, 0.02%)</title><rect x="10.9" y="229" width="0.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="13.87" y="239.5" ></text>
</g>
<g >
<title>kfree (65,956,081 samples, 2.27%)</title><rect x="505.2" y="213" width="26.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="508.15" y="223.5" >k..</text>
</g>
<g >
<title>__check_object_size (16,206,609 samples, 0.56%)</title><rect x="221.4" y="245" width="6.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="224.43" y="255.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (2,446,817 samples, 0.08%)</title><rect x="692.0" y="213" width="1.0" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="694.97" y="223.5" ></text>
</g>
<g >
<title>dput (6,201,889 samples, 0.21%)</title><rect x="1052.7" y="197" width="2.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1055.69" y="207.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (829,900 samples, 0.03%)</title><rect x="403.1" y="213" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="406.11" y="223.5" ></text>
</g>
<g >
<title>scheduler_tick (829,900 samples, 0.03%)</title><rect x="403.1" y="101" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="406.11" y="111.5" ></text>
</g>
<g >
<title>tick_sched_timer (838,721 samples, 0.03%)</title><rect x="468.4" y="117" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="471.40" y="127.5" ></text>
</g>
<g >
<title>kmalloc_slab (12,691,560 samples, 0.44%)</title><rect x="569.5" y="197" width="5.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="572.51" y="207.5" ></text>
</g>
<g >
<title>bpf_prog_select_runtime (246,574 samples, 0.01%)</title><rect x="1189.4" y="229" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1192.36" y="239.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (6,132,405 samples, 0.21%)</title><rect x="1092.3" y="293" width="2.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1095.29" y="303.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (85,107,150 samples, 2.93%)</title><rect x="704.1" y="181" width="34.5" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="707.08" y="191.5" >__..</text>
</g>
<g >
<title>__kmem_cache_free (13,444,786 samples, 0.46%)</title><rect x="496.9" y="213" width="5.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="499.87" y="223.5" ></text>
</g>
<g >
<title>migrate_enable (4,425,095 samples, 0.15%)</title><rect x="591.0" y="229" width="1.8" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="594.02" y="239.5" ></text>
</g>
<g >
<title>prep_compound_page (253,819 samples, 0.01%)</title><rect x="11.0" y="133" width="0.1" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="13.97" y="143.5" ></text>
</g>
<g >
<title>rep_movs_alternative (5,009,166 samples, 0.17%)</title><rect x="763.7" y="213" width="2.1" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="766.72" y="223.5" ></text>
</g>
<g >
<title>btf_new_fd (506,517 samples, 0.02%)</title><rect x="1189.5" y="245" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1192.46" y="255.5" ></text>
</g>
<g >
<title>alloc_file_pseudo (256,050 samples, 0.01%)</title><rect x="1189.5" y="197" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1192.46" y="207.5" ></text>
</g>
<g >
<title>__x64_sys_bpf (515,070 samples, 0.02%)</title><rect x="10.9" y="261" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="13.87" y="271.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (829,900 samples, 0.03%)</title><rect x="403.1" y="229" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="406.11" y="239.5" ></text>
</g>
<g >
<title>__sys_bpf (1,317,165,979 samples, 45.33%)</title><rect x="230.9" y="245" width="534.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="233.86" y="255.5" >__sys_bpf</text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (48,607,897 samples, 1.67%)</title><rect x="821.8" y="245" width="19.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="824.82" y="255.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (8,618,588 samples, 0.30%)</title><rect x="1017.1" y="245" width="3.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1020.10" y="255.5" ></text>
</g>
<g >
<title>audit_reset_context (104,380,027 samples, 3.59%)</title><rect x="1028.4" y="213" width="42.4" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1031.39" y="223.5" >aud..</text>
</g>
<g >
<title>__check_heap_object (5,592,951 samples, 0.19%)</title><rect x="298.5" y="229" width="2.3" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="301.52" y="239.5" ></text>
</g>
<g >
<title>syscall (2,831,517,043 samples, 97.45%)</title><rect x="38.1" y="309" width="1149.9" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="41.10" y="319.5" >syscall</text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (6,920,078 samples, 0.24%)</title><rect x="1081.8" y="261" width="2.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1084.76" y="271.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (829,900 samples, 0.03%)</title><rect x="403.1" y="69" width="0.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="406.11" y="79.5" ></text>
</g>
<g >
<title>__check_object_size (153,751,041 samples, 5.29%)</title><rect x="619.3" y="213" width="62.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="622.34" y="223.5" >__chec..</text>
</g>
<g >
<title>should_failslab (283,518 samples, 0.01%)</title><rect x="760.8" y="181" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="763.78" y="191.5" ></text>
</g>
<g >
<title>update_process_times (829,900 samples, 0.03%)</title><rect x="403.1" y="117" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="406.11" y="127.5" ></text>
</g>
<g >
<title>__vmalloc_node_range (254,978 samples, 0.01%)</title><rect x="1189.8" y="181" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1192.77" y="191.5" ></text>
</g>
<g >
<title>__virt_addr_valid (26,213,995 samples, 0.90%)</title><rect x="354.3" y="213" width="10.7" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="357.32" y="223.5" ></text>
</g>
<g >
<title>kvmalloc_node (174,228,547 samples, 6.00%)</title><rect x="693.0" y="213" width="70.7" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="695.97" y="223.5" >kvmallo..</text>
</g>
<g >
<title>security_bpf (5,856,442 samples, 0.20%)</title><rect x="798.8" y="245" width="2.4" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="801.83" y="255.5" ></text>
</g>
<g >
<title>bpf_map_copy_value (3,681,670 samples, 0.13%)</title><rect x="775.3" y="245" width="1.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="778.29" y="255.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (229,456,907 samples, 7.90%)</title><rect x="1094.8" y="293" width="93.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1097.78" y="303.5" >syscall_ret..</text>
</g>
<g >
<title>is_vmalloc_addr (6,950,563 samples, 0.24%)</title><rect x="502.3" y="213" width="2.9" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="505.33" y="223.5" ></text>
</g>
<g >
<title>task_tick_fair (267,317 samples, 0.01%)</title><rect x="53.7" y="149" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="56.66" y="159.5" ></text>
</g>
<g >
<title>kmalloc_large (253,819 samples, 0.01%)</title><rect x="11.0" y="197" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="13.97" y="207.5" ></text>
</g>
<g >
<title>bprm_execve (394,375 samples, 0.01%)</title><rect x="10.7" y="245" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="13.71" y="255.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (1,688,705 samples, 0.06%)</title><rect x="1016.4" y="245" width="0.7" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1019.41" y="255.5" ></text>
</g>
<g >
<title>bpf_map_copy_value (160,782,345 samples, 5.53%)</title><rect x="403.4" y="229" width="65.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="406.44" y="239.5" >bpf_map..</text>
</g>
<g >
<title>__alloc_pages (253,819 samples, 0.01%)</title><rect x="11.0" y="165" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="13.97" y="175.5" ></text>
</g>
<g >
<title>timekeeping_advance (838,721 samples, 0.03%)</title><rect x="468.4" y="53" width="0.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="471.40" y="63.5" ></text>
</g>
<g >
<title>update_wall_time (838,721 samples, 0.03%)</title><rect x="468.4" y="69" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="471.40" y="79.5" ></text>
</g>
<g >
<title>__x64_sys_bpf (9,435,919 samples, 0.32%)</title><rect x="204.6" y="277" width="3.8" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="207.56" y="287.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (854,247 samples, 0.03%)</title><rect x="37.8" y="229" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="40.75" y="239.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (10,666,790 samples, 0.37%)</title><rect x="1088.0" y="277" width="4.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1090.96" y="287.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (854,247 samples, 0.03%)</title><rect x="37.8" y="133" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="40.75" y="143.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (71,224,833 samples, 2.45%)</title><rect x="812.6" y="261" width="29.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="815.63" y="271.5" >sy..</text>
</g>
<g >
<title>bpf_prog_load (246,574 samples, 0.01%)</title><rect x="1189.4" y="245" width="0.1" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="1192.36" y="255.5" ></text>
</g>
<g >
<title>vmemdup_user (396,777,877 samples, 13.66%)</title><rect x="604.6" y="229" width="161.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="607.62" y="239.5" >vmemdup_user</text>
</g>
<g >
<title>__virt_addr_valid (4,189,783 samples, 0.14%)</title><rect x="394.1" y="229" width="1.7" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="397.14" y="239.5" ></text>
</g>
<g >
<title>__audit_syscall_entry (12,837,785 samples, 0.44%)</title><rect x="836.3" y="229" width="5.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="839.34" y="239.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (838,721 samples, 0.03%)</title><rect x="468.4" y="165" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="471.40" y="175.5" ></text>
</g>
<g >
<title>bpf_map_area_alloc (254,978 samples, 0.01%)</title><rect x="1189.8" y="213" width="0.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1192.77" y="223.5" ></text>
</g>
<g >
<title>kfree (11,745,599 samples, 0.40%)</title><rect x="1055.2" y="197" width="4.8" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1058.21" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (2,550,345,954 samples, 87.77%)</title><rect x="56.6" y="293" width="1035.7" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="59.61" y="303.5" >entry_SYSCALL_64</text>
</g>
<g >
<title>_raw_spin_lock (256,050 samples, 0.01%)</title><rect x="1189.5" y="181" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1192.46" y="191.5" ></text>
</g>
<g >
<title>__rcu_read_lock (2,474,263 samples, 0.09%)</title><rect x="392.7" y="229" width="1.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="395.68" y="239.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (838,721 samples, 0.03%)</title><rect x="468.4" y="149" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="471.40" y="159.5" ></text>
</g>
<g >
<title>btf_check_all_metas (250,467 samples, 0.01%)</title><rect x="1189.6" y="229" width="0.1" height="15.0" fill="rgb(239,157,37)" rx="2" ry="2" />
<text  x="1192.56" y="239.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (131,676,157 samples, 4.53%)</title><rect x="1026.0" y="229" width="53.5" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1029.02" y="239.5" >__aud..</text>
</g>
<g >
<title>_copy_to_user (2,546,483 samples, 0.09%)</title><rect x="402.1" y="229" width="1.0" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="405.07" y="239.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (590,111,255 samples, 20.31%)</title><rect x="841.6" y="261" width="239.6" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="844.56" y="271.5" >syscall_exit_to_user_mode</text>
</g>
<g >
<title>unroll_tree_refs (6,692,289 samples, 0.23%)</title><rect x="1076.8" y="213" width="2.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1079.78" y="223.5" ></text>
</g>
<g >
<title>memset_orig (23,292,838 samples, 0.80%)</title><rect x="751.3" y="181" width="9.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="754.32" y="191.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (11,385,711 samples, 0.39%)</title><rect x="733.2" y="165" width="4.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="736.23" y="175.5" ></text>
</g>
<g >
<title>[unknown] (817,139 samples, 0.03%)</title><rect x="10.1" y="309" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.09" y="319.5" ></text>
</g>
<g >
<title>check_stack_object (32,593,974 samples, 1.12%)</title><rect x="468.7" y="229" width="13.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="471.74" y="239.5" ></text>
</g>
<g >
<title>__sys_bpf (1,519,142 samples, 0.05%)</title><rect x="1189.4" y="261" width="0.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1192.36" y="271.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (854,247 samples, 0.03%)</title><rect x="37.8" y="197" width="0.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="40.75" y="207.5" ></text>
</g>
<g >
<title>bpf_check (515,070 samples, 0.02%)</title><rect x="10.9" y="213" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="13.87" y="223.5" ></text>
</g>
<g >
<title>kvfree (5,331,099 samples, 0.18%)</title><rect x="780.1" y="245" width="2.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="783.08" y="255.5" ></text>
</g>
<g >
<title>syscall@plt (2,791,202 samples, 0.10%)</title><rect x="1188.0" y="309" width="1.1" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1190.96" y="319.5" ></text>
</g>
<g >
<title>mmap64 (631,820 samples, 0.02%)</title><rect x="10.2" y="277" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="13.17" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (631,820 samples, 0.02%)</title><rect x="10.2" y="261" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="13.17" y="271.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (394,375 samples, 0.01%)</title><rect x="10.7" y="261" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="13.71" y="271.5" ></text>
</g>
</g>
</svg>
