<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="454" onload="init(evt)" viewBox="0 0 1200 454" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="454.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="437" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="437" > </text>
<g id="frames">
<g >
<title>security_bpf (8,090,169 samples, 0.28%)</title><rect x="594.7" y="277" width="3.3" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="597.70" y="287.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (59,790,387 samples, 2.08%)</title><rect x="534.9" y="245" width="24.6" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="537.91" y="255.5" >_..</text>
</g>
<g >
<title>load_elf_binary (697,205 samples, 0.02%)</title><rect x="10.6" y="277" width="0.3" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="13.64" y="287.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (6,883,040 samples, 0.24%)</title><rect x="556.6" y="229" width="2.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="559.62" y="239.5" ></text>
</g>
<g >
<title>scheduler_tick (1,364,098 samples, 0.05%)</title><rect x="64.2" y="213" width="0.5" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="67.17" y="223.5" ></text>
</g>
<g >
<title>audit_reset_context (75,384,161 samples, 2.62%)</title><rect x="1033.7" y="261" width="30.9" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1036.66" y="271.5" >au..</text>
</g>
<g >
<title>d_alloc_pseudo (819,652 samples, 0.03%)</title><rect x="10.9" y="213" width="0.4" height="15.0" fill="rgb(223,87,20)" rx="2" ry="2" />
<text  x="13.93" y="223.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (821,383 samples, 0.03%)</title><rect x="788.0" y="245" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="790.97" y="255.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (679,931 samples, 0.02%)</title><rect x="403.9" y="197" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="406.89" y="207.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (523,130 samples, 0.02%)</title><rect x="10.6" y="229" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="13.64" y="239.5" ></text>
</g>
<g >
<title>kvfree (122,749,920 samples, 4.27%)</title><rect x="469.4" y="277" width="50.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="472.42" y="287.5" >kvfree</text>
</g>
<g >
<title>fpregs_assert_state_consistent (6,981,191 samples, 0.24%)</title><rect x="1023.7" y="293" width="2.8" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1026.68" y="303.5" ></text>
</g>
<g >
<title>arch_scale_freq_tick (682,590 samples, 0.02%)</title><rect x="675.1" y="85" width="0.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="678.09" y="95.5" ></text>
</g>
<g >
<title>kvfree (2,169,038 samples, 0.08%)</title><rect x="788.3" y="293" width="0.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="791.30" y="303.5" ></text>
</g>
<g >
<title>load_balance (681,942 samples, 0.02%)</title><rect x="64.7" y="229" width="0.3" height="15.0" fill="rgb(226,96,23)" rx="2" ry="2" />
<text  x="67.73" y="239.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (38,867,201 samples, 1.35%)</title><rect x="823.7" y="293" width="15.9" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="826.66" y="303.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (8,077,172 samples, 0.28%)</title><rect x="1073.9" y="309" width="3.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1076.94" y="319.5" ></text>
</g>
<g >
<title>task_tick_fair (682,297 samples, 0.02%)</title><rect x="64.5" y="197" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="67.45" y="207.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (681,613 samples, 0.02%)</title><rect x="387.2" y="261" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="390.21" y="271.5" ></text>
</g>
<g >
<title>bpf_map_copy_value (4,389,848 samples, 0.15%)</title><rect x="780.0" y="293" width="1.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="783.00" y="303.5" ></text>
</g>
<g >
<title>tick_sched_handle (679,931 samples, 0.02%)</title><rect x="403.9" y="165" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="406.89" y="175.5" ></text>
</g>
<g >
<title>kmalloc_slab (17,732,971 samples, 0.62%)</title><rect x="745.9" y="229" width="7.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="748.89" y="239.5" ></text>
</g>
<g >
<title>check_stack_object (2,729,303 samples, 0.09%)</title><rect x="680.2" y="261" width="1.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="683.21" y="271.5" ></text>
</g>
<g >
<title>__sys_bpf (1,280,095,671 samples, 44.53%)</title><rect x="244.8" y="293" width="525.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="247.84" y="303.5" >__sys_bpf</text>
</g>
<g >
<title>kfree (5,797,604 samples, 0.20%)</title><rect x="1053.6" y="245" width="2.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1056.59" y="255.5" ></text>
</g>
<g >
<title>[unknown] (2,262,238 samples, 0.08%)</title><rect x="10.3" y="373" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.33" y="383.5" ></text>
</g>
<g >
<title>raw_notifier_call_chain (681,427 samples, 0.02%)</title><rect x="63.3" y="165" width="0.2" height="15.0" fill="rgb(221,73,17)" rx="2" ry="2" />
<text  x="66.27" y="175.5" ></text>
</g>
<g >
<title>task_work_add (682,091 samples, 0.02%)</title><rect x="675.4" y="85" width="0.3" height="15.0" fill="rgb(244,179,43)" rx="2" ry="2" />
<text  x="678.37" y="95.5" ></text>
</g>
<g >
<title>rb_insert_color (681,975 samples, 0.02%)</title><rect x="556.3" y="133" width="0.3" height="15.0" fill="rgb(238,156,37)" rx="2" ry="2" />
<text  x="559.34" y="143.5" ></text>
</g>
<g >
<title>update_process_times (679,931 samples, 0.02%)</title><rect x="403.9" y="149" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="406.89" y="159.5" ></text>
</g>
<g >
<title>do_mmap (745,381 samples, 0.03%)</title><rect x="10.3" y="229" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="13.33" y="239.5" ></text>
</g>
<g >
<title>cpuacct_account_field (680,527 samples, 0.02%)</title><rect x="823.4" y="117" width="0.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="826.38" y="127.5" ></text>
</g>
<g >
<title>kmem_cache_free (831,979 samples, 0.03%)</title><rect x="1189.0" y="213" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1192.00" y="223.5" ></text>
</g>
<g >
<title>scheduler_tick (1,364,681 samples, 0.05%)</title><rect x="675.1" y="101" width="0.6" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="678.09" y="111.5" ></text>
</g>
<g >
<title>update_sd_lb_stats.constprop.0 (681,942 samples, 0.02%)</title><rect x="64.7" y="213" width="0.3" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="67.73" y="223.5" ></text>
</g>
<g >
<title>__rcu_read_lock (2,045,720 samples, 0.07%)</title><rect x="376.0" y="277" width="0.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="379.04" y="287.5" ></text>
</g>
<g >
<title>update_process_times (1,364,098 samples, 0.05%)</title><rect x="64.2" y="229" width="0.5" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="67.17" y="239.5" ></text>
</g>
<g >
<title>mmap_region (523,130 samples, 0.02%)</title><rect x="10.6" y="197" width="0.3" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="13.64" y="207.5" ></text>
</g>
<g >
<title>__check_heap_object (9,906,413 samples, 0.34%)</title><rect x="610.7" y="261" width="4.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="613.73" y="271.5" ></text>
</g>
<g >
<title>update_wall_time (681,613 samples, 0.02%)</title><rect x="387.2" y="149" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="390.21" y="159.5" ></text>
</g>
<g >
<title>timekeeping_advance (4,935,627 samples, 0.17%)</title><rect x="62.1" y="197" width="2.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="65.15" y="207.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (681,426 samples, 0.02%)</title><rect x="744.7" y="149" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="747.68" y="159.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (681,426 samples, 0.02%)</title><rect x="744.7" y="85" width="0.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="747.68" y="95.5" ></text>
</g>
<g >
<title>timekeeping_update (2,208,342 samples, 0.08%)</title><rect x="63.3" y="181" width="0.9" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="66.27" y="191.5" ></text>
</g>
<g >
<title>__virt_addr_valid (67,535,586 samples, 2.35%)</title><rect x="648.2" y="245" width="27.7" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="651.21" y="255.5" >_..</text>
</g>
<g >
<title>is_vmalloc_addr (6,030,141 samples, 0.21%)</title><rect x="681.3" y="261" width="2.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="684.33" y="271.5" ></text>
</g>
<g >
<title>_dl_start_user (800,033 samples, 0.03%)</title><rect x="1188.7" y="373" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1191.67" y="383.5" ></text>
</g>
<g >
<title>kvmalloc_node (138,673,998 samples, 4.82%)</title><rect x="519.8" y="277" width="56.9" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="522.81" y="287.5" >kvmall..</text>
</g>
<g >
<title>__virt_addr_valid (11,129,525 samples, 0.39%)</title><rect x="378.2" y="277" width="4.5" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="381.17" y="287.5" ></text>
</g>
<g >
<title>migrate_disable (11,217,156 samples, 0.39%)</title><rect x="577.9" y="277" width="4.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="580.92" y="287.5" ></text>
</g>
<g >
<title>unroll_tree_refs (5,440,809 samples, 0.19%)</title><rect x="1062.4" y="245" width="2.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1065.37" y="255.5" ></text>
</g>
<g >
<title>map_benchmark (2,874,354,419 samples, 100.00%)</title><rect x="10.0" y="389" width="1180.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="13.00" y="399.5" >map_benchmark</text>
</g>
<g >
<title>__kmalloc_node (182,872,185 samples, 6.36%)</title><rect x="689.0" y="245" width="75.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="691.98" y="255.5" >__kmallo..</text>
</g>
<g >
<title>hrtimer_interrupt (679,931 samples, 0.02%)</title><rect x="403.9" y="213" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="406.89" y="223.5" ></text>
</g>
<g >
<title>kfree (11,587,024 samples, 0.40%)</title><rect x="1064.6" y="261" width="4.8" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1067.60" y="271.5" ></text>
</g>
<g >
<title>rebalance_domains (681,942 samples, 0.02%)</title><rect x="64.7" y="245" width="0.3" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="67.73" y="255.5" ></text>
</g>
<g >
<title>update_wall_time (681,426 samples, 0.02%)</title><rect x="744.7" y="69" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="747.68" y="79.5" ></text>
</g>
<g >
<title>__kmem_cache_free (9,658,526 samples, 0.34%)</title><rect x="472.9" y="261" width="4.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="475.91" y="271.5" ></text>
</g>
<g >
<title>perf_event_mmap (523,130 samples, 0.02%)</title><rect x="10.6" y="181" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="13.64" y="191.5" ></text>
</g>
<g >
<title>lookup_nulls_elem_raw (16,733,822 samples, 0.58%)</title><rect x="423.4" y="245" width="6.9" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="426.41" y="255.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (4,935,627 samples, 0.17%)</title><rect x="62.1" y="245" width="2.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="65.15" y="255.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (2,880,708 samples, 0.10%)</title><rect x="1022.5" y="277" width="1.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1025.49" y="287.5" ></text>
</g>
<g >
<title>mmput (831,979 samples, 0.03%)</title><rect x="1189.0" y="293" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1192.00" y="303.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (2,044,972 samples, 0.07%)</title><rect x="675.1" y="213" width="0.8" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="678.09" y="223.5" ></text>
</g>
<g >
<title>update_wall_time (4,935,627 samples, 0.17%)</title><rect x="62.1" y="213" width="2.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="65.15" y="223.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (802,420 samples, 0.03%)</title><rect x="519.5" y="229" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="522.48" y="239.5" ></text>
</g>
<g >
<title>tick_sched_handle (680,527 samples, 0.02%)</title><rect x="823.4" y="197" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="826.38" y="207.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (681,426 samples, 0.02%)</title><rect x="744.7" y="133" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="747.68" y="143.5" ></text>
</g>
<g >
<title>__kmem_cache_free (74,898,572 samples, 2.61%)</title><rect x="489.1" y="245" width="30.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="492.06" y="255.5" >__..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (681,426 samples, 0.02%)</title><rect x="744.7" y="197" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="747.68" y="207.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (6,981,667 samples, 0.24%)</title><rect x="62.1" y="325" width="2.9" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="65.15" y="335.5" ></text>
</g>
<g >
<title>elf_map (523,130 samples, 0.02%)</title><rect x="10.6" y="261" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="13.64" y="271.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (681,613 samples, 0.02%)</title><rect x="387.2" y="117" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="390.21" y="127.5" ></text>
</g>
<g >
<title>do_syscall_64 (745,381 samples, 0.03%)</title><rect x="10.3" y="293" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.33" y="303.5" ></text>
</g>
<g >
<title>pvclock_gtod_notify (681,427 samples, 0.02%)</title><rect x="63.3" y="149" width="0.2" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="66.27" y="159.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (2,727,285 samples, 0.09%)</title><rect x="62.1" y="181" width="1.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="65.15" y="191.5" ></text>
</g>
<g >
<title>tick_sched_handle (821,383 samples, 0.03%)</title><rect x="788.0" y="181" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="790.97" y="191.5" ></text>
</g>
<g >
<title>__audit_syscall_entry (11,148,106 samples, 0.39%)</title><rect x="835.0" y="277" width="4.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="838.04" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1,560,862 samples, 0.05%)</title><rect x="1189.3" y="357" width="0.7" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1192.34" y="367.5" ></text>
</g>
<g >
<title>__sys_bpf (1,560,862 samples, 0.05%)</title><rect x="1189.3" y="309" width="0.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1192.34" y="319.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (13,248,261 samples, 0.46%)</title><rect x="463.4" y="277" width="5.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="466.36" y="287.5" ></text>
</g>
<g >
<title>[libelf-0.188.so] (813,680 samples, 0.03%)</title><rect x="10.0" y="373" width="0.3" height="15.0" fill="rgb(211,31,7)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (2,480,307,163 samples, 86.29%)</title><rect x="67.2" y="341" width="1018.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="70.18" y="351.5" >entry_SYSCALL_64</text>
</g>
<g >
<title>__rcu_read_unlock (3,148,258 samples, 0.11%)</title><rect x="376.9" y="277" width="1.3" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="379.88" y="287.5" ></text>
</g>
<g >
<title>__cond_resched (2,189,901 samples, 0.08%)</title><rect x="698.4" y="229" width="0.9" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="701.39" y="239.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (6,981,667 samples, 0.24%)</title><rect x="62.1" y="341" width="2.9" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="65.15" y="351.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (681,613 samples, 0.02%)</title><rect x="387.2" y="277" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="390.21" y="287.5" ></text>
</g>
<g >
<title>tick_program_event (680,291 samples, 0.02%)</title><rect x="675.7" y="165" width="0.2" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="678.65" y="175.5" ></text>
</g>
<g >
<title>exit_mmap (831,979 samples, 0.03%)</title><rect x="1189.0" y="261" width="0.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1192.00" y="271.5" ></text>
</g>
<g >
<title>kfree (101,861,751 samples, 3.54%)</title><rect x="478.0" y="261" width="41.8" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="480.99" y="271.5" >kfree</text>
</g>
<g >
<title>entry_SYSCALL_64 (819,652 samples, 0.03%)</title><rect x="10.9" y="341" width="0.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="13.93" y="351.5" ></text>
</g>
<g >
<title>htab_map_lookup_elem (11,446,521 samples, 0.40%)</title><rect x="458.7" y="277" width="4.7" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="461.66" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (697,205 samples, 0.02%)</title><rect x="10.6" y="357" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="13.64" y="367.5" ></text>
</g>
<g >
<title>trigger_load_balance (679,931 samples, 0.02%)</title><rect x="403.9" y="117" width="0.3" height="15.0" fill="rgb(228,108,26)" rx="2" ry="2" />
<text  x="406.89" y="127.5" ></text>
</g>
<g >
<title>__slab_free (831,979 samples, 0.03%)</title><rect x="1189.0" y="197" width="0.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1192.00" y="207.5" ></text>
</g>
<g >
<title>account_system_index_time (680,527 samples, 0.02%)</title><rect x="823.4" y="133" width="0.3" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="826.38" y="143.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (821,383 samples, 0.03%)</title><rect x="788.0" y="213" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="790.97" y="223.5" ></text>
</g>
<g >
<title>__fdget (25,902,160 samples, 0.90%)</title><rect x="360.8" y="277" width="10.6" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="363.75" y="287.5" ></text>
</g>
<g >
<title>migrate_enable (13,593,809 samples, 0.47%)</title><rect x="439.8" y="261" width="5.6" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="442.83" y="271.5" ></text>
</g>
<g >
<title>native_read_msr (682,590 samples, 0.02%)</title><rect x="675.1" y="69" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="678.09" y="79.5" ></text>
</g>
<g >
<title>__unfreeze_partials (831,979 samples, 0.03%)</title><rect x="1189.0" y="165" width="0.3" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="1192.00" y="175.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (802,420 samples, 0.03%)</title><rect x="519.5" y="69" width="0.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="522.48" y="79.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (679,931 samples, 0.02%)</title><rect x="403.9" y="245" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="406.89" y="255.5" ></text>
</g>
<g >
<title>__sys_bpf (819,652 samples, 0.03%)</title><rect x="10.9" y="293" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="13.93" y="303.5" ></text>
</g>
<g >
<title>__fget_light (5,188,173 samples, 0.18%)</title><rect x="371.4" y="277" width="2.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="374.39" y="287.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (745,381 samples, 0.03%)</title><rect x="10.3" y="245" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="13.33" y="255.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (697,205 samples, 0.02%)</title><rect x="10.6" y="309" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="13.64" y="319.5" ></text>
</g>
<g >
<title>__irqentry_text_end (682,855 samples, 0.02%)</title><rect x="61.9" y="341" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="64.87" y="351.5" ></text>
</g>
<g >
<title>kmalloc_slab (4,795,634 samples, 0.17%)</title><rect x="574.8" y="261" width="1.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="577.77" y="271.5" ></text>
</g>
<g >
<title>[vmlinux] (831,979 samples, 0.03%)</title><rect x="1189.0" y="341" width="0.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1192.00" y="351.5" ></text>
</g>
<g >
<title>syscall@plt (3,847,931 samples, 0.13%)</title><rect x="1187.1" y="357" width="1.6" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1190.09" y="367.5" ></text>
</g>
<g >
<title>tick_sched_timer (681,426 samples, 0.02%)</title><rect x="744.7" y="117" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="747.68" y="127.5" ></text>
</g>
<g >
<title>vm_mmap (523,130 samples, 0.02%)</title><rect x="10.6" y="245" width="0.3" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="13.64" y="255.5" ></text>
</g>
<g >
<title>__check_object_size (14,041,212 samples, 0.49%)</title><rect x="237.1" y="293" width="5.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="240.11" y="303.5" ></text>
</g>
<g >
<title>scheduler_tick (802,420 samples, 0.03%)</title><rect x="519.5" y="101" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="522.48" y="111.5" ></text>
</g>
<g >
<title>tick_sched_timer (6,299,725 samples, 0.22%)</title><rect x="62.1" y="261" width="2.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="65.15" y="271.5" ></text>
</g>
<g >
<title>_dl_relocate_object (800,033 samples, 0.03%)</title><rect x="1188.7" y="325" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1191.67" y="335.5" ></text>
</g>
<g >
<title>mmap64 (745,381 samples, 0.03%)</title><rect x="10.3" y="325" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="13.33" y="335.5" ></text>
</g>
<g >
<title>__fget_light (25,902,160 samples, 0.90%)</title><rect x="360.8" y="261" width="10.6" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="363.75" y="271.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (4,935,627 samples, 0.17%)</title><rect x="62.1" y="229" width="2.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="65.15" y="239.5" ></text>
</g>
<g >
<title>unroll_tree_refs (2,046,154 samples, 0.07%)</title><rect x="1070.3" y="261" width="0.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1073.25" y="271.5" ></text>
</g>
<g >
<title>audit_reset_context (4,632,499 samples, 0.16%)</title><rect x="1071.1" y="277" width="1.9" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1074.09" y="287.5" ></text>
</g>
<g >
<title>tick_sched_timer (681,613 samples, 0.02%)</title><rect x="387.2" y="197" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="390.21" y="207.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (821,383 samples, 0.03%)</title><rect x="788.0" y="117" width="0.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="790.97" y="127.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (813,680 samples, 0.03%)</title><rect x="10.0" y="309" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (5,286,689 samples, 0.18%)</title><rect x="65.0" y="341" width="2.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="68.01" y="351.5" ></text>
</g>
<g >
<title>__alloc_percpu_gfp (818,007 samples, 0.03%)</title><rect x="1189.3" y="245" width="0.4" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1192.34" y="255.5" ></text>
</g>
<g >
<title>__audit_syscall_entry (4,364,739 samples, 0.15%)</title><rect x="821.6" y="293" width="1.8" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="824.59" y="303.5" ></text>
</g>
<g >
<title>scheduler_tick (679,931 samples, 0.02%)</title><rect x="403.9" y="133" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="406.89" y="143.5" ></text>
</g>
<g >
<title>do_group_exit (831,979 samples, 0.03%)</title><rect x="1189.0" y="325" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1192.00" y="335.5" ></text>
</g>
<g >
<title>[unknown] (745,381 samples, 0.03%)</title><rect x="10.3" y="357" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.33" y="367.5" ></text>
</g>
<g >
<title>pcpu_freelist_populate (742,855 samples, 0.03%)</title><rect x="1189.7" y="261" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1192.68" y="271.5" ></text>
</g>
<g >
<title>should_failslab (838,766 samples, 0.03%)</title><rect x="763.7" y="229" width="0.4" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="766.71" y="239.5" ></text>
</g>
<g >
<title>check_stack_object (12,507,988 samples, 0.44%)</title><rect x="355.6" y="261" width="5.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="358.62" y="271.5" ></text>
</g>
<g >
<title>vmemdup_user (419,762,788 samples, 14.60%)</title><rect x="598.0" y="277" width="172.3" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="601.02" y="287.5" >vmemdup_user</text>
</g>
<g >
<title>syscall_exit_to_user_mode (568,498,181 samples, 19.78%)</title><rect x="839.6" y="309" width="233.4" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="842.61" y="319.5" >syscall_exit_to_user_mode</text>
</g>
<g >
<title>hrtimer_interrupt (821,383 samples, 0.03%)</title><rect x="788.0" y="229" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="790.97" y="239.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (813,680 samples, 0.03%)</title><rect x="10.0" y="357" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>mntput (3,571,017 samples, 0.12%)</title><rect x="1056.0" y="245" width="1.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1058.97" y="255.5" ></text>
</g>
<g >
<title>syscall_exit_work (113,155,255 samples, 3.94%)</title><rect x="1026.5" y="293" width="46.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1029.54" y="303.5" >sysc..</text>
</g>
<g >
<title>syscall (819,652 samples, 0.03%)</title><rect x="10.9" y="357" width="0.4" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="13.93" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_bpf (819,652 samples, 0.03%)</title><rect x="10.9" y="309" width="0.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="13.93" y="319.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (6,299,725 samples, 0.22%)</title><rect x="62.1" y="277" width="2.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="65.15" y="287.5" ></text>
</g>
<g >
<title>syscall (1,560,862 samples, 0.05%)</title><rect x="1189.3" y="373" width="0.7" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1192.34" y="383.5" ></text>
</g>
<g >
<title>rep_movs_alternative (24,171,117 samples, 0.84%)</title><rect x="584.8" y="277" width="9.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="587.78" y="287.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (802,420 samples, 0.03%)</title><rect x="519.5" y="165" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="522.48" y="175.5" ></text>
</g>
<g >
<title>memchr_inv (37,839,572 samples, 1.32%)</title><rect x="792.8" y="293" width="15.5" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="795.79" y="303.5" ></text>
</g>
<g >
<title>__anon_inode_getfile (819,652 samples, 0.03%)</title><rect x="10.9" y="245" width="0.4" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="13.93" y="255.5" ></text>
</g>
<g >
<title>_copy_from_user (6,730,764 samples, 0.23%)</title><rect x="382.7" y="277" width="2.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="385.74" y="287.5" ></text>
</g>
<g >
<title>syscall_exit_work (2,310,610 samples, 0.08%)</title><rect x="1073.0" y="309" width="0.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1075.99" y="319.5" ></text>
</g>
<g >
<title>bpf_check_uarg_tail_zero (13,800,285 samples, 0.48%)</title><rect x="774.3" y="293" width="5.7" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="777.34" y="303.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (681,613 samples, 0.02%)</title><rect x="387.2" y="229" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="390.21" y="239.5" ></text>
</g>
<g >
<title>account_process_tick (680,527 samples, 0.02%)</title><rect x="823.4" y="165" width="0.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="826.38" y="175.5" ></text>
</g>
<g >
<title>bpf_prog_load (819,652 samples, 0.03%)</title><rect x="10.9" y="277" width="0.4" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="13.93" y="287.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (238,355,216 samples, 8.29%)</title><rect x="1089.2" y="341" width="97.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1092.24" y="351.5" >syscall_ret..</text>
</g>
<g >
<title>__check_object_size (148,924,371 samples, 5.18%)</title><rect x="614.8" y="261" width="61.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="617.80" y="271.5" >__chec..</text>
</g>
<g >
<title>__x64_sys_mmap (745,381 samples, 0.03%)</title><rect x="10.3" y="277" width="0.3" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="13.33" y="287.5" ></text>
</g>
<g >
<title>irqentry_exit (813,680 samples, 0.03%)</title><rect x="10.0" y="325" width="0.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>vmemdup_user (5,413,015 samples, 0.19%)</title><rect x="810.3" y="293" width="2.3" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="813.35" y="303.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (9,029,120 samples, 0.31%)</title><rect x="1081.7" y="325" width="3.7" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1084.69" y="335.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (679,931 samples, 0.02%)</title><rect x="403.9" y="229" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="406.89" y="239.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (745,381 samples, 0.03%)</title><rect x="10.3" y="261" width="0.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="13.33" y="271.5" ></text>
</g>
<g >
<title>main (25,080,959 samples, 0.87%)</title><rect x="25.9" y="357" width="10.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="28.87" y="367.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (680,527 samples, 0.02%)</title><rect x="823.4" y="293" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="826.38" y="303.5" ></text>
</g>
<g >
<title>htab_map_hash (33,878,876 samples, 1.18%)</title><rect x="404.2" y="261" width="13.9" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="407.16" y="271.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (681,426 samples, 0.02%)</title><rect x="744.7" y="165" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="747.68" y="175.5" ></text>
</g>
<g >
<title>migrate_enable (5,482,953 samples, 0.19%)</title><rect x="582.5" y="277" width="2.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="585.53" y="287.5" ></text>
</g>
<g >
<title>all (2,874,402,215 samples, 100%)</title><rect x="10.0" y="405" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (681,613 samples, 0.02%)</title><rect x="387.2" y="165" width="0.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="390.21" y="175.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (821,383 samples, 0.03%)</title><rect x="788.0" y="277" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="790.97" y="287.5" ></text>
</g>
<g >
<title>__check_heap_object (31,544,646 samples, 1.10%)</title><rect x="329.5" y="261" width="12.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="332.47" y="271.5" ></text>
</g>
<g >
<title>htab_map_alloc (1,560,862 samples, 0.05%)</title><rect x="1189.3" y="277" width="0.7" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1192.34" y="287.5" ></text>
</g>
<g >
<title>_dl_map_object (745,381 samples, 0.03%)</title><rect x="10.3" y="341" width="0.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="13.33" y="351.5" ></text>
</g>
<g >
<title>tick_sched_timer (680,527 samples, 0.02%)</title><rect x="823.4" y="213" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="826.38" y="223.5" ></text>
</g>
<g >
<title>bpf_map_lookup_elem (35,576,799 samples, 1.24%)</title><rect x="11.3" y="357" width="14.6" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.26" y="367.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (8,672,103 samples, 0.30%)</title><rect x="1085.4" y="341" width="3.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1088.40" y="351.5" ></text>
</g>
<g >
<title>do_syscall_64 (831,979 samples, 0.03%)</title><rect x="1189.0" y="357" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1192.00" y="367.5" ></text>
</g>
<g >
<title>tick_sched_timer (821,383 samples, 0.03%)</title><rect x="788.0" y="197" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="790.97" y="207.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (802,420 samples, 0.03%)</title><rect x="519.5" y="197" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="522.48" y="207.5" ></text>
</g>
<g >
<title>__libc_start_call_main (2,868,085,627 samples, 99.78%)</title><rect x="11.3" y="373" width="1177.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="14.26" y="383.5" >__libc_start_call_main</text>
</g>
<g >
<title>__kmem_cache_alloc_node (5,035,320 samples, 0.18%)</title><rect x="764.1" y="245" width="2.0" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="767.05" y="255.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (6,299,725 samples, 0.22%)</title><rect x="62.1" y="309" width="2.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="65.15" y="319.5" ></text>
</g>
<g >
<title>perf_event_task_tick (802,420 samples, 0.03%)</title><rect x="519.5" y="85" width="0.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="522.48" y="95.5" ></text>
</g>
<g >
<title>do_syscall_64 (819,652 samples, 0.03%)</title><rect x="10.9" y="325" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.93" y="335.5" ></text>
</g>
<g >
<title>path_put (12,021,650 samples, 0.42%)</title><rect x="1057.4" y="245" width="5.0" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1060.43" y="255.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (5,204,897 samples, 0.18%)</title><rect x="815.7" y="309" width="2.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="818.74" y="319.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (680,527 samples, 0.02%)</title><rect x="823.4" y="229" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="826.38" y="239.5" ></text>
</g>
<g >
<title>__check_object_size (146,183,902 samples, 5.09%)</title><rect x="300.7" y="277" width="60.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="303.74" y="287.5" >__chec..</text>
</g>
<g >
<title>timekeeping_advance (681,426 samples, 0.02%)</title><rect x="744.7" y="53" width="0.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="747.68" y="63.5" ></text>
</g>
<g >
<title>pcpu_alloc (818,007 samples, 0.03%)</title><rect x="1189.3" y="229" width="0.4" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1192.34" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_bpf (8,577,014 samples, 0.30%)</title><rect x="216.5" y="325" width="3.6" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="219.53" y="335.5" ></text>
</g>
<g >
<title>irq_exit_rcu (681,942 samples, 0.02%)</title><rect x="64.7" y="309" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="67.73" y="319.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (680,527 samples, 0.02%)</title><rect x="823.4" y="261" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="826.38" y="271.5" ></text>
</g>
<g >
<title>should_failslab (2,279,996 samples, 0.08%)</title><rect x="745.0" y="213" width="0.9" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="747.96" y="223.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (3,555,023 samples, 0.12%)</title><rect x="1015.7" y="293" width="1.5" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1018.74" y="303.5" ></text>
</g>
<g >
<title>update_load_avg (682,297 samples, 0.02%)</title><rect x="64.5" y="181" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="67.45" y="191.5" ></text>
</g>
<g >
<title>scheduler_tick (821,383 samples, 0.03%)</title><rect x="788.0" y="149" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="790.97" y="159.5" ></text>
</g>
<g >
<title>check_stack_object (32,262,193 samples, 1.12%)</title><rect x="445.4" y="277" width="13.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="448.41" y="287.5" ></text>
</g>
<g >
<title>tick_sched_timer (679,931 samples, 0.02%)</title><rect x="403.9" y="181" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="406.89" y="191.5" ></text>
</g>
<g >
<title>bpf_map_copy_value (141,094,416 samples, 4.91%)</title><rect x="387.5" y="277" width="57.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="390.49" y="287.5" >bpf_ma..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (679,931 samples, 0.02%)</title><rect x="403.9" y="261" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="406.89" y="271.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (681,975 samples, 0.02%)</title><rect x="556.3" y="229" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="559.34" y="239.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (681,975 samples, 0.02%)</title><rect x="556.3" y="197" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="559.34" y="207.5" ></text>
</g>
<g >
<title>kvmalloc_node (205,004,462 samples, 7.13%)</title><rect x="683.8" y="261" width="84.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="686.81" y="271.5" >kvmalloc_..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (821,383 samples, 0.03%)</title><rect x="788.0" y="261" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="790.97" y="271.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (802,420 samples, 0.03%)</title><rect x="519.5" y="181" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="522.48" y="191.5" ></text>
</g>
<g >
<title>syscall (2,803,579,938 samples, 97.54%)</title><rect x="36.2" y="357" width="1150.9" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="39.16" y="367.5" >syscall</text>
</g>
<g >
<title>is_vmalloc_addr (2,727,070 samples, 0.09%)</title><rect x="476.9" y="261" width="1.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="479.87" y="271.5" ></text>
</g>
<g >
<title>memset_orig (9,977,422 samples, 0.35%)</title><rect x="570.7" y="245" width="4.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="573.67" y="255.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (681,426 samples, 0.02%)</title><rect x="744.7" y="37" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="747.68" y="47.5" ></text>
</g>
<g >
<title>perf_event_task_tick (821,383 samples, 0.03%)</title><rect x="788.0" y="133" width="0.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="790.97" y="143.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (681,426 samples, 0.02%)</title><rect x="744.7" y="181" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="747.68" y="191.5" ></text>
</g>
<g >
<title>perf_event_task_tick (681,801 samples, 0.02%)</title><rect x="64.2" y="197" width="0.3" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="67.17" y="207.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2,044,972 samples, 0.07%)</title><rect x="675.1" y="181" width="0.8" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="678.09" y="191.5" ></text>
</g>
<g >
<title>bpf_map_value_size (15,834,851 samples, 0.55%)</title><rect x="781.8" y="293" width="6.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="784.80" y="303.5" ></text>
</g>
<g >
<title>x86_pmu_disable (821,383 samples, 0.03%)</title><rect x="788.0" y="101" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="790.97" y="111.5" ></text>
</g>
<g >
<title>__sys_bpf (8,006,773 samples, 0.28%)</title><rect x="233.5" y="309" width="3.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="236.55" y="319.5" ></text>
</g>
<g >
<title>__d_alloc (819,652 samples, 0.03%)</title><rect x="10.9" y="197" width="0.4" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="13.93" y="207.5" ></text>
</g>
<g >
<title>htab_map_lookup_elem (47,517,790 samples, 1.65%)</title><rect x="418.1" y="261" width="19.5" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="421.07" y="271.5" ></text>
</g>
<g >
<title>memcpy (848,428 samples, 0.03%)</title><rect x="576.7" y="277" width="0.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="579.74" y="287.5" ></text>
</g>
<g >
<title>memcmp (17,789,815 samples, 0.62%)</title><rect x="430.3" y="245" width="7.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="433.28" y="255.5" ></text>
</g>
<g >
<title>update_process_times (1,364,681 samples, 0.05%)</title><rect x="675.1" y="117" width="0.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="678.09" y="127.5" ></text>
</g>
<g >
<title>tick_sched_handle (802,420 samples, 0.03%)</title><rect x="519.5" y="133" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="522.48" y="143.5" ></text>
</g>
<g >
<title>rep_movs_alternative (5,792,633 samples, 0.20%)</title><rect x="768.0" y="261" width="2.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="770.96" y="271.5" ></text>
</g>
<g >
<title>kfree (1,513,434 samples, 0.05%)</title><rect x="468.8" y="277" width="0.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="471.79" y="287.5" ></text>
</g>
<g >
<title>__kmalloc_node (1,364,746 samples, 0.05%)</title><rect x="675.9" y="261" width="0.6" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="678.93" y="271.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (9,747,924 samples, 0.34%)</title><rect x="741.0" y="213" width="4.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="743.96" y="223.5" ></text>
</g>
<g >
<title>tick_sched_handle (1,364,098 samples, 0.05%)</title><rect x="64.2" y="245" width="0.5" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="67.17" y="255.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (52,956,664 samples, 1.84%)</title><rect x="817.9" y="309" width="21.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="820.87" y="319.5" >s..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (681,975 samples, 0.02%)</title><rect x="556.3" y="213" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="559.34" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (831,979 samples, 0.03%)</title><rect x="1189.0" y="373" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1192.00" y="383.5" ></text>
</g>
<g >
<title>update_process_times (821,383 samples, 0.03%)</title><rect x="788.0" y="165" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="790.97" y="175.5" ></text>
</g>
<g >
<title>error_entry (682,884 samples, 0.02%)</title><rect x="1089.0" y="341" width="0.2" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="1091.96" y="351.5" ></text>
</g>
<g >
<title>put_cpu_partial (831,979 samples, 0.03%)</title><rect x="1189.0" y="181" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1192.00" y="191.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (95,001,535 samples, 3.31%)</title><rect x="1032.1" y="277" width="39.0" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1035.09" y="287.5" >__a..</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (681,613 samples, 0.02%)</title><rect x="387.2" y="245" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="390.21" y="255.5" ></text>
</g>
<g >
<title>lookup_nulls_elem_raw (5,486,996 samples, 0.19%)</title><rect x="437.6" y="261" width="2.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="440.58" y="271.5" ></text>
</g>
<g >
<title>enqueue_hrtimer (681,975 samples, 0.02%)</title><rect x="556.3" y="149" width="0.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="559.34" y="159.5" ></text>
</g>
<g >
<title>do_syscall_64 (697,205 samples, 0.02%)</title><rect x="10.6" y="341" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.64" y="351.5" ></text>
</g>
<g >
<title>do_mmap (523,130 samples, 0.02%)</title><rect x="10.6" y="213" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="13.64" y="223.5" ></text>
</g>
<g >
<title>tick_sched_timer (1,364,681 samples, 0.05%)</title><rect x="675.1" y="149" width="0.6" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="678.09" y="159.5" ></text>
</g>
<g >
<title>kvmalloc_node (8,755,486 samples, 0.30%)</title><rect x="789.2" y="293" width="3.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="792.19" y="303.5" ></text>
</g>
<g >
<title>__fdget (4,775,203 samples, 0.17%)</title><rect x="242.9" y="293" width="1.9" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="245.88" y="303.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (802,420 samples, 0.03%)</title><rect x="519.5" y="213" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="522.48" y="223.5" ></text>
</g>
<g >
<title>map_create (1,560,862 samples, 0.05%)</title><rect x="1189.3" y="293" width="0.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1192.34" y="303.5" ></text>
</g>
<g >
<title>memset_orig (24,013,359 samples, 0.84%)</title><rect x="753.9" y="229" width="9.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="756.85" y="239.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (3,529,251 samples, 0.12%)</title><rect x="569.2" y="245" width="1.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="572.22" y="255.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (681,975 samples, 0.02%)</title><rect x="556.3" y="165" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="559.34" y="175.5" ></text>
</g>
<g >
<title>clockevents_program_event (680,291 samples, 0.02%)</title><rect x="675.7" y="149" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="678.65" y="159.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (681,426 samples, 0.02%)</title><rect x="744.7" y="101" width="0.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="747.68" y="111.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (6,299,725 samples, 0.22%)</title><rect x="62.1" y="293" width="2.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="65.15" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_bpf (1,402,452,304 samples, 48.79%)</title><rect x="236.8" y="309" width="575.8" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="239.83" y="319.5" >__x64_sys_bpf</text>
</g>
<g >
<title>kmalloc_slab (23,804,263 samples, 0.83%)</title><rect x="559.5" y="245" width="9.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="562.45" y="255.5" ></text>
</g>
<g >
<title>kmalloc_slab (4,494,838 samples, 0.16%)</title><rect x="766.1" y="245" width="1.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="769.12" y="255.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (800,033 samples, 0.03%)</title><rect x="1188.7" y="357" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1191.67" y="367.5" ></text>
</g>
<g >
<title>do_exit (831,979 samples, 0.03%)</title><rect x="1189.0" y="309" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1192.00" y="319.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (681,942 samples, 0.02%)</title><rect x="64.7" y="293" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="67.73" y="303.5" ></text>
</g>
<g >
<title>__vm_area_free (831,979 samples, 0.03%)</title><rect x="1189.0" y="229" width="0.3" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1192.00" y="239.5" ></text>
</g>
<g >
<title>amd_clear_divider (7,722,032 samples, 0.27%)</title><rect x="812.6" y="309" width="3.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="815.57" y="319.5" ></text>
</g>
<g >
<title>memcpy_orig (2,041,068 samples, 0.07%)</title><rect x="577.1" y="277" width="0.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="580.08" y="287.5" ></text>
</g>
<g >
<title>_copy_to_user (4,163,053 samples, 0.14%)</title><rect x="385.5" y="277" width="1.7" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="388.50" y="287.5" ></text>
</g>
<g >
<title>__cond_resched (2,216,458 samples, 0.08%)</title><rect x="534.0" y="245" width="0.9" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="537.00" y="255.5" ></text>
</g>
<g >
<title>exc_page_fault (813,680 samples, 0.03%)</title><rect x="10.0" y="341" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>__check_heap_object (47,943,143 samples, 1.67%)</title><rect x="628.5" y="245" width="19.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="631.53" y="255.5" ></text>
</g>
<g >
<title>memset_orig (523,130 samples, 0.02%)</title><rect x="10.6" y="149" width="0.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="13.64" y="159.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,560,862 samples, 0.05%)</title><rect x="1189.3" y="341" width="0.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1192.34" y="351.5" ></text>
</g>
<g >
<title>bpf_map_alloc_percpu (818,007 samples, 0.03%)</title><rect x="1189.3" y="261" width="0.4" height="15.0" fill="rgb(243,174,41)" rx="2" ry="2" />
<text  x="1192.34" y="271.5" ></text>
</g>
<g >
<title>run_rebalance_domains (681,942 samples, 0.02%)</title><rect x="64.7" y="261" width="0.3" height="15.0" fill="rgb(232,126,30)" rx="2" ry="2" />
<text  x="67.73" y="271.5" ></text>
</g>
<g >
<title>remove_vma (831,979 samples, 0.03%)</title><rect x="1189.0" y="245" width="0.3" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1192.00" y="255.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (681,975 samples, 0.02%)</title><rect x="556.3" y="181" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="559.34" y="191.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (681,801 samples, 0.02%)</title><rect x="64.2" y="181" width="0.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="67.17" y="191.5" ></text>
</g>
<g >
<title>dl_main (800,033 samples, 0.03%)</title><rect x="1188.7" y="341" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1191.67" y="351.5" ></text>
</g>
<g >
<title>update_process_times (802,420 samples, 0.03%)</title><rect x="519.5" y="117" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="522.48" y="127.5" ></text>
</g>
<g >
<title>_copy_to_user (5,110,115 samples, 0.18%)</title><rect x="772.2" y="293" width="2.1" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="775.24" y="303.5" ></text>
</g>
<g >
<title>kmalloc_trace (523,130 samples, 0.02%)</title><rect x="10.6" y="165" width="0.3" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="13.64" y="175.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (113,526,568 samples, 3.95%)</title><rect x="699.3" y="229" width="46.6" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="702.29" y="239.5" >__km..</text>
</g>
<g >
<title>entry_SYSCALL_64 (745,381 samples, 0.03%)</title><rect x="10.3" y="309" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="13.33" y="319.5" ></text>
</g>
<g >
<title>update_process_times (680,527 samples, 0.02%)</title><rect x="823.4" y="181" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="826.38" y="191.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (1,647,020 samples, 0.06%)</title><rect x="753.2" y="229" width="0.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="756.17" y="239.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (681,613 samples, 0.02%)</title><rect x="387.2" y="213" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="390.21" y="223.5" ></text>
</g>
<g >
<title>dput (2,976,810 samples, 0.10%)</title><rect x="1052.4" y="245" width="1.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1055.37" y="255.5" ></text>
</g>
<g >
<title>_copy_from_user (4,614,493 samples, 0.16%)</title><rect x="770.3" y="293" width="1.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="773.34" y="303.5" ></text>
</g>
<g >
<title>tick_sched_timer (802,420 samples, 0.03%)</title><rect x="519.5" y="149" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="522.48" y="159.5" ></text>
</g>
<g >
<title>account_system_time (680,527 samples, 0.02%)</title><rect x="823.4" y="149" width="0.3" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="826.38" y="159.5" ></text>
</g>
<g >
<title>__kmalloc_node (6,139,728 samples, 0.21%)</title><rect x="373.5" y="277" width="2.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="376.52" y="287.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (2,044,972 samples, 0.07%)</title><rect x="675.1" y="229" width="0.8" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="678.09" y="239.5" ></text>
</g>
<g >
<title>security_bpf (4,930,657 samples, 0.17%)</title><rect x="808.3" y="293" width="2.0" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="811.32" y="303.5" ></text>
</g>
<g >
<title>native_write_msr (821,383 samples, 0.03%)</title><rect x="788.0" y="85" width="0.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="790.97" y="95.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (2,044,972 samples, 0.07%)</title><rect x="675.1" y="197" width="0.8" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="678.09" y="207.5" ></text>
</g>
<g >
<title>timekeeping_advance (681,613 samples, 0.02%)</title><rect x="387.2" y="133" width="0.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="390.21" y="143.5" ></text>
</g>
<g >
<title>__check_heap_object (11,344,391 samples, 0.39%)</title><rect x="296.1" y="277" width="4.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="299.09" y="287.5" ></text>
</g>
<g >
<title>anon_inode_getfd (819,652 samples, 0.03%)</title><rect x="10.9" y="261" width="0.4" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="13.93" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_execve (697,205 samples, 0.02%)</title><rect x="10.6" y="325" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="13.64" y="335.5" ></text>
</g>
<g >
<title>__do_softirq (681,942 samples, 0.02%)</title><rect x="64.7" y="277" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="67.73" y="287.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (10,802,189 samples, 0.38%)</title><rect x="1077.3" y="325" width="4.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1080.26" y="335.5" ></text>
</g>
<g >
<title>_copy_from_user (5,841,893 samples, 0.20%)</title><rect x="677.8" y="261" width="2.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="680.81" y="271.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (681,613 samples, 0.02%)</title><rect x="387.2" y="181" width="0.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="390.21" y="191.5" ></text>
</g>
<g >
<title>alloc_file_pseudo (819,652 samples, 0.03%)</title><rect x="10.9" y="229" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="13.93" y="239.5" ></text>
</g>
<g >
<title>update_vsyscall (1,526,915 samples, 0.05%)</title><rect x="63.5" y="165" width="0.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="66.55" y="175.5" ></text>
</g>
<g >
<title>__x64_sys_bpf (1,560,862 samples, 0.05%)</title><rect x="1189.3" y="325" width="0.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.34" y="335.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (680,527 samples, 0.02%)</title><rect x="823.4" y="245" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="826.38" y="255.5" ></text>
</g>
<g >
<title>__kmalloc_node (118,480,225 samples, 4.12%)</title><rect x="526.1" y="261" width="48.7" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="529.13" y="271.5" >__km..</text>
</g>
<g >
<title>__virt_addr_valid (3,214,216 samples, 0.11%)</title><rect x="676.5" y="261" width="1.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="679.49" y="271.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (680,527 samples, 0.02%)</title><rect x="823.4" y="277" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="826.38" y="287.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (819,652 samples, 0.03%)</title><rect x="10.9" y="181" width="0.4" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="13.93" y="191.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,364,681 samples, 0.05%)</title><rect x="675.1" y="165" width="0.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="678.09" y="175.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (15,784,105 samples, 0.55%)</title><rect x="1017.2" y="293" width="6.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1020.20" y="303.5" ></text>
</g>
<g >
<title>__mmput (831,979 samples, 0.03%)</title><rect x="1189.0" y="277" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1192.00" y="287.5" ></text>
</g>
<g >
<title>bprm_execve (697,205 samples, 0.02%)</title><rect x="10.6" y="293" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="13.64" y="303.5" ></text>
</g>
<g >
<title>__virt_addr_valid (32,144,607 samples, 1.12%)</title><rect x="342.4" y="261" width="13.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="345.42" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,087,423,124 samples, 72.62%)</title><rect x="220.3" y="325" width="857.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="223.33" y="335.5" >do_syscall_64</text>
</g>
<g >
<title>tick_sched_handle (1,364,681 samples, 0.05%)</title><rect x="675.1" y="133" width="0.6" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="678.09" y="143.5" ></text>
</g>
<g >
<title>path_put (2,174,446 samples, 0.08%)</title><rect x="1069.4" y="261" width="0.9" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1072.36" y="271.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_array (680,155 samples, 0.02%)</title><rect x="220.1" y="325" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="223.05" y="335.5" ></text>
</g>
</g>
</svg>
