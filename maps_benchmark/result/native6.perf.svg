<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="422" onload="init(evt)" viewBox="0 0 1200 422" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="422.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="405" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="405" > </text>
<g id="frames">
<g >
<title>do_syscall_64 (794,021 samples, 0.03%)</title><rect x="1188.3" y="277" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1191.34" y="287.5" ></text>
</g>
<g >
<title>__fput (806,297 samples, 0.03%)</title><rect x="11.3" y="213" width="0.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="14.26" y="223.5" ></text>
</g>
<g >
<title>__audit_syscall_entry (3,887,737 samples, 0.13%)</title><rect x="833.4" y="245" width="1.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="836.40" y="255.5" ></text>
</g>
<g >
<title>_dl_map_object (781,105 samples, 0.03%)</title><rect x="10.0" y="309" width="0.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>bpf_map_area_alloc (1,612,210 samples, 0.06%)</title><rect x="1189.3" y="229" width="0.7" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1192.32" y="239.5" ></text>
</g>
<g >
<title>elf_map (558,180 samples, 0.02%)</title><rect x="10.3" y="229" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="13.32" y="239.5" ></text>
</g>
<g >
<title>should_failslab (567,964 samples, 0.02%)</title><rect x="562.8" y="197" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="565.85" y="207.5" ></text>
</g>
<g >
<title>kvfree (6,128,988 samples, 0.21%)</title><rect x="782.2" y="261" width="2.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="785.20" y="271.5" ></text>
</g>
<g >
<title>migrate_disable (5,799,633 samples, 0.20%)</title><rect x="580.6" y="245" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="583.62" y="255.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (814,895 samples, 0.03%)</title><rect x="24.5" y="309" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="27.54" y="319.5" ></text>
</g>
<g >
<title>alloc_pages_bulk_array_mempolicy (806,729 samples, 0.03%)</title><rect x="10.9" y="149" width="0.4" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="13.93" y="159.5" ></text>
</g>
<g >
<title>__sys_bpf (806,729 samples, 0.03%)</title><rect x="10.9" y="261" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="13.93" y="271.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (5,300,354 samples, 0.18%)</title><rect x="560.7" y="197" width="2.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="563.70" y="207.5" ></text>
</g>
<g >
<title>unroll_tree_refs (1,395,650 samples, 0.05%)</title><rect x="1073.2" y="229" width="0.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1076.21" y="239.5" ></text>
</g>
<g >
<title>update_wall_time (845,905 samples, 0.03%)</title><rect x="524.7" y="69" width="0.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="527.71" y="79.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (814,895 samples, 0.03%)</title><rect x="24.5" y="245" width="0.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="27.54" y="255.5" ></text>
</g>
<g >
<title>memcpy_orig (4,729,027 samples, 0.16%)</title><rect x="578.7" y="245" width="1.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="581.70" y="255.5" ></text>
</g>
<g >
<title>timekeeping_advance (845,905 samples, 0.03%)</title><rect x="524.7" y="53" width="0.4" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="527.71" y="63.5" ></text>
</g>
<g >
<title>update_process_times (834,031 samples, 0.03%)</title><rect x="820.0" y="149" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="822.98" y="159.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (4,152,742 samples, 0.14%)</title><rect x="1006.9" y="261" width="1.7" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1009.95" y="271.5" ></text>
</g>
<g >
<title>bpf_map_lookup_elem (32,711,903 samples, 1.13%)</title><rect x="11.6" y="325" width="13.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.59" y="335.5" ></text>
</g>
<g >
<title>uncharge_batch (830,744 samples, 0.03%)</title><rect x="1188.7" y="133" width="0.3" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1191.66" y="143.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (236,248,842 samples, 8.13%)</title><rect x="1091.4" y="309" width="95.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1094.40" y="319.5" >syscall_ret..</text>
</g>
<g >
<title>__rcu_read_unlock (806,729 samples, 0.03%)</title><rect x="10.9" y="85" width="0.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="13.93" y="95.5" ></text>
</g>
<g >
<title>bpf_map_copy_value (5,979,551 samples, 0.21%)</title><rect x="775.1" y="261" width="2.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="778.10" y="271.5" ></text>
</g>
<g >
<title>__x64_sys_bpf (2,413,031 samples, 0.08%)</title><rect x="1189.0" y="293" width="1.0" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.00" y="303.5" ></text>
</g>
<g >
<title>do_user_addr_fault (781,105 samples, 0.03%)</title><rect x="10.0" y="245" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>kmalloc_slab (13,606,287 samples, 0.47%)</title><rect x="744.4" y="197" width="5.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="747.43" y="207.5" ></text>
</g>
<g >
<title>mntput (4,762,185 samples, 0.16%)</title><rect x="1053.2" y="213" width="1.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1056.20" y="223.5" ></text>
</g>
<g >
<title>tlb_finish_mmu (830,744 samples, 0.03%)</title><rect x="1188.7" y="213" width="0.3" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1191.66" y="223.5" ></text>
</g>
<g >
<title>do_vmi_align_munmap (794,021 samples, 0.03%)</title><rect x="1188.3" y="213" width="0.4" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1191.34" y="223.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (845,905 samples, 0.03%)</title><rect x="524.7" y="85" width="0.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="527.71" y="95.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (781,105 samples, 0.03%)</title><rect x="10.0" y="277" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (845,905 samples, 0.03%)</title><rect x="524.7" y="133" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="527.71" y="143.5" ></text>
</g>
<g >
<title>do_mmap (736,250 samples, 0.03%)</title><rect x="10.6" y="229" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="13.63" y="239.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (854,388 samples, 0.03%)</title><rect x="383.9" y="213" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="386.89" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1,613,026 samples, 0.06%)</title><rect x="10.9" y="309" width="0.7" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="13.93" y="319.5" ></text>
</g>
<g >
<title>rep_movs_alternative (2,763,776 samples, 0.10%)</title><rect x="761.9" y="229" width="1.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="764.93" y="239.5" ></text>
</g>
<g >
<title>kvmalloc_node (2,551,444 samples, 0.09%)</title><rect x="784.7" y="261" width="1.0" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="787.69" y="271.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (806,297 samples, 0.03%)</title><rect x="11.3" y="261" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="14.26" y="271.5" ></text>
</g>
<g >
<title>free_pages_and_swap_cache (830,744 samples, 0.03%)</title><rect x="1188.7" y="181" width="0.3" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="1191.66" y="191.5" ></text>
</g>
<g >
<title>__audit_syscall_entry (4,180,803 samples, 0.14%)</title><rect x="818.3" y="261" width="1.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="821.28" y="271.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (814,895 samples, 0.03%)</title><rect x="24.5" y="261" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="27.54" y="271.5" ></text>
</g>
<g >
<title>tick_sched_timer (854,388 samples, 0.03%)</title><rect x="383.9" y="165" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="386.89" y="175.5" ></text>
</g>
<g >
<title>do_vmi_munmap (794,021 samples, 0.03%)</title><rect x="1188.3" y="229" width="0.4" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1191.34" y="239.5" ></text>
</g>
<g >
<title>__check_heap_object (13,222,256 samples, 0.45%)</title><rect x="288.6" y="245" width="5.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="291.61" y="255.5" ></text>
</g>
<g >
<title>pcpu_memcg_post_alloc_hook (800,821 samples, 0.03%)</title><rect x="1189.0" y="181" width="0.3" height="15.0" fill="rgb(242,172,41)" rx="2" ry="2" />
<text  x="1192.00" y="191.5" ></text>
</g>
<g >
<title>__vmalloc (806,729 samples, 0.03%)</title><rect x="10.9" y="197" width="0.4" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="13.93" y="207.5" ></text>
</g>
<g >
<title>migrate_enable (4,105,523 samples, 0.14%)</title><rect x="583.0" y="245" width="1.6" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="585.98" y="255.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (8,623,181 samples, 0.30%)</title><rect x="1087.9" y="309" width="3.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1090.90" y="319.5" ></text>
</g>
<g >
<title>task_work_run (806,297 samples, 0.03%)</title><rect x="11.3" y="245" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="14.26" y="255.5" ></text>
</g>
<g >
<title>kfree (19,551,296 samples, 0.67%)</title><rect x="1062.8" y="229" width="7.9" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1065.80" y="239.5" ></text>
</g>
<g >
<title>__cond_resched (2,479,625 samples, 0.09%)</title><rect x="707.4" y="197" width="1.1" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="710.45" y="207.5" ></text>
</g>
<g >
<title>audit_reset_context (5,545,784 samples, 0.19%)</title><rect x="1073.8" y="245" width="2.2" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1076.77" y="255.5" ></text>
</g>
<g >
<title>__kmalloc_node (107,716,155 samples, 3.71%)</title><rect x="530.6" y="229" width="43.7" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="533.55" y="239.5" >__km..</text>
</g>
<g >
<title>__sys_bpf (1,316,585,627 samples, 45.30%)</title><rect x="228.5" y="261" width="534.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="231.51" y="271.5" >__sys_bpf</text>
</g>
<g >
<title>handle_mm_fault (781,105 samples, 0.03%)</title><rect x="10.0" y="229" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>htab_map_lookup_elem (54,503,202 samples, 1.88%)</title><rect x="424.9" y="229" width="22.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="427.87" y="239.5" >h..</text>
</g>
<g >
<title>[unknown] (781,105 samples, 0.03%)</title><rect x="10.0" y="325" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>__alloc_percpu_gfp (800,821 samples, 0.03%)</title><rect x="1189.0" y="213" width="0.3" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1192.00" y="223.5" ></text>
</g>
<g >
<title>memchr_inv (43,938,126 samples, 1.51%)</title><rect x="785.7" y="261" width="17.9" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="788.72" y="271.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (62,123,070 samples, 2.14%)</title><rect x="537.9" y="213" width="25.2" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="540.86" y="223.5" >_..</text>
</g>
<g >
<title>syscall_exit_to_user_mode (806,297 samples, 0.03%)</title><rect x="11.3" y="277" width="0.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="14.26" y="287.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (814,895 samples, 0.03%)</title><rect x="24.5" y="293" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="27.54" y="303.5" ></text>
</g>
<g >
<title>__vmalloc_node (806,729 samples, 0.03%)</title><rect x="10.9" y="181" width="0.4" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="13.93" y="191.5" ></text>
</g>
<g >
<title>update_curr (814,895 samples, 0.03%)</title><rect x="24.5" y="165" width="0.4" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="27.54" y="175.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (845,905 samples, 0.03%)</title><rect x="524.7" y="149" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="527.71" y="159.5" ></text>
</g>
<g >
<title>do_vmi_align_munmap (558,180 samples, 0.02%)</title><rect x="10.3" y="165" width="0.2" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="13.32" y="175.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (806,297 samples, 0.03%)</title><rect x="11.3" y="165" width="0.3" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="14.26" y="175.5" ></text>
</g>
<g >
<title>__fget_light (8,588,568 samples, 0.30%)</title><rect x="363.3" y="245" width="3.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="366.27" y="255.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (736,250 samples, 0.03%)</title><rect x="10.6" y="245" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="13.63" y="255.5" ></text>
</g>
<g >
<title>__rmqueue_pcplist (1,612,210 samples, 0.06%)</title><rect x="1189.3" y="133" width="0.7" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="1192.32" y="143.5" ></text>
</g>
<g >
<title>__virt_addr_valid (101,308,858 samples, 3.49%)</title><rect x="643.3" y="213" width="41.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="646.27" y="223.5" >__v..</text>
</g>
<g >
<title>syscall_exit_work (146,184,571 samples, 5.03%)</title><rect x="1016.7" y="261" width="59.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1019.67" y="271.5" >syscal..</text>
</g>
<g >
<title>lookup_nulls_elem_raw (3,287,908 samples, 0.11%)</title><rect x="447.0" y="229" width="1.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="450.00" y="239.5" ></text>
</g>
<g >
<title>_copy_from_user (8,613,796 samples, 0.30%)</title><rect x="377.0" y="245" width="3.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="379.96" y="255.5" ></text>
</g>
<g >
<title>do_vmi_munmap (558,180 samples, 0.02%)</title><rect x="10.3" y="181" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.32" y="191.5" ></text>
</g>
<g >
<title>cpuacct_charge (814,895 samples, 0.03%)</title><rect x="24.5" y="149" width="0.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="27.54" y="159.5" ></text>
</g>
<g >
<title>bpf_prog_alloc_no_stats (800,821 samples, 0.03%)</title><rect x="1189.0" y="229" width="0.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="1192.00" y="239.5" ></text>
</g>
<g >
<title>syscall (2,844,037,083 samples, 97.86%)</title><rect x="32.6" y="325" width="1154.7" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="35.62" y="335.5" >syscall</text>
</g>
<g >
<title>fpregs_assert_state_consistent (1,366,741 samples, 0.05%)</title><rect x="1016.1" y="261" width="0.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1019.12" y="271.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (834,031 samples, 0.03%)</title><rect x="820.0" y="229" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="822.98" y="239.5" ></text>
</g>
<g >
<title>htab_map_lookup_elem (5,890,680 samples, 0.20%)</title><rect x="465.1" y="245" width="2.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="468.15" y="255.5" ></text>
</g>
<g >
<title>mmap64 (736,250 samples, 0.03%)</title><rect x="10.6" y="325" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="13.63" y="335.5" ></text>
</g>
<g >
<title>kmalloc_slab (3,397,976 samples, 0.12%)</title><rect x="760.6" y="213" width="1.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="763.56" y="223.5" ></text>
</g>
<g >
<title>syscall@plt (2,500,464 samples, 0.09%)</title><rect x="1187.3" y="325" width="1.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1190.32" y="335.5" ></text>
</g>
<g >
<title>should_failslab (4,118,009 samples, 0.14%)</title><rect x="572.6" y="213" width="1.7" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="575.61" y="223.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (854,388 samples, 0.03%)</title><rect x="383.9" y="197" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="386.89" y="207.5" ></text>
</g>
<g >
<title>do_syscall_64 (736,250 samples, 0.03%)</title><rect x="10.6" y="293" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.63" y="303.5" ></text>
</g>
<g >
<title>schedule (814,895 samples, 0.03%)</title><rect x="24.5" y="229" width="0.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="27.54" y="239.5" ></text>
</g>
<g >
<title>__libc_start_call_main (2,898,352,571 samples, 99.72%)</title><rect x="11.6" y="341" width="1176.7" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="14.59" y="351.5" >__libc_start_call_main</text>
</g>
<g >
<title>kfree (8,280,668 samples, 0.28%)</title><rect x="1049.8" y="213" width="3.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1052.84" y="223.5" ></text>
</g>
<g >
<title>mmput (830,744 samples, 0.03%)</title><rect x="1188.7" y="261" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1191.66" y="271.5" ></text>
</g>
<g >
<title>map_create (1,612,210 samples, 0.06%)</title><rect x="1189.3" y="261" width="0.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1192.32" y="271.5" ></text>
</g>
<g >
<title>tlb_batch_pages_flush (830,744 samples, 0.03%)</title><rect x="1188.7" y="197" width="0.3" height="15.0" fill="rgb(234,133,32)" rx="2" ry="2" />
<text  x="1191.66" y="207.5" ></text>
</g>
<g >
<title>vmemdup_user (6,671,982 samples, 0.23%)</title><rect x="805.2" y="261" width="2.7" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="808.23" y="271.5" ></text>
</g>
<g >
<title>lookup_nulls_elem_raw (17,213,201 samples, 0.59%)</title><rect x="434.5" y="213" width="7.0" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="437.53" y="223.5" ></text>
</g>
<g >
<title>__mem_cgroup_uncharge_list (830,744 samples, 0.03%)</title><rect x="1188.7" y="149" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1191.66" y="159.5" ></text>
</g>
<g >
<title>mas_spanning_rebalance.isra.0 (794,021 samples, 0.03%)</title><rect x="1188.3" y="149" width="0.4" height="15.0" fill="rgb(230,115,27)" rx="2" ry="2" />
<text  x="1191.34" y="159.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (736,250 samples, 0.03%)</title><rect x="10.6" y="309" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="13.63" y="319.5" ></text>
</g>
<g >
<title>kmalloc_slab (6,649,936 samples, 0.23%)</title><rect x="576.0" y="229" width="2.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="579.00" y="239.5" ></text>
</g>
<g >
<title>_copy_from_user (5,836,872 samples, 0.20%)</title><rect x="763.1" y="261" width="2.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="766.06" y="271.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (4,207,283 samples, 0.14%)</title><rect x="371.0" y="245" width="1.7" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="374.02" y="255.5" ></text>
</g>
<g >
<title>__vmalloc_node_range (1,612,210 samples, 0.06%)</title><rect x="1189.3" y="197" width="0.7" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1192.32" y="207.5" ></text>
</g>
<g >
<title>__sys_bpf (4,932,269 samples, 0.17%)</title><rect x="217.7" y="277" width="2.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="220.68" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (794,021 samples, 0.03%)</title><rect x="1188.3" y="293" width="0.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1191.34" y="303.5" ></text>
</g>
<g >
<title>__alloc_pages_bulk (806,729 samples, 0.03%)</title><rect x="10.9" y="133" width="0.4" height="15.0" fill="rgb(241,168,40)" rx="2" ry="2" />
<text  x="13.93" y="143.5" ></text>
</g>
<g >
<title>bprm_execve (773,861 samples, 0.03%)</title><rect x="10.3" y="261" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="13.32" y="271.5" ></text>
</g>
<g >
<title>__check_heap_object (9,355,940 samples, 0.32%)</title><rect x="605.4" y="229" width="3.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="608.41" y="239.5" ></text>
</g>
<g >
<title>munmap (794,021 samples, 0.03%)</title><rect x="1188.3" y="309" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1191.34" y="319.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (854,388 samples, 0.03%)</title><rect x="383.9" y="181" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="386.89" y="191.5" ></text>
</g>
<g >
<title>tick_sched_timer (845,905 samples, 0.03%)</title><rect x="524.7" y="117" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="527.71" y="127.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (845,905 samples, 0.03%)</title><rect x="524.7" y="181" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="527.71" y="191.5" ></text>
</g>
<g >
<title>vm_munmap (558,180 samples, 0.02%)</title><rect x="10.3" y="213" width="0.2" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="13.32" y="223.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (4,467,692 samples, 0.15%)</title><rect x="742.6" y="181" width="1.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="745.61" y="191.5" ></text>
</g>
<g >
<title>mas_store_gfp (794,021 samples, 0.03%)</title><rect x="1188.3" y="197" width="0.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="1191.34" y="207.5" ></text>
</g>
<g >
<title>unmap_vmas (558,180 samples, 0.02%)</title><rect x="10.3" y="133" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="13.32" y="143.5" ></text>
</g>
<g >
<title>kfree (4,499,438 samples, 0.15%)</title><rect x="472.2" y="245" width="1.8" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="475.17" y="255.5" ></text>
</g>
<g >
<title>dput (3,050,036 samples, 0.10%)</title><rect x="1048.6" y="213" width="1.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1051.60" y="223.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (9,981,831 samples, 0.34%)</title><rect x="1083.8" y="293" width="4.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1086.85" y="303.5" ></text>
</g>
<g >
<title>_copy_to_user (10,645,274 samples, 0.37%)</title><rect x="765.4" y="261" width="4.3" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="768.43" y="271.5" ></text>
</g>
<g >
<title>bpf_prog_alloc (800,821 samples, 0.03%)</title><rect x="1189.0" y="245" width="0.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1192.00" y="255.5" ></text>
</g>
<g >
<title>do_fault (781,105 samples, 0.03%)</title><rect x="10.0" y="197" width="0.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>bpf_map_value_size (11,507,310 samples, 0.40%)</title><rect x="777.5" y="261" width="4.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="780.53" y="271.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (593,706,912 samples, 20.43%)</title><rect x="835.0" y="277" width="241.0" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="837.98" y="287.5" >syscall_exit_to_user_mode</text>
</g>
<g >
<title>__fdget (3,092,826 samples, 0.11%)</title><rect x="227.3" y="261" width="1.2" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="230.26" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (773,861 samples, 0.03%)</title><rect x="10.3" y="309" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.32" y="319.5" ></text>
</g>
<g >
<title>folio_add_file_rmap_range (781,105 samples, 0.03%)</title><rect x="10.0" y="149" width="0.3" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="13.00" y="159.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (773,861 samples, 0.03%)</title><rect x="10.3" y="325" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="13.32" y="335.5" ></text>
</g>
<g >
<title>__schedule (814,895 samples, 0.03%)</title><rect x="24.5" y="213" width="0.4" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="27.54" y="223.5" ></text>
</g>
<g >
<title>kvmalloc_node (160,766,166 samples, 5.53%)</title><rect x="696.7" y="229" width="65.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="699.66" y="239.5" >kvmallo..</text>
</g>
<g >
<title>pcpu_alloc (800,821 samples, 0.03%)</title><rect x="1189.0" y="197" width="0.3" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="1192.00" y="207.5" ></text>
</g>
<g >
<title>audit_reset_context (96,617,301 samples, 3.32%)</title><rect x="1023.6" y="229" width="39.2" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1026.57" y="239.5" >aud..</text>
</g>
<g >
<title>bpf_prog_load (800,821 samples, 0.03%)</title><rect x="1189.0" y="261" width="0.3" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="1192.00" y="271.5" ></text>
</g>
<g >
<title>bpf_prog_load (806,729 samples, 0.03%)</title><rect x="10.9" y="245" width="0.4" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="13.93" y="255.5" ></text>
</g>
<g >
<title>__cond_resched (282,898 samples, 0.01%)</title><rect x="537.7" y="213" width="0.2" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="540.74" y="223.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (4,163,783 samples, 0.14%)</title><rect x="750.0" y="197" width="1.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="752.95" y="207.5" ></text>
</g>
<g >
<title>__fget_light (29,563,676 samples, 1.02%)</title><rect x="351.3" y="229" width="12.0" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="354.27" y="239.5" ></text>
</g>
<g >
<title>__virt_addr_valid (20,513,587 samples, 0.71%)</title><rect x="334.9" y="229" width="8.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="337.85" y="239.5" ></text>
</g>
<g >
<title>bpf_check_uarg_tail_zero (13,176,032 samples, 0.45%)</title><rect x="769.7" y="261" width="5.4" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="772.75" y="271.5" ></text>
</g>
<g >
<title>irqentry_exit (814,895 samples, 0.03%)</title><rect x="24.5" y="277" width="0.4" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="27.54" y="287.5" ></text>
</g>
<g >
<title>__vm_munmap (558,180 samples, 0.02%)</title><rect x="10.3" y="197" width="0.2" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="13.32" y="207.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (13,038,033 samples, 0.45%)</title><rect x="1078.6" y="293" width="5.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1081.55" y="303.5" ></text>
</g>
<g >
<title>__virt_addr_valid (8,589,606 samples, 0.30%)</title><rect x="685.7" y="229" width="3.5" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="688.66" y="239.5" ></text>
</g>
<g >
<title>__sys_bpf (2,413,031 samples, 0.08%)</title><rect x="1189.0" y="277" width="1.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1192.00" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_bpf (1,448,895,559 samples, 49.85%)</title><rect x="219.7" y="277" width="588.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="222.68" y="287.5" >__x64_sys_bpf</text>
</g>
<g >
<title>kfree (99,024,429 samples, 3.41%)</title><rect x="484.9" y="229" width="40.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="487.85" y="239.5" >kfree</text>
</g>
<g >
<title>_dl_sysdep_start (794,021 samples, 0.03%)</title><rect x="1188.3" y="325" width="0.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1191.34" y="335.5" ></text>
</g>
<g >
<title>kmalloc_slab (9,664,090 samples, 0.33%)</title><rect x="563.1" y="213" width="3.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="566.08" y="223.5" ></text>
</g>
<g >
<title>__vmalloc_node_range (806,729 samples, 0.03%)</title><rect x="10.9" y="165" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="13.93" y="175.5" ></text>
</g>
<g >
<title>kvmalloc_node (132,130,609 samples, 4.55%)</title><rect x="525.1" y="245" width="53.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="528.06" y="255.5" >kvmal..</text>
</g>
<g >
<title>tick_sched_timer (834,031 samples, 0.03%)</title><rect x="820.0" y="181" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="822.98" y="191.5" ></text>
</g>
<g >
<title>mas_wr_store_entry.isra.0 (794,021 samples, 0.03%)</title><rect x="1188.3" y="181" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1191.34" y="191.5" ></text>
</g>
<g >
<title>__fdget (29,563,676 samples, 1.02%)</title><rect x="351.3" y="245" width="12.0" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="354.27" y="255.5" ></text>
</g>
<g >
<title>_dl_map_object_from_fd (781,105 samples, 0.03%)</title><rect x="10.0" y="293" width="0.3" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>__mmput (830,744 samples, 0.03%)</title><rect x="1188.7" y="245" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1191.66" y="255.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (845,905 samples, 0.03%)</title><rect x="524.7" y="197" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="527.71" y="207.5" ></text>
</g>
<g >
<title>page_counter_uncharge (830,744 samples, 0.03%)</title><rect x="1188.7" y="117" width="0.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="1191.66" y="127.5" ></text>
</g>
<g >
<title>pick_next_task_fair (814,895 samples, 0.03%)</title><rect x="24.5" y="197" width="0.4" height="15.0" fill="rgb(242,170,40)" rx="2" ry="2" />
<text  x="27.54" y="207.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (88,607,097 samples, 3.05%)</title><rect x="708.5" y="197" width="35.9" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="711.45" y="207.5" >__k..</text>
</g>
<g >
<title>do_execveat_common.isra.0 (773,861 samples, 0.03%)</title><rect x="10.3" y="277" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="13.32" y="287.5" ></text>
</g>
<g >
<title>__kmalloc_node (7,426,726 samples, 0.26%)</title><rect x="366.8" y="245" width="3.0" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="369.76" y="255.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (4,229,226 samples, 0.15%)</title><rect x="574.3" y="229" width="1.7" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="577.29" y="239.5" ></text>
</g>
<g >
<title>__mod_lruvec_state (781,105 samples, 0.03%)</title><rect x="10.0" y="117" width="0.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="13.00" y="127.5" ></text>
</g>
<g >
<title>mas_pop_node (794,021 samples, 0.03%)</title><rect x="1188.3" y="133" width="0.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1191.34" y="143.5" ></text>
</g>
<g >
<title>page_counter_cancel (830,744 samples, 0.03%)</title><rect x="1188.7" y="101" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1191.66" y="111.5" ></text>
</g>
<g >
<title>unmap_region.constprop.0 (558,180 samples, 0.02%)</title><rect x="10.3" y="149" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="13.32" y="159.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (794,021 samples, 0.03%)</title><rect x="1188.3" y="261" width="0.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1191.34" y="271.5" ></text>
</g>
<g >
<title>unmap_page_range (558,180 samples, 0.02%)</title><rect x="10.3" y="101" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="13.32" y="111.5" ></text>
</g>
<g >
<title>do_exit (830,744 samples, 0.03%)</title><rect x="1188.7" y="277" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1191.66" y="287.5" ></text>
</g>
<g >
<title>__rcu_read_lock (2,482,349 samples, 0.09%)</title><rect x="406.4" y="229" width="1.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="409.35" y="239.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1,612,210 samples, 0.06%)</title><rect x="1189.3" y="149" width="0.7" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1192.32" y="159.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (834,031 samples, 0.03%)</title><rect x="820.0" y="245" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="822.98" y="255.5" ></text>
</g>
<g >
<title>all (2,906,355,480 samples, 100%)</title><rect x="10.0" y="373" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>memcmp (13,506,997 samples, 0.46%)</title><rect x="441.5" y="213" width="5.5" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="444.52" y="223.5" ></text>
</g>
<g >
<title>vmemdup_user (405,671,089 samples, 13.96%)</title><rect x="598.4" y="245" width="164.7" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="601.35" y="255.5" >vmemdup_user</text>
</g>
<g >
<title>memset_orig (6,643,775 samples, 0.23%)</title><rect x="569.9" y="213" width="2.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="572.92" y="223.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (2,725,060 samples, 0.09%)</title><rect x="759.4" y="213" width="1.2" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="762.45" y="223.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (7,181,335 samples, 0.25%)</title><rect x="567.0" y="213" width="2.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="570.00" y="223.5" ></text>
</g>
<g >
<title>do_syscall_64 (5,922,835 samples, 0.20%)</title><rect x="50.5" y="309" width="2.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="53.51" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_execve (773,861 samples, 0.03%)</title><rect x="10.3" y="293" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="13.32" y="303.5" ></text>
</g>
<g >
<title>__dentry_kill (806,297 samples, 0.03%)</title><rect x="11.3" y="181" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="14.26" y="191.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (36,097,272 samples, 1.24%)</title><rect x="820.3" y="261" width="14.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="823.32" y="271.5" ></text>
</g>
<g >
<title>memset_orig (18,661,011 samples, 0.64%)</title><rect x="751.6" y="197" width="7.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="754.64" y="207.5" ></text>
</g>
<g >
<title>__rcu_read_lock (3,073,634 samples, 0.11%)</title><rect x="369.8" y="245" width="1.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="372.77" y="255.5" ></text>
</g>
<g >
<title>alloc_pages (1,612,210 samples, 0.06%)</title><rect x="1189.3" y="181" width="0.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1192.32" y="191.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (129,733,717 samples, 4.46%)</title><rect x="1021.1" y="245" width="52.7" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1024.10" y="255.5" >__aud..</text>
</g>
<g >
<title>[unknown] (3,904,242 samples, 0.13%)</title><rect x="10.0" y="341" width="1.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>mmap_region (736,250 samples, 0.03%)</title><rect x="10.6" y="213" width="0.3" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="13.63" y="223.5" ></text>
</g>
<g >
<title>__handle_mm_fault (781,105 samples, 0.03%)</title><rect x="10.0" y="213" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>__vm_munmap (794,021 samples, 0.03%)</title><rect x="1188.3" y="245" width="0.4" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="1191.34" y="255.5" ></text>
</g>
<g >
<title>unmap_single_vma (558,180 samples, 0.02%)</title><rect x="10.3" y="117" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="13.32" y="127.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (834,031 samples, 0.03%)</title><rect x="820.0" y="197" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="822.98" y="207.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (845,905 samples, 0.03%)</title><rect x="524.7" y="101" width="0.4" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="527.71" y="111.5" ></text>
</g>
<g >
<title>security_bpf (4,119,106 samples, 0.14%)</title><rect x="803.6" y="261" width="1.6" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="806.56" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (830,744 samples, 0.03%)</title><rect x="1188.7" y="341" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1191.66" y="351.5" ></text>
</g>
<g >
<title>tick_sched_handle (834,031 samples, 0.03%)</title><rect x="820.0" y="165" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="822.98" y="175.5" ></text>
</g>
<g >
<title>check_stack_object (31,742,499 samples, 1.09%)</title><rect x="452.3" y="245" width="12.8" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="455.26" y="255.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (5,828,799 samples, 0.20%)</title><rect x="1013.8" y="245" width="2.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1016.75" y="255.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (834,031 samples, 0.03%)</title><rect x="820.0" y="213" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="822.98" y="223.5" ></text>
</g>
<g >
<title>htab_map_alloc (1,612,210 samples, 0.06%)</title><rect x="1189.3" y="245" width="0.7" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1192.32" y="255.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (2,488,598 samples, 0.09%)</title><rect x="695.7" y="229" width="1.0" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="698.65" y="239.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (854,388 samples, 0.03%)</title><rect x="383.9" y="149" width="0.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="386.89" y="159.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (854,388 samples, 0.03%)</title><rect x="383.9" y="229" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="386.89" y="239.5" ></text>
</g>
<g >
<title>bpf_map_copy_value (167,541,949 samples, 5.76%)</title><rect x="384.2" y="245" width="68.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="387.24" y="255.5" >bpf_map..</text>
</g>
<g >
<title>put_prev_entity (814,895 samples, 0.03%)</title><rect x="24.5" y="181" width="0.4" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="27.54" y="191.5" ></text>
</g>
<g >
<title>kvfree (125,759,319 samples, 4.33%)</title><rect x="474.0" y="245" width="51.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="477.00" y="255.5" >kvfree</text>
</g>
<g >
<title>do_syscall_64 (2,413,031 samples, 0.08%)</title><rect x="1189.0" y="309" width="1.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1192.00" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,613,026 samples, 0.06%)</title><rect x="10.9" y="293" width="0.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.93" y="303.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (18,430,224 samples, 0.63%)</title><rect x="1008.6" y="261" width="7.5" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1011.63" y="271.5" ></text>
</g>
<g >
<title>scheduler_tick (834,031 samples, 0.03%)</title><rect x="820.0" y="133" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="822.98" y="143.5" ></text>
</g>
<g >
<title>do_group_exit (830,744 samples, 0.03%)</title><rect x="1188.7" y="293" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1191.66" y="303.5" ></text>
</g>
<g >
<title>__kmem_cache_free (71,460,899 samples, 2.46%)</title><rect x="496.0" y="213" width="29.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="499.04" y="223.5" >__..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (854,388 samples, 0.03%)</title><rect x="383.9" y="245" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="386.89" y="255.5" ></text>
</g>
<g >
<title>[vmlinux] (830,744 samples, 0.03%)</title><rect x="1188.7" y="309" width="0.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1191.66" y="319.5" ></text>
</g>
<g >
<title>dput (806,297 samples, 0.03%)</title><rect x="11.3" y="197" width="0.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="14.26" y="207.5" ></text>
</g>
<g >
<title>_copy_from_user (10,242,973 samples, 0.35%)</title><rect x="689.2" y="229" width="4.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="692.15" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (736,250 samples, 0.03%)</title><rect x="10.6" y="277" width="0.3" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="13.63" y="287.5" ></text>
</g>
<g >
<title>syscall (1,613,026 samples, 0.06%)</title><rect x="10.9" y="325" width="0.7" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="13.93" y="335.5" ></text>
</g>
<g >
<title>path_put (6,086,064 samples, 0.21%)</title><rect x="1070.7" y="229" width="2.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1073.74" y="239.5" ></text>
</g>
<g >
<title>perf_event_mmap (736,250 samples, 0.03%)</title><rect x="10.6" y="197" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="13.63" y="207.5" ></text>
</g>
<g >
<title>__kmalloc_node (146,223,765 samples, 5.03%)</title><rect x="700.1" y="213" width="59.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="703.08" y="223.5" >__kmal..</text>
</g>
<g >
<title>__bpf_map_area_alloc (1,612,210 samples, 0.06%)</title><rect x="1189.3" y="213" width="0.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1192.32" y="223.5" ></text>
</g>
<g >
<title>amd_clear_divider (5,371,461 samples, 0.18%)</title><rect x="807.9" y="277" width="2.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="810.94" y="287.5" ></text>
</g>
<g >
<title>htab_map_hash (43,130,441 samples, 1.48%)</title><rect x="407.4" y="229" width="17.5" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="410.36" y="239.5" ></text>
</g>
<g >
<title>__check_object_size (185,203,149 samples, 6.37%)</title><rect x="609.2" y="229" width="75.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="612.21" y="239.5" >__check_..</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (845,905 samples, 0.03%)</title><rect x="524.7" y="165" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="527.71" y="175.5" ></text>
</g>
<g >
<title>__memcg_kmem_charge_page (806,729 samples, 0.03%)</title><rect x="10.9" y="101" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="13.93" y="111.5" ></text>
</g>
<g >
<title>map_benchmark (2,906,294,609 samples, 100.00%)</title><rect x="10.0" y="357" width="1180.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="13.00" y="367.5" >map_benchmark</text>
</g>
<g >
<title>__check_object_size (141,097,512 samples, 4.85%)</title><rect x="294.0" y="245" width="57.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="296.98" y="255.5" >__chec..</text>
</g>
<g >
<title>cgroup_rstat_updated (781,105 samples, 0.03%)</title><rect x="10.0" y="85" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="13.00" y="95.5" ></text>
</g>
<g >
<title>filemap_map_pages (781,105 samples, 0.03%)</title><rect x="10.0" y="181" width="0.3" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title>security_bpf (8,128,310 samples, 0.28%)</title><rect x="595.1" y="245" width="3.3" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="598.05" y="255.5" ></text>
</g>
<g >
<title>syscall (2,413,031 samples, 0.08%)</title><rect x="1189.0" y="341" width="1.0" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1192.00" y="351.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (11,406,788 samples, 0.39%)</title><rect x="467.5" y="245" width="4.7" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="470.54" y="255.5" ></text>
</g>
<g >
<title>bpf_prog_alloc (806,729 samples, 0.03%)</title><rect x="10.9" y="229" width="0.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="13.93" y="239.5" ></text>
</g>
<g >
<title>__alloc_pages (806,729 samples, 0.03%)</title><rect x="10.9" y="117" width="0.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="13.93" y="127.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (2,413,031 samples, 0.08%)</title><rect x="1189.0" y="325" width="1.0" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1192.00" y="335.5" ></text>
</g>
<g >
<title>should_failslab (565,532 samples, 0.02%)</title><rect x="759.2" y="197" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="762.22" y="207.5" ></text>
</g>
<g >
<title>__kmem_cache_free (14,153,818 samples, 0.49%)</title><rect x="477.9" y="229" width="5.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="480.87" y="239.5" ></text>
</g>
<g >
<title>rep_movs_alternative (25,631,232 samples, 0.88%)</title><rect x="584.6" y="245" width="10.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="587.65" y="255.5" ></text>
</g>
<g >
<title>syscall_exit_work (996,438 samples, 0.03%)</title><rect x="1076.0" y="277" width="0.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1079.02" y="287.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (736,250 samples, 0.03%)</title><rect x="10.6" y="261" width="0.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="13.63" y="271.5" ></text>
</g>
<g >
<title>check_stack_object (5,769,531 samples, 0.20%)</title><rect x="693.3" y="229" width="2.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="696.31" y="239.5" ></text>
</g>
<g >
<title>bpf_prog_alloc_no_stats (806,729 samples, 0.03%)</title><rect x="10.9" y="213" width="0.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="13.93" y="223.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,148,188,825 samples, 73.91%)</title><rect x="206.4" y="293" width="872.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="209.38" y="303.5" >do_syscall_64</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (834,031 samples, 0.03%)</title><rect x="820.0" y="261" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="822.98" y="271.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (5,235,675 samples, 0.18%)</title><rect x="1076.4" y="277" width="2.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1079.43" y="287.5" ></text>
</g>
<g >
<title>exit_mmap (830,744 samples, 0.03%)</title><rect x="1188.7" y="229" width="0.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1191.66" y="239.5" ></text>
</g>
<g >
<title>exc_page_fault (781,105 samples, 0.03%)</title><rect x="10.0" y="261" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>____fput (806,297 samples, 0.03%)</title><rect x="11.3" y="229" width="0.3" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="14.26" y="239.5" ></text>
</g>
<g >
<title>__check_heap_object (19,105,108 samples, 0.66%)</title><rect x="327.1" y="229" width="7.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="330.09" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_bpf (806,729 samples, 0.03%)</title><rect x="10.9" y="277" width="0.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="13.93" y="287.5" ></text>
</g>
<g >
<title>set_pte_range (781,105 samples, 0.03%)</title><rect x="10.0" y="165" width="0.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="13.00" y="175.5" ></text>
</g>
<g >
<title>mas_wr_spanning_store.isra.0 (794,021 samples, 0.03%)</title><rect x="1188.3" y="165" width="0.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1191.34" y="175.5" ></text>
</g>
<g >
<title>path_put (15,224,676 samples, 0.52%)</title><rect x="1055.1" y="213" width="6.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1058.13" y="223.5" ></text>
</g>
<g >
<title>do_syscall_64 (830,744 samples, 0.03%)</title><rect x="1188.7" y="325" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1191.66" y="335.5" ></text>
</g>
<g >
<title>main (19,103,121 samples, 0.66%)</title><rect x="24.9" y="325" width="7.7" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="27.87" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_bpf (16,219,113 samples, 0.56%)</title><rect x="199.0" y="293" width="6.6" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="202.02" y="303.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (3,038,676 samples, 0.10%)</title><rect x="483.6" y="229" width="1.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="486.62" y="239.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (53,271,739 samples, 1.83%)</title><rect x="813.3" y="277" width="21.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="816.35" y="287.5" >s..</text>
</g>
<g >
<title>__kmalloc_node (3,095,187 samples, 0.11%)</title><rect x="684.4" y="229" width="1.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="687.41" y="239.5" ></text>
</g>
<g >
<title>__check_object_size (18,662,421 samples, 0.64%)</title><rect x="219.7" y="261" width="7.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="222.68" y="271.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_array (1,896,700 samples, 0.07%)</title><rect x="205.6" y="293" width="0.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="208.61" y="303.5" ></text>
</g>
<g >
<title>__mod_memcg_lruvec_state (781,105 samples, 0.03%)</title><rect x="10.0" y="101" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="13.00" y="111.5" ></text>
</g>
<g >
<title>load_elf_binary (773,861 samples, 0.03%)</title><rect x="10.3" y="245" width="0.3" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="13.32" y="255.5" ></text>
</g>
<g >
<title>generic_delete_inode (806,297 samples, 0.03%)</title><rect x="11.3" y="149" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="14.26" y="159.5" ></text>
</g>
<g >
<title>migrate_enable (9,669,022 samples, 0.33%)</title><rect x="448.3" y="229" width="4.0" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="451.34" y="239.5" ></text>
</g>
<g >
<title>check_stack_object (19,916,672 samples, 0.69%)</title><rect x="343.2" y="229" width="8.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="346.18" y="239.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (7,938,225 samples, 0.27%)</title><rect x="810.1" y="277" width="3.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="813.12" y="287.5" ></text>
</g>
<g >
<title>__check_heap_object (56,055,777 samples, 1.93%)</title><rect x="620.5" y="213" width="22.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="623.52" y="223.5" >_..</text>
</g>
<g >
<title>__mod_lruvec_page_state (781,105 samples, 0.03%)</title><rect x="10.0" y="133" width="0.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="13.00" y="143.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (845,905 samples, 0.03%)</title><rect x="524.7" y="37" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="527.71" y="47.5" ></text>
</g>
<g >
<title>__virt_addr_valid (7,714,419 samples, 0.27%)</title><rect x="372.7" y="245" width="3.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="375.73" y="255.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_array (2,707,209 samples, 0.09%)</title><rect x="375.9" y="245" width="1.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="378.86" y="255.5" ></text>
</g>
<g >
<title>release_pages (830,744 samples, 0.03%)</title><rect x="1188.7" y="165" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1191.66" y="175.5" ></text>
</g>
<g >
<title>unroll_tree_refs (3,647,812 samples, 0.13%)</title><rect x="1061.3" y="213" width="1.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1064.32" y="223.5" ></text>
</g>
<g >
<title>_dl_start_user (794,021 samples, 0.03%)</title><rect x="1188.3" y="341" width="0.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1191.34" y="351.5" ></text>
</g>
<g >
<title>__alloc_pages (1,612,210 samples, 0.06%)</title><rect x="1189.3" y="165" width="0.7" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1192.32" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (2,549,176,738 samples, 87.71%)</title><rect x="52.9" y="309" width="1035.0" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="55.92" y="319.5" >entry_SYSCALL_64</text>
</g>
<g >
<title>_copy_to_user (8,462,730 samples, 0.29%)</title><rect x="380.5" y="245" width="3.4" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="383.46" y="255.5" ></text>
</g>
</g>
</svg>
