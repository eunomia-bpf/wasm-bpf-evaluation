<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="374" onload="init(evt)" viewBox="0 0 1200 374" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="374.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="357" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="357" > </text>
<g id="frames">
<g >
<title>entry_SYSCALL_64 (482,609 samples, 0.01%)</title><rect x="1188.8" y="277" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1191.79" y="287.5" ></text>
</g>
<g >
<title>__cond_resched (4,985,969 samples, 0.12%)</title><rect x="535.6" y="165" width="1.4" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="538.61" y="175.5" ></text>
</g>
<g >
<title>bpf_check (641,249 samples, 0.02%)</title><rect x="1189.3" y="197" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="1192.28" y="207.5" ></text>
</g>
<g >
<title>__handle_mm_fault (629,968 samples, 0.01%)</title><rect x="10.5" y="181" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="13.47" y="191.5" ></text>
</g>
<g >
<title>kmalloc_slab (4,258,877 samples, 0.10%)</title><rect x="761.0" y="165" width="1.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="764.02" y="175.5" ></text>
</g>
<g >
<title>kvmalloc_node (7,150,453 samples, 0.17%)</title><rect x="786.2" y="213" width="2.0" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="789.21" y="223.5" ></text>
</g>
<g >
<title>rep_movs_alternative (9,962,036 samples, 0.24%)</title><rect x="762.2" y="181" width="2.8" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="765.21" y="191.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (683,753 samples, 0.02%)</title><rect x="1189.1" y="293" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1192.09" y="303.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (5,707,951 samples, 0.14%)</title><rect x="759.4" y="165" width="1.6" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="762.42" y="175.5" ></text>
</g>
<g >
<title>__vmalloc_node_range (587,454 samples, 0.01%)</title><rect x="1189.8" y="149" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1192.81" y="159.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (615,848 samples, 0.01%)</title><rect x="1188.6" y="277" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1191.62" y="287.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (5,637,893 samples, 0.13%)</title><rect x="698.5" y="181" width="1.6" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="701.55" y="191.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (601,890 samples, 0.01%)</title><rect x="10.6" y="229" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="13.64" y="239.5" ></text>
</g>
<g >
<title>__fput (651,243 samples, 0.02%)</title><rect x="11.2" y="213" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="14.18" y="223.5" ></text>
</g>
<g >
<title>_copy_from_user (29,955,214 samples, 0.71%)</title><rect x="360.9" y="197" width="8.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="363.94" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (528,567 samples, 0.01%)</title><rect x="10.3" y="261" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="13.32" y="271.5" ></text>
</g>
<g >
<title>kvfree (7,150,306 samples, 0.17%)</title><rect x="784.2" y="213" width="2.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="787.21" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (3,759,480,455 samples, 89.26%)</title><rect x="48.7" y="261" width="1053.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="51.74" y="271.5" >entry_SYSCALL_64</text>
</g>
<g >
<title>bpf_check_uarg_tail_zero (17,881,240 samples, 0.42%)</title><rect x="771.8" y="213" width="5.0" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="774.79" y="223.5" ></text>
</g>
<g >
<title>obj_cgroup_uncharge (714,758 samples, 0.02%)</title><rect x="831.5" y="53" width="0.2" height="15.0" fill="rgb(205,0,0)" rx="2" ry="2" />
<text  x="834.52" y="63.5" ></text>
</g>
<g >
<title>handle_mm_fault (615,848 samples, 0.01%)</title><rect x="1188.6" y="197" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1191.62" y="207.5" ></text>
</g>
<g >
<title>dentry_free (482,609 samples, 0.01%)</title><rect x="1188.8" y="133" width="0.1" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="1191.79" y="143.5" ></text>
</g>
<g >
<title>kmalloc_slab (15,640,369 samples, 0.37%)</title><rect x="747.8" y="149" width="4.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="750.83" y="159.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (20,048,562 samples, 0.48%)</title><rect x="455.9" y="197" width="5.6" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="458.90" y="207.5" ></text>
</g>
<g >
<title>__anon_inode_getfile (660,657 samples, 0.02%)</title><rect x="1189.5" y="181" width="0.1" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="1192.46" y="191.5" ></text>
</g>
<g >
<title>__x64_sys_close (651,243 samples, 0.02%)</title><rect x="11.2" y="245" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="14.18" y="255.5" ></text>
</g>
<g >
<title>do_user_addr_fault (629,968 samples, 0.01%)</title><rect x="10.5" y="213" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="13.47" y="223.5" ></text>
</g>
<g >
<title>mntput (3,580,136 samples, 0.09%)</title><rect x="1072.1" y="165" width="1.0" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1075.09" y="175.5" ></text>
</g>
<g >
<title>do_user_addr_fault (615,848 samples, 0.01%)</title><rect x="1188.6" y="213" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1191.62" y="223.5" ></text>
</g>
<g >
<title>kfree (12,833,000 samples, 0.30%)</title><rect x="1068.5" y="165" width="3.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1071.50" y="175.5" ></text>
</g>
<g >
<title>vmemdup_user (9,991,038 samples, 0.24%)</title><rect x="809.8" y="213" width="2.8" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="812.77" y="223.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (113,264,196 samples, 2.69%)</title><rect x="820.4" y="229" width="31.7" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="823.38" y="239.5" >sy..</text>
</g>
<g >
<title>do_mmap (1,138,435 samples, 0.03%)</title><rect x="10.0" y="149" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="13.00" y="159.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (602,599 samples, 0.01%)</title><rect x="10.8" y="261" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="13.81" y="271.5" ></text>
</g>
<g >
<title>vfree (641,249 samples, 0.02%)</title><rect x="1189.3" y="165" width="0.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1192.28" y="175.5" ></text>
</g>
<g >
<title>elf_map (389,579 samples, 0.01%)</title><rect x="10.6" y="181" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="13.64" y="191.5" ></text>
</g>
<g >
<title>__kmalloc_node (6,296,140 samples, 0.15%)</title><rect x="685.4" y="181" width="1.8" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="688.39" y="191.5" ></text>
</g>
<g >
<title>__sys_bpf (2,471,600 samples, 0.06%)</title><rect x="1189.3" y="229" width="0.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1192.28" y="239.5" ></text>
</g>
<g >
<title>inode_to_bdi (528,567 samples, 0.01%)</title><rect x="10.3" y="133" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="13.32" y="143.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (2,471,600 samples, 0.06%)</title><rect x="1189.3" y="277" width="0.7" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1192.28" y="287.5" ></text>
</g>
<g >
<title>bpf_map_copy_value (9,307,160 samples, 0.22%)</title><rect x="776.8" y="213" width="2.6" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="779.80" y="223.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (2,146,069 samples, 0.05%)</title><rect x="684.8" y="165" width="0.6" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="687.79" y="175.5" ></text>
</g>
<g >
<title>btf_new_fd (660,657 samples, 0.02%)</title><rect x="1189.5" y="213" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1192.46" y="223.5" ></text>
</g>
<g >
<title>__libc_early_init (615,848 samples, 0.01%)</title><rect x="1188.6" y="261" width="0.2" height="15.0" fill="rgb(248,202,48)" rx="2" ry="2" />
<text  x="1191.62" y="271.5" ></text>
</g>
<g >
<title>main (30,659,701 samples, 0.73%)</title><rect x="21.2" y="277" width="8.5" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="24.16" y="287.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (28,605,176 samples, 0.68%)</title><rect x="1016.8" y="213" width="8.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1019.81" y="223.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (1,138,435 samples, 0.03%)</title><rect x="10.0" y="165" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="13.00" y="175.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (10,712,171 samples, 0.25%)</title><rect x="560.5" y="149" width="3.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="563.48" y="159.5" ></text>
</g>
<g >
<title>do_syscall_64 (12,865,774 samples, 0.31%)</title><rect x="45.1" y="261" width="3.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="48.13" y="271.5" ></text>
</g>
<g >
<title>_start (482,609 samples, 0.01%)</title><rect x="1188.8" y="293" width="0.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1191.79" y="303.5" ></text>
</g>
<g >
<title>irq_exit_rcu (714,758 samples, 0.02%)</title><rect x="831.5" y="181" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="834.52" y="191.5" ></text>
</g>
<g >
<title>path_openat (528,567 samples, 0.01%)</title><rect x="10.3" y="181" width="0.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="13.32" y="191.5" ></text>
</g>
<g >
<title>__kmem_cache_free (123,296,248 samples, 2.93%)</title><rect x="492.1" y="165" width="34.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="495.08" y="175.5" >__..</text>
</g>
<g >
<title>__audit_syscall_exit (183,733,040 samples, 4.36%)</title><rect x="1036.0" y="197" width="51.5" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1038.98" y="207.5" >__aud..</text>
</g>
<g >
<title>do_exit (683,753 samples, 0.02%)</title><rect x="1189.1" y="229" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1192.09" y="239.5" ></text>
</g>
<g >
<title>__check_heap_object (34,317,190 samples, 0.81%)</title><rect x="309.5" y="181" width="9.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="312.46" y="191.5" ></text>
</g>
<g >
<title>htab_map_hash (62,077,336 samples, 1.47%)</title><rect x="395.9" y="181" width="17.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="398.93" y="191.5" ></text>
</g>
<g >
<title>__x64_sys_bpf (2,471,600 samples, 0.06%)</title><rect x="1189.3" y="245" width="0.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.28" y="255.5" ></text>
</g>
<g >
<title>__vfscanf_internal (629,968 samples, 0.01%)</title><rect x="10.5" y="261" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="13.47" y="271.5" ></text>
</g>
<g >
<title>tick_sched_timer (703,320 samples, 0.02%)</title><rect x="831.3" y="133" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="834.32" y="143.5" ></text>
</g>
<g >
<title>syscall (2,471,600 samples, 0.06%)</title><rect x="1189.3" y="293" width="0.7" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1192.28" y="303.5" ></text>
</g>
<g >
<title>rcu_note_context_switch (704,809 samples, 0.02%)</title><rect x="744.4" y="101" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="747.44" y="111.5" ></text>
</g>
<g >
<title>kvfree (220,198,234 samples, 5.23%)</title><rect x="464.9" y="197" width="61.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="467.93" y="207.5" >kvfree</text>
</g>
<g >
<title>memset (1,430,499 samples, 0.03%)</title><rect x="572.3" y="165" width="0.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="575.29" y="175.5" ></text>
</g>
<g >
<title>syscall@plt (3,572,207 samples, 0.08%)</title><rect x="1187.6" y="277" width="1.0" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1190.62" y="287.5" ></text>
</g>
<g >
<title>__get_obj_cgroup_from_memcg (587,454 samples, 0.01%)</title><rect x="1189.8" y="85" width="0.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1192.81" y="95.5" ></text>
</g>
<g >
<title>dput (482,609 samples, 0.01%)</title><rect x="1188.8" y="165" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1191.79" y="175.5" ></text>
</g>
<g >
<title>syscall_exit_work (2,860,595 samples, 0.07%)</title><rect x="1091.3" y="229" width="0.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1094.26" y="239.5" ></text>
</g>
<g >
<title>__rcu_read_lock (587,454 samples, 0.01%)</title><rect x="1189.8" y="69" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1192.81" y="79.5" ></text>
</g>
<g >
<title>mmap_region (389,579 samples, 0.01%)</title><rect x="10.6" y="117" width="0.2" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="13.64" y="127.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (389,579 samples, 0.01%)</title><rect x="10.6" y="149" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="13.64" y="159.5" ></text>
</g>
<g >
<title>__check_object_size (244,552,502 samples, 5.81%)</title><rect x="616.9" y="181" width="68.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="619.88" y="191.5" >__check..</text>
</g>
<g >
<title>do_syscall_64 (482,609 samples, 0.01%)</title><rect x="1188.8" y="261" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1191.79" y="271.5" ></text>
</g>
<g >
<title>__mem_cgroup_charge (615,848 samples, 0.01%)</title><rect x="1188.6" y="149" width="0.2" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="1191.62" y="159.5" ></text>
</g>
<g >
<title>kvmalloc_node (197,249,113 samples, 4.68%)</title><rect x="526.6" y="197" width="55.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="529.62" y="207.5" >kvmal..</text>
</g>
<g >
<title>amd_clear_divider (10,726,304 samples, 0.25%)</title><rect x="812.6" y="229" width="3.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="815.57" y="239.5" ></text>
</g>
<g >
<title>do_fault (629,968 samples, 0.01%)</title><rect x="10.5" y="165" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="13.47" y="175.5" ></text>
</g>
<g >
<title>__kmalloc_node (170,922,303 samples, 4.06%)</title><rect x="530.0" y="181" width="47.9" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="533.01" y="191.5" >__km..</text>
</g>
<g >
<title>__schedule (704,809 samples, 0.02%)</title><rect x="744.4" y="117" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="747.44" y="127.5" ></text>
</g>
<g >
<title>bpf_prog_calc_tag (641,249 samples, 0.02%)</title><rect x="1189.3" y="181" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1192.28" y="191.5" ></text>
</g>
<g >
<title>mmput (683,753 samples, 0.02%)</title><rect x="1189.1" y="213" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1192.09" y="223.5" ></text>
</g>
<g >
<title>__rcu_read_lock (2,147,096 samples, 0.05%)</title><rect x="395.3" y="181" width="0.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="398.33" y="191.5" ></text>
</g>
<g >
<title>perf_event_mmap (580,571 samples, 0.01%)</title><rect x="10.2" y="117" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="13.16" y="127.5" ></text>
</g>
<g >
<title>[vmlinux] (683,753 samples, 0.02%)</title><rect x="1189.1" y="261" width="0.2" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1192.09" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1,138,435 samples, 0.03%)</title><rect x="10.0" y="229" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>memset_orig (13,585,904 samples, 0.32%)</title><rect x="572.7" y="165" width="3.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="575.69" y="175.5" ></text>
</g>
<g >
<title>kmem_cache_free (482,609 samples, 0.01%)</title><rect x="1188.8" y="117" width="0.1" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1191.79" y="127.5" ></text>
</g>
<g >
<title>memset_orig (580,571 samples, 0.01%)</title><rect x="10.2" y="85" width="0.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="13.16" y="95.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (601,890 samples, 0.01%)</title><rect x="10.6" y="277" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="13.64" y="287.5" ></text>
</g>
<g >
<title>syscall (602,599 samples, 0.01%)</title><rect x="10.8" y="277" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="13.81" y="287.5" ></text>
</g>
<g >
<title>__bpf_map_area_alloc (587,454 samples, 0.01%)</title><rect x="1189.8" y="165" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1192.81" y="175.5" ></text>
</g>
<g >
<title>do_syscall_64 (528,567 samples, 0.01%)</title><rect x="10.3" y="245" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.32" y="255.5" ></text>
</g>
<g >
<title>check_stack_object (10,014,749 samples, 0.24%)</title><rect x="695.7" y="181" width="2.8" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="698.74" y="191.5" ></text>
</g>
<g >
<title>map_create (1,169,694 samples, 0.03%)</title><rect x="1189.6" y="213" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1192.65" y="223.5" ></text>
</g>
<g >
<title>exit_mmap (683,753 samples, 0.02%)</title><rect x="1189.1" y="181" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1192.09" y="191.5" ></text>
</g>
<g >
<title>down_write (683,753 samples, 0.02%)</title><rect x="1189.1" y="133" width="0.2" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="1192.09" y="143.5" ></text>
</g>
<g >
<title>refill_obj_stock (714,758 samples, 0.02%)</title><rect x="831.5" y="37" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="834.52" y="47.5" ></text>
</g>
<g >
<title>btf_check_subprog_arg_match (602,599 samples, 0.01%)</title><rect x="10.8" y="149" width="0.2" height="15.0" fill="rgb(228,110,26)" rx="2" ry="2" />
<text  x="13.81" y="159.5" ></text>
</g>
<g >
<title>update_process_times (703,320 samples, 0.02%)</title><rect x="831.3" y="101" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="834.32" y="111.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,418,078 samples, 0.03%)</title><rect x="831.3" y="197" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="834.32" y="207.5" ></text>
</g>
<g >
<title>iput (651,243 samples, 0.02%)</title><rect x="11.2" y="165" width="0.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="14.18" y="175.5" ></text>
</g>
<g >
<title>vfs_open (528,567 samples, 0.01%)</title><rect x="10.3" y="165" width="0.2" height="15.0" fill="rgb(232,125,29)" rx="2" ry="2" />
<text  x="13.32" y="175.5" ></text>
</g>
<g >
<title>__sys_bpf (1,945,056,854 samples, 46.18%)</title><rect x="220.1" y="213" width="544.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="223.07" y="223.5" >__sys_bpf</text>
</g>
<g >
<title>__x86_indirect_thunk_array (2,857,636 samples, 0.07%)</title><rect x="192.9" y="245" width="0.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="195.94" y="255.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (9,835,533 samples, 0.23%)</title><rect x="1014.1" y="213" width="2.7" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1017.05" y="223.5" ></text>
</g>
<g >
<title>do_group_exit (683,753 samples, 0.02%)</title><rect x="1189.1" y="245" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1192.09" y="255.5" ></text>
</g>
<g >
<title>do_mmap (389,579 samples, 0.01%)</title><rect x="10.6" y="133" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="13.64" y="143.5" ></text>
</g>
<g >
<title>__kmem_cache_free (21,401,772 samples, 0.51%)</title><rect x="469.3" y="181" width="6.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="472.31" y="191.5" ></text>
</g>
<g >
<title>__vunmap_range_noflush (641,249 samples, 0.02%)</title><rect x="1189.3" y="133" width="0.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1192.28" y="143.5" ></text>
</g>
<g >
<title>__x64_sys_bpf (33,386,005 samples, 0.79%)</title><rect x="183.6" y="245" width="9.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="186.59" y="255.5" ></text>
</g>
<g >
<title>tick_sched_handle (703,320 samples, 0.02%)</title><rect x="831.3" y="117" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="834.32" y="127.5" ></text>
</g>
<g >
<title>load_elf_binary (601,890 samples, 0.01%)</title><rect x="10.6" y="197" width="0.2" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="13.64" y="207.5" ></text>
</g>
<g >
<title>bpf_prog_load (641,249 samples, 0.02%)</title><rect x="1189.3" y="213" width="0.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="1192.28" y="223.5" ></text>
</g>
<g >
<title>__do_softirq (714,758 samples, 0.02%)</title><rect x="831.5" y="149" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="834.52" y="159.5" ></text>
</g>
<g >
<title>handle_mm_fault (629,968 samples, 0.01%)</title><rect x="10.5" y="197" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="13.47" y="207.5" ></text>
</g>
<g >
<title>rcu_core (714,758 samples, 0.02%)</title><rect x="831.5" y="117" width="0.2" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="834.52" y="127.5" ></text>
</g>
<g >
<title>do_lookup_x (599,519 samples, 0.01%)</title><rect x="1188.9" y="293" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1191.93" y="303.5" ></text>
</g>
<g >
<title>lookup_nulls_elem_raw (9,264,757 samples, 0.22%)</title><rect x="432.9" y="181" width="2.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="435.93" y="191.5" ></text>
</g>
<g >
<title>rep_movs_alternative (46,336,313 samples, 1.10%)</title><rect x="592.7" y="197" width="13.0" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="595.69" y="207.5" ></text>
</g>
<g >
<title>all (4,211,825,809 samples, 100%)</title><rect x="10.0" y="325" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>__check_object_size (24,326,850 samples, 0.58%)</title><rect x="211.1" y="213" width="6.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="214.05" y="223.5" ></text>
</g>
<g >
<title>syscall (4,132,838,244 samples, 98.12%)</title><rect x="29.7" y="277" width="1157.9" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="32.75" y="287.5" >syscall</text>
</g>
<g >
<title>syscall_exit_to_user_mode (853,581,565 samples, 20.27%)</title><rect x="852.1" y="229" width="239.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="855.12" y="239.5" >syscall_exit_to_user_mode</text>
</g>
<g >
<title>__fdget (7,850,373 samples, 0.19%)</title><rect x="217.9" y="213" width="2.2" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="220.87" y="223.5" ></text>
</g>
<g >
<title>__fput (482,609 samples, 0.01%)</title><rect x="1188.8" y="181" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1191.79" y="191.5" ></text>
</g>
<g >
<title>__audit_syscall_entry (8,585,628 samples, 0.20%)</title><rect x="828.9" y="213" width="2.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="831.92" y="223.5" ></text>
</g>
<g >
<title>free_pgtables (683,753 samples, 0.02%)</title><rect x="1189.1" y="165" width="0.2" height="15.0" fill="rgb(208,17,4)" rx="2" ry="2" />
<text  x="1192.09" y="175.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,418,078 samples, 0.03%)</title><rect x="831.3" y="213" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="834.32" y="223.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,471,600 samples, 0.06%)</title><rect x="1189.3" y="261" width="0.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1192.28" y="271.5" ></text>
</g>
<g >
<title>audit_reset_context (13,579,220 samples, 0.32%)</title><rect x="1087.5" y="197" width="3.8" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1090.45" y="207.5" ></text>
</g>
<g >
<title>__check_heap_object (3,566,324 samples, 0.08%)</title><rect x="281.6" y="197" width="1.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="284.55" y="207.5" ></text>
</g>
<g >
<title>memset_orig (20,013,956 samples, 0.48%)</title><rect x="753.4" y="149" width="5.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="756.41" y="159.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (8,595,497 samples, 0.20%)</title><rect x="569.9" y="165" width="2.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="572.88" y="175.5" ></text>
</g>
<g >
<title>__check_object_size (170,275,614 samples, 4.04%)</title><rect x="282.6" y="197" width="47.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="285.55" y="207.5" >__ch..</text>
</g>
<g >
<title>__hrtimer_run_queues (703,320 samples, 0.02%)</title><rect x="831.3" y="149" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="834.32" y="159.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (482,609 samples, 0.01%)</title><rect x="1188.8" y="245" width="0.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1191.79" y="255.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (615,848 samples, 0.01%)</title><rect x="1188.6" y="245" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1191.62" y="255.5" ></text>
</g>
<g >
<title>[unknown] (3,501,459 samples, 0.08%)</title><rect x="10.0" y="293" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (297,705,380 samples, 7.07%)</title><rect x="1104.2" y="261" width="83.4" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1107.21" y="271.5" >syscall_r..</text>
</g>
<g >
<title>ksys_mmap_pgoff (1,138,435 samples, 0.03%)</title><rect x="10.0" y="181" width="0.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title>remove_vm_area (641,249 samples, 0.02%)</title><rect x="1189.3" y="149" width="0.2" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="1192.28" y="159.5" ></text>
</g>
<g >
<title>syscall_exit_work (225,081,935 samples, 5.34%)</title><rect x="1028.2" y="213" width="63.1" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1031.20" y="223.5" >syscal..</text>
</g>
<g >
<title>__x64_sys_openat (528,567 samples, 0.01%)</title><rect x="10.3" y="229" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="13.32" y="239.5" ></text>
</g>
<g >
<title>__dentry_kill (651,243 samples, 0.02%)</title><rect x="11.2" y="181" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="14.18" y="191.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (1,428,095 samples, 0.03%)</title><rect x="329.9" y="181" width="0.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="332.86" y="191.5" ></text>
</g>
<g >
<title>should_failslab (716,504 samples, 0.02%)</title><rect x="747.6" y="133" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="750.63" y="143.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (12,055,762 samples, 0.29%)</title><rect x="1024.8" y="213" width="3.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1027.82" y="223.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (629,968 samples, 0.01%)</title><rect x="10.5" y="245" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="13.47" y="255.5" ></text>
</g>
<g >
<title>__audit_syscall_entry (15,702,224 samples, 0.37%)</title><rect x="847.7" y="197" width="4.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="850.72" y="207.5" ></text>
</g>
<g >
<title>lookup_nulls_elem_raw (23,573,166 samples, 0.56%)</title><rect x="420.3" y="165" width="6.6" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="423.33" y="175.5" ></text>
</g>
<g >
<title>bpf_map_value_size (17,155,047 samples, 0.41%)</title><rect x="779.4" y="213" width="4.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="782.40" y="223.5" ></text>
</g>
<g >
<title>__kmalloc_node (198,767,417 samples, 4.72%)</title><rect x="703.7" y="165" width="55.7" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="706.73" y="175.5" >__kma..</text>
</g>
<g >
<title>__fget_light (7,846,296 samples, 0.19%)</title><rect x="349.8" y="197" width="2.2" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="352.78" y="207.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (9,985,897 samples, 0.24%)</title><rect x="355.0" y="197" width="2.8" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="357.96" y="207.5" ></text>
</g>
<g >
<title>unlink_file_vma (683,753 samples, 0.02%)</title><rect x="1189.1" y="149" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="1192.09" y="159.5" ></text>
</g>
<g >
<title>ext4_file_mmap (557,864 samples, 0.01%)</title><rect x="10.0" y="117" width="0.2" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="13.00" y="127.5" ></text>
</g>
<g >
<title>bpf_prog_load (602,599 samples, 0.01%)</title><rect x="10.8" y="197" width="0.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="13.81" y="207.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (482,609 samples, 0.01%)</title><rect x="1188.8" y="229" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1191.79" y="239.5" ></text>
</g>
<g >
<title>do_filp_open (528,567 samples, 0.01%)</title><rect x="10.3" y="197" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="13.32" y="207.5" ></text>
</g>
<g >
<title>mmap_region (1,138,435 samples, 0.03%)</title><rect x="10.0" y="133" width="0.3" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="13.00" y="143.5" ></text>
</g>
<g >
<title>htab_map_lookup_elem (69,958,005 samples, 1.66%)</title><rect x="413.3" y="181" width="19.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="416.33" y="191.5" ></text>
</g>
<g >
<title>__dentry_kill (482,609 samples, 0.01%)</title><rect x="1188.8" y="149" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1191.79" y="159.5" ></text>
</g>
<g >
<title>mmap64 (1,138,435 samples, 0.03%)</title><rect x="10.0" y="245" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (72,798,662 samples, 1.73%)</title><rect x="831.7" y="213" width="20.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="834.72" y="223.5" ></text>
</g>
<g >
<title>__alloc_pages (587,454 samples, 0.01%)</title><rect x="1189.8" y="117" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1192.81" y="127.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (7,862,663 samples, 0.19%)</title><rect x="1099.8" y="245" width="2.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1102.80" y="255.5" ></text>
</g>
<g >
<title>kvmalloc_node (221,607,052 samples, 5.26%)</title><rect x="700.1" y="181" width="62.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="703.12" y="191.5" >kvmall..</text>
</g>
<g >
<title>alloc_file_pseudo (660,657 samples, 0.02%)</title><rect x="1189.5" y="165" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1192.46" y="175.5" ></text>
</g>
<g >
<title>bpf_check (602,599 samples, 0.01%)</title><rect x="10.8" y="181" width="0.2" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="13.81" y="191.5" ></text>
</g>
<g >
<title>bpf_map_copy_value (244,142,434 samples, 5.80%)</title><rect x="371.3" y="197" width="68.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="374.32" y="207.5" >bpf_map..</text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (9,924,670 samples, 0.24%)</title><rect x="1092.1" y="229" width="2.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1095.06" y="239.5" ></text>
</g>
<g >
<title>migrate_enable (12,153,298 samples, 0.29%)</title><rect x="589.3" y="197" width="3.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="592.29" y="207.5" ></text>
</g>
<g >
<title>__kmalloc_node (7,139,374 samples, 0.17%)</title><rect x="352.0" y="197" width="2.0" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="354.98" y="207.5" ></text>
</g>
<g >
<title>__close (1,365,172 samples, 0.03%)</title><rect x="11.0" y="293" width="0.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="13.98" y="303.5" ></text>
</g>
<g >
<title>dput (651,243 samples, 0.02%)</title><rect x="11.2" y="197" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="14.18" y="207.5" ></text>
</g>
<g >
<title>vm_mmap (389,579 samples, 0.01%)</title><rect x="10.6" y="165" width="0.2" height="15.0" fill="rgb(225,92,22)" rx="2" ry="2" />
<text  x="13.64" y="175.5" ></text>
</g>
<g >
<title>map_benchmark (4,211,744,384 samples, 100.00%)</title><rect x="10.0" y="309" width="1180.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="13.00" y="319.5" >map_benchmark</text>
</g>
<g >
<title>unroll_tree_refs (7,146,830 samples, 0.17%)</title><rect x="1085.5" y="181" width="2.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1088.45" y="191.5" ></text>
</g>
<g >
<title>kmalloc_slab (9,223,238 samples, 0.22%)</title><rect x="579.3" y="181" width="2.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="582.30" y="191.5" ></text>
</g>
<g >
<title>__GI___open64_nocancel (528,567 samples, 0.01%)</title><rect x="10.3" y="277" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="13.32" y="287.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (94,490,188 samples, 2.24%)</title><rect x="537.0" y="165" width="26.5" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="540.00" y="175.5" >_..</text>
</g>
<g >
<title>check_stack_object (8,467,819 samples, 0.20%)</title><rect x="327.5" y="181" width="2.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="330.48" y="191.5" ></text>
</g>
<g >
<title>bpf_map_area_alloc (587,454 samples, 0.01%)</title><rect x="1189.8" y="181" width="0.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1192.81" y="191.5" ></text>
</g>
<g >
<title>[unknown] (1,138,435 samples, 0.03%)</title><rect x="10.0" y="277" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>__check_heap_object (5,675,727 samples, 0.13%)</title><rect x="615.3" y="181" width="1.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="618.29" y="191.5" ></text>
</g>
<g >
<title>_copy_to_user (7,109,269 samples, 0.17%)</title><rect x="369.3" y="197" width="2.0" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="372.33" y="207.5" ></text>
</g>
<g >
<title>memcpy (1,431,348 samples, 0.03%)</title><rect x="581.9" y="197" width="0.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="584.88" y="207.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (7,836,627 samples, 0.19%)</title><rect x="475.3" y="181" width="2.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="478.30" y="191.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (703,320 samples, 0.02%)</title><rect x="831.3" y="181" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="834.32" y="191.5" ></text>
</g>
<g >
<title>path_put (9,926,326 samples, 0.24%)</title><rect x="1073.1" y="165" width="2.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1076.10" y="175.5" ></text>
</g>
<g >
<title>atime_needs_update (557,864 samples, 0.01%)</title><rect x="10.0" y="85" width="0.2" height="15.0" fill="rgb(217,56,13)" rx="2" ry="2" />
<text  x="13.00" y="95.5" ></text>
</g>
<g >
<title>__memcg_kmem_charge_page (587,454 samples, 0.01%)</title><rect x="1189.8" y="101" width="0.2" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="1192.81" y="111.5" ></text>
</g>
<g >
<title>do_syscall_64 (3,216,318,253 samples, 76.36%)</title><rect x="193.7" y="245" width="901.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="196.74" y="255.5" >do_syscall_64</text>
</g>
<g >
<title>__x64_sys_bpf (2,148,420,797 samples, 51.01%)</title><rect x="210.7" y="229" width="601.9" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="213.66" y="239.5" >__x64_sys_bpf</text>
</g>
<g >
<title>_copy_from_user (23,500,694 samples, 0.56%)</title><rect x="689.2" y="181" width="6.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="692.16" y="191.5" ></text>
</g>
<g >
<title>migrate_enable (14,996,261 samples, 0.36%)</title><rect x="435.5" y="181" width="4.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="438.52" y="191.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,138,435 samples, 0.03%)</title><rect x="10.0" y="213" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>__sys_bpf (602,599 samples, 0.01%)</title><rect x="10.8" y="213" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="13.81" y="223.5" ></text>
</g>
<g >
<title>__libc_start_call_main (4,202,024,424 samples, 99.77%)</title><rect x="11.4" y="293" width="1177.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="14.36" y="303.5" >__libc_start_call_main</text>
</g>
<g >
<title>__fput_sync (651,243 samples, 0.02%)</title><rect x="11.2" y="229" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="14.18" y="239.5" ></text>
</g>
<g >
<title>unroll_tree_refs (15,668,698 samples, 0.37%)</title><rect x="1075.9" y="165" width="4.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1078.88" y="175.5" ></text>
</g>
<g >
<title>__check_heap_object (57,669,484 samples, 1.37%)</title><rect x="636.2" y="165" width="16.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="639.24" y="175.5" ></text>
</g>
<g >
<title>check_stack_object (49,225,710 samples, 1.17%)</title><rect x="439.7" y="197" width="13.8" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="442.72" y="207.5" ></text>
</g>
<g >
<title>alloc_file (660,657 samples, 0.02%)</title><rect x="1189.5" y="149" width="0.1" height="15.0" fill="rgb(234,133,31)" rx="2" ry="2" />
<text  x="1192.46" y="159.5" ></text>
</g>
<g >
<title>__x64_sys_bpf (602,599 samples, 0.01%)</title><rect x="10.8" y="229" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="13.81" y="239.5" ></text>
</g>
<g >
<title>exc_page_fault (629,968 samples, 0.01%)</title><rect x="10.5" y="229" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="13.47" y="239.5" ></text>
</g>
<g >
<title>htab_map_lookup_elem (8,522,804 samples, 0.20%)</title><rect x="453.5" y="197" width="2.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="456.51" y="207.5" ></text>
</g>
<g >
<title>memcpy_orig (7,861,010 samples, 0.19%)</title><rect x="582.3" y="197" width="2.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="585.28" y="207.5" ></text>
</g>
<g >
<title>alloc_empty_file (660,657 samples, 0.02%)</title><rect x="1189.5" y="133" width="0.1" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="1192.46" y="143.5" ></text>
</g>
<g >
<title>vmemdup_user (555,818,407 samples, 13.20%)</title><rect x="609.3" y="197" width="155.7" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="612.28" y="207.5" >vmemdup_user</text>
</g>
<g >
<title>migrate_disable (17,153,296 samples, 0.41%)</title><rect x="584.5" y="197" width="4.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="587.48" y="207.5" ></text>
</g>
<g >
<title>ktime_get_coarse_real_ts64 (557,864 samples, 0.01%)</title><rect x="10.0" y="53" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="13.00" y="63.5" ></text>
</g>
<g >
<title>__fdget (69,700,489 samples, 1.65%)</title><rect x="330.3" y="197" width="19.5" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="333.26" y="207.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (17,715,503 samples, 0.42%)</title><rect x="1094.8" y="245" width="5.0" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1097.84" y="255.5" ></text>
</g>
<g >
<title>memcmp (21,370,520 samples, 0.51%)</title><rect x="426.9" y="165" width="6.0" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="429.94" y="175.5" ></text>
</g>
<g >
<title>do_syscall_64 (651,243 samples, 0.02%)</title><rect x="11.2" y="261" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="14.18" y="271.5" ></text>
</g>
<g >
<title>_copy_to_user (17,783,639 samples, 0.42%)</title><rect x="766.8" y="213" width="5.0" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="769.80" y="223.5" ></text>
</g>
<g >
<title>__sys_bpf (13,517,959 samples, 0.32%)</title><rect x="206.9" y="229" width="3.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="209.88" y="239.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (131,143,446 samples, 3.11%)</title><rect x="711.1" y="149" width="36.7" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="714.09" y="159.5" >__k..</text>
</g>
<g >
<title>audit_reset_context (138,120,574 samples, 3.28%)</title><rect x="1041.6" y="181" width="38.7" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1044.57" y="191.5" >aud..</text>
</g>
<g >
<title>should_failslab (1,431,032 samples, 0.03%)</title><rect x="759.0" y="149" width="0.4" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="762.02" y="159.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (1,138,435 samples, 0.03%)</title><rect x="10.0" y="197" width="0.3" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>kfree (175,332,743 samples, 4.16%)</title><rect x="477.5" y="181" width="49.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="480.50" y="191.5" >kfree</text>
</g>
<g >
<title>current_time (557,864 samples, 0.01%)</title><rect x="10.0" y="69" width="0.2" height="15.0" fill="rgb(235,138,33)" rx="2" ry="2" />
<text  x="13.00" y="79.5" ></text>
</g>
<g >
<title>bpf_map_lookup_elem (34,954,272 samples, 0.83%)</title><rect x="11.4" y="277" width="9.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.36" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (602,599 samples, 0.01%)</title><rect x="10.8" y="245" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.81" y="255.5" ></text>
</g>
<g >
<title>should_failslab (4,973,885 samples, 0.12%)</title><rect x="576.5" y="165" width="1.4" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="579.50" y="175.5" ></text>
</g>
<g >
<title>do_sys_openat2 (528,567 samples, 0.01%)</title><rect x="10.3" y="213" width="0.2" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="13.32" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_execve (601,890 samples, 0.01%)</title><rect x="10.6" y="245" width="0.2" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="13.64" y="255.5" ></text>
</g>
<g >
<title>rcu_core_si (714,758 samples, 0.02%)</title><rect x="831.5" y="133" width="0.2" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="834.52" y="143.5" ></text>
</g>
<g >
<title>next_uptodate_folio (629,968 samples, 0.01%)</title><rect x="10.5" y="133" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.47" y="143.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (5,718,326 samples, 0.14%)</title><rect x="1023.2" y="197" width="1.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1026.22" y="207.5" ></text>
</g>
<g >
<title>do_check_common (602,599 samples, 0.01%)</title><rect x="10.8" y="165" width="0.2" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="13.81" y="175.5" ></text>
</g>
<g >
<title>filemap_map_pages (629,968 samples, 0.01%)</title><rect x="10.5" y="149" width="0.1" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="13.47" y="159.5" ></text>
</g>
<g >
<title>_dl_start_user (615,848 samples, 0.01%)</title><rect x="1188.6" y="293" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1191.62" y="303.5" ></text>
</g>
<g >
<title>do_dentry_open (528,567 samples, 0.01%)</title><rect x="10.3" y="149" width="0.2" height="15.0" fill="rgb(243,175,41)" rx="2" ry="2" />
<text  x="13.32" y="159.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (7,868,903 samples, 0.19%)</title><rect x="1102.0" y="261" width="2.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1105.01" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (683,753 samples, 0.02%)</title><rect x="1189.1" y="277" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1192.09" y="287.5" ></text>
</g>
<g >
<title>htab_map_alloc (1,169,694 samples, 0.03%)</title><rect x="1189.6" y="197" width="0.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1192.65" y="207.5" ></text>
</g>
<g >
<title>alloc_pages (587,454 samples, 0.01%)</title><rect x="1189.8" y="133" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1192.81" y="143.5" ></text>
</g>
<g >
<title>bprm_execve (601,890 samples, 0.01%)</title><rect x="10.6" y="213" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="13.64" y="223.5" ></text>
</g>
<g >
<title>__virt_addr_valid (8,533,366 samples, 0.20%)</title><rect x="357.8" y="197" width="2.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="360.76" y="207.5" ></text>
</g>
<g >
<title>kmem_cache_free (714,758 samples, 0.02%)</title><rect x="831.5" y="69" width="0.2" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="834.52" y="79.5" ></text>
</g>
<g >
<title>do_syscall_64 (601,890 samples, 0.01%)</title><rect x="10.6" y="261" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.64" y="271.5" ></text>
</g>
<g >
<title>__virt_addr_valid (115,605,531 samples, 2.74%)</title><rect x="652.4" y="165" width="32.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="655.40" y="175.5" >__..</text>
</g>
<g >
<title>kmalloc_slab (22,870,383 samples, 0.54%)</title><rect x="563.5" y="165" width="6.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="566.48" y="175.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (10,701,970 samples, 0.25%)</title><rect x="744.6" y="133" width="3.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="747.63" y="143.5" ></text>
</g>
<g >
<title>exc_page_fault (615,848 samples, 0.01%)</title><rect x="1188.6" y="229" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1191.62" y="239.5" ></text>
</g>
<g >
<title>task_work_run (482,609 samples, 0.01%)</title><rect x="1188.8" y="213" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1191.79" y="223.5" ></text>
</g>
<g >
<title>__fget_light (69,700,489 samples, 1.65%)</title><rect x="330.3" y="181" width="19.5" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="333.26" y="191.5" ></text>
</g>
<g >
<title>__slab_free (482,609 samples, 0.01%)</title><rect x="1188.8" y="101" width="0.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1191.79" y="111.5" ></text>
</g>
<g >
<title>__mmput (683,753 samples, 0.02%)</title><rect x="1189.1" y="197" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1192.09" y="207.5" ></text>
</g>
<g >
<title>security_bpf (5,010,959 samples, 0.12%)</title><rect x="808.4" y="213" width="1.4" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="811.37" y="223.5" ></text>
</g>
<g >
<title>memset (713,543 samples, 0.02%)</title><rect x="753.2" y="149" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="756.21" y="159.5" ></text>
</g>
<g >
<title>dput (7,864,555 samples, 0.19%)</title><rect x="1066.3" y="165" width="2.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1069.29" y="175.5" ></text>
</g>
<g >
<title>security_bpf (12,869,168 samples, 0.31%)</title><rect x="605.7" y="197" width="3.6" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="608.68" y="207.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (3,555,035 samples, 0.08%)</title><rect x="752.2" y="149" width="1.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="755.21" y="159.5" ></text>
</g>
<g >
<title>path_put (5,002,112 samples, 0.12%)</title><rect x="1084.0" y="181" width="1.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1087.05" y="191.5" ></text>
</g>
<g >
<title>kfree (13,500,160 samples, 0.32%)</title><rect x="1080.3" y="181" width="3.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1083.27" y="191.5" ></text>
</g>
<g >
<title>____fput (482,609 samples, 0.01%)</title><rect x="1188.8" y="197" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1191.79" y="207.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (5,009,374 samples, 0.12%)</title><rect x="577.9" y="181" width="1.4" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="580.89" y="191.5" ></text>
</g>
<g >
<title>_copy_from_user (6,434,682 samples, 0.15%)</title><rect x="765.0" y="213" width="1.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="768.00" y="223.5" ></text>
</g>
<g >
<title>memchr_inv (71,927,297 samples, 1.71%)</title><rect x="788.2" y="213" width="20.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="791.22" y="223.5" ></text>
</g>
<g >
<title>__handle_mm_fault (615,848 samples, 0.01%)</title><rect x="1188.6" y="181" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1191.62" y="191.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (17,155,139 samples, 0.41%)</title><rect x="815.6" y="229" width="4.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="818.58" y="239.5" ></text>
</g>
<g >
<title>__virt_addr_valid (7,143,170 samples, 0.17%)</title><rect x="687.2" y="181" width="2.0" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="690.15" y="191.5" ></text>
</g>
<g >
<title>check_func_arg_reg_off (602,599 samples, 0.01%)</title><rect x="10.8" y="133" width="0.2" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="13.81" y="143.5" ></text>
</g>
<g >
<title>__rcu_read_lock (3,483,640 samples, 0.08%)</title><rect x="354.0" y="197" width="1.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="356.98" y="207.5" ></text>
</g>
<g >
<title>__cond_resched (704,809 samples, 0.02%)</title><rect x="744.4" y="133" width="0.2" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="747.44" y="143.5" ></text>
</g>
<g >
<title>rcu_sched_clock_irq (703,320 samples, 0.02%)</title><rect x="831.3" y="85" width="0.2" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="834.32" y="95.5" ></text>
</g>
<g >
<title>do_anonymous_page (615,848 samples, 0.01%)</title><rect x="1188.6" y="165" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1191.62" y="175.5" ></text>
</g>
<g >
<title>_dl_map_object (1,138,435 samples, 0.03%)</title><rect x="10.0" y="261" width="0.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>touch_atime (557,864 samples, 0.01%)</title><rect x="10.0" y="101" width="0.2" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="13.00" y="111.5" ></text>
</g>
<g >
<title>__isoc99_sscanf (629,968 samples, 0.01%)</title><rect x="10.5" y="277" width="0.1" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="13.47" y="287.5" ></text>
</g>
<g >
<title>anon_inode_getfd (660,657 samples, 0.02%)</title><rect x="1189.5" y="197" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1192.46" y="207.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (703,320 samples, 0.02%)</title><rect x="831.3" y="165" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="834.32" y="175.5" ></text>
</g>
<g >
<title>kfree (12,165,935 samples, 0.29%)</title><rect x="461.5" y="197" width="3.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="464.52" y="207.5" ></text>
</g>
<g >
<title>kmalloc_trace (580,571 samples, 0.01%)</title><rect x="10.2" y="101" width="0.1" height="15.0" fill="rgb(221,76,18)" rx="2" ry="2" />
<text  x="13.16" y="111.5" ></text>
</g>
<g >
<title>__vm_area_free (714,758 samples, 0.02%)</title><rect x="831.5" y="85" width="0.2" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="834.52" y="95.5" ></text>
</g>
<g >
<title>vm_area_free_rcu_cb (714,758 samples, 0.02%)</title><rect x="831.5" y="101" width="0.2" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="834.52" y="111.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (714,758 samples, 0.02%)</title><rect x="831.5" y="165" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="834.52" y="175.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_array (2,824,425 samples, 0.07%)</title><rect x="360.1" y="197" width="0.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="363.15" y="207.5" ></text>
</g>
<g >
<title>__virt_addr_valid (30,015,944 samples, 0.71%)</title><rect x="319.1" y="181" width="8.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="322.08" y="191.5" ></text>
</g>
<g >
<title>get_mem_cgroup_from_mm (615,848 samples, 0.01%)</title><rect x="1188.6" y="133" width="0.2" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="1191.62" y="143.5" ></text>
</g>
<g >
<title>__cond_resched (5,655,131 samples, 0.13%)</title><rect x="709.5" y="149" width="1.6" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="712.51" y="159.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (651,243 samples, 0.02%)</title><rect x="11.2" y="277" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="14.18" y="287.5" ></text>
</g>
</g>
</svg>
