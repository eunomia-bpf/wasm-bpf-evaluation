<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="438" onload="init(evt)" viewBox="0 0 1200 438" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="438.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="421" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="421" > </text>
<g id="frames">
<g >
<title>__audit_syscall_exit (85,000,038 samples, 2.89%)</title><rect x="1040.4" y="261" width="34.1" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1043.43" y="271.5" >__..</text>
</g>
<g >
<title>bpf_map_area_alloc (1,394,500 samples, 0.05%)</title><rect x="1189.4" y="245" width="0.6" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1192.41" y="255.5" ></text>
</g>
<g >
<title>setup_arg_pages (334,683 samples, 0.01%)</title><rect x="10.8" y="245" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="13.80" y="255.5" ></text>
</g>
<g >
<title>perf_event_task_tick (838,811 samples, 0.03%)</title><rect x="820.5" y="133" width="0.4" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="823.54" y="143.5" ></text>
</g>
<g >
<title>do_syscall_64 (6,347,266 samples, 0.22%)</title><rect x="50.7" y="325" width="2.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="53.69" y="335.5" ></text>
</g>
<g >
<title>__check_heap_object (36,962,047 samples, 1.26%)</title><rect x="337.3" y="245" width="14.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="340.33" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (642,464 samples, 0.02%)</title><rect x="1188.6" y="293" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1191.60" y="303.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,686,982 samples, 0.06%)</title><rect x="820.2" y="213" width="0.7" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="823.20" y="223.5" ></text>
</g>
<g >
<title>main (25,679,768 samples, 0.87%)</title><rect x="25.9" y="341" width="10.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="28.92" y="351.5" ></text>
</g>
<g >
<title>__check_object_size (166,868,676 samples, 5.68%)</title><rect x="303.6" y="261" width="67.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="306.65" y="271.5" >__check..</text>
</g>
<g >
<title>__virt_addr_valid (69,221,346 samples, 2.35%)</title><rect x="660.0" y="229" width="27.8" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="663.02" y="239.5" >_..</text>
</g>
<g >
<title>is_vmalloc_addr (11,380,552 samples, 0.39%)</title><rect x="481.3" y="261" width="4.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="484.27" y="271.5" ></text>
</g>
<g >
<title>dput (684,747 samples, 0.02%)</title><rect x="10.5" y="245" width="0.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="13.52" y="255.5" ></text>
</g>
<g >
<title>mas_prev_range (642,464 samples, 0.02%)</title><rect x="1188.6" y="213" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1191.60" y="223.5" ></text>
</g>
<g >
<title>__kmem_cache_free (83,498,826 samples, 2.84%)</title><rect x="508.6" y="229" width="33.6" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="511.65" y="239.5" >__..</text>
</g>
<g >
<title>htab_map_hash (42,507,357 samples, 1.45%)</title><rect x="420.9" y="245" width="17.0" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="423.87" y="255.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (849,359 samples, 0.03%)</title><rect x="739.8" y="85" width="0.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="742.85" y="95.5" ></text>
</g>
<g >
<title>unmap_page_range (705,427 samples, 0.02%)</title><rect x="1189.1" y="197" width="0.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1192.12" y="207.5" ></text>
</g>
<g >
<title>syscall_exit_work (713,017 samples, 0.02%)</title><rect x="10.9" y="277" width="0.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="13.93" y="287.5" ></text>
</g>
<g >
<title>kfree (4,080,335 samples, 0.14%)</title><rect x="1060.3" y="229" width="1.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1063.33" y="239.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,394,500 samples, 0.05%)</title><rect x="1189.4" y="325" width="0.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1192.41" y="335.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (6,909,204 samples, 0.24%)</title><rect x="749.4" y="213" width="2.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="752.43" y="223.5" ></text>
</g>
<g >
<title>_copy_to_user (5,302,321 samples, 0.18%)</title><rect x="401.4" y="261" width="2.1" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="404.38" y="271.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (1,410,271 samples, 0.05%)</title><rect x="392.2" y="261" width="0.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="395.17" y="271.5" ></text>
</g>
<g >
<title>pipe_release (663,073 samples, 0.02%)</title><rect x="1188.9" y="229" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1191.86" y="239.5" ></text>
</g>
<g >
<title>do_filp_open (659,301 samples, 0.02%)</title><rect x="10.3" y="261" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="13.26" y="271.5" ></text>
</g>
<g >
<title>__cond_resched (4,176,481 samples, 0.14%)</title><rect x="556.3" y="229" width="1.7" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="559.35" y="239.5" ></text>
</g>
<g >
<title>pte_alloc_one (334,683 samples, 0.01%)</title><rect x="10.8" y="181" width="0.1" height="15.0" fill="rgb(252,217,51)" rx="2" ry="2" />
<text  x="13.80" y="191.5" ></text>
</g>
<g >
<title>bpf_check_uarg_tail_zero (8,682,738 samples, 0.30%)</title><rect x="771.8" y="277" width="3.5" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="774.79" y="287.5" ></text>
</g>
<g >
<title>tick_sched_timer (1,686,982 samples, 0.06%)</title><rect x="820.2" y="197" width="0.7" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="823.20" y="207.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,686,982 samples, 0.06%)</title><rect x="820.2" y="277" width="0.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="823.20" y="287.5" ></text>
</g>
<g >
<title>__kmalloc_node (2,229,786 samples, 0.08%)</title><rect x="687.8" y="245" width="0.9" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="690.80" y="255.5" ></text>
</g>
<g >
<title>dput (3,265,686 samples, 0.11%)</title><rect x="1059.0" y="229" width="1.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1062.02" y="239.5" ></text>
</g>
<g >
<title>__GI___libc_open (659,301 samples, 0.02%)</title><rect x="10.3" y="341" width="0.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="13.26" y="351.5" ></text>
</g>
<g >
<title>should_failslab (848,087 samples, 0.03%)</title><rect x="764.1" y="213" width="0.4" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="767.11" y="223.5" ></text>
</g>
<g >
<title>__sys_bpf (6,951,254 samples, 0.24%)</title><rect x="224.1" y="293" width="2.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="227.14" y="303.5" ></text>
</g>
<g >
<title>__libc_start_call_main (2,932,890,872 samples, 99.76%)</title><rect x="11.2" y="357" width="1177.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="14.22" y="367.5" >__libc_start_call_main</text>
</g>
<g >
<title>tick_sched_do_timer (849,359 samples, 0.03%)</title><rect x="739.8" y="101" width="0.4" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="742.85" y="111.5" ></text>
</g>
<g >
<title>scheduler_tick (841,964 samples, 0.03%)</title><rect x="403.5" y="133" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="406.50" y="143.5" ></text>
</g>
<g >
<title>munmap (642,464 samples, 0.02%)</title><rect x="1188.6" y="325" width="0.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1191.60" y="335.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (713,017 samples, 0.02%)</title><rect x="10.9" y="325" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="13.93" y="335.5" ></text>
</g>
<g >
<title>audit_reset_context (59,631,161 samples, 2.03%)</title><rect x="1042.6" y="245" width="24.0" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1045.63" y="255.5" >a..</text>
</g>
<g >
<title>kmalloc_slab (2,481,051 samples, 0.08%)</title><rect x="766.4" y="229" width="1.0" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="769.44" y="239.5" ></text>
</g>
<g >
<title>__kmalloc_node (1,412,519 samples, 0.05%)</title><rect x="391.0" y="261" width="0.6" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="394.04" y="271.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (5,993,689 samples, 0.20%)</title><rect x="1026.5" y="277" width="2.4" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1029.49" y="287.5" ></text>
</g>
<g >
<title>memset (4,731,127 samples, 0.16%)</title><rect x="752.2" y="213" width="1.9" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="755.20" y="223.5" ></text>
</g>
<g >
<title>vmemdup_user (6,705,337 samples, 0.23%)</title><rect x="803.0" y="277" width="2.7" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="806.02" y="287.5" ></text>
</g>
<g >
<title>unroll_tree_refs (9,911,874 samples, 0.34%)</title><rect x="1070.6" y="245" width="3.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1073.56" y="255.5" ></text>
</g>
<g >
<title>kmalloc_slab (1,408,029 samples, 0.05%)</title><rect x="587.8" y="245" width="0.6" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="590.82" y="255.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (841,964 samples, 0.03%)</title><rect x="403.5" y="229" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="406.50" y="239.5" ></text>
</g>
<g >
<title>[unknown] (641,128 samples, 0.02%)</title><rect x="10.0" y="341" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>scheduler_tick (831,899 samples, 0.03%)</title><rect x="687.5" y="85" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="690.47" y="95.5" ></text>
</g>
<g >
<title>unroll_tree_refs (5,906,554 samples, 0.20%)</title><rect x="1064.2" y="229" width="2.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1067.19" y="239.5" ></text>
</g>
<g >
<title>_copy_from_user (12,892,098 samples, 0.44%)</title><rect x="396.2" y="261" width="5.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="399.20" y="271.5" ></text>
</g>
<g >
<title>mntput (1,595,021 samples, 0.05%)</title><rect x="1062.0" y="229" width="0.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1064.97" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_bpf (1,394,500 samples, 0.05%)</title><rect x="1189.4" y="309" width="0.6" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.41" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (334,683 samples, 0.01%)</title><rect x="10.8" y="341" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="13.80" y="351.5" ></text>
</g>
<g >
<title>_copy_to_user (3,625,237 samples, 0.12%)</title><rect x="770.3" y="277" width="1.5" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="773.33" y="287.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (4,955,089 samples, 0.17%)</title><rect x="764.5" y="229" width="1.9" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="767.45" y="239.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (831,899 samples, 0.03%)</title><rect x="687.5" y="197" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="690.47" y="207.5" ></text>
</g>
<g >
<title>timekeeping_advance (848,576 samples, 0.03%)</title><rect x="50.0" y="181" width="0.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="53.01" y="191.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (8,103,109 samples, 0.28%)</title><rect x="1076.7" y="293" width="3.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1079.65" y="303.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (5,534,441 samples, 0.19%)</title><rect x="496.4" y="245" width="2.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="499.37" y="255.5" ></text>
</g>
<g >
<title>update_process_times (849,989 samples, 0.03%)</title><rect x="50.3" y="213" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="53.35" y="223.5" ></text>
</g>
<g >
<title>kvfree (6,682,089 samples, 0.23%)</title><rect x="781.8" y="277" width="2.6" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="784.76" y="287.5" ></text>
</g>
<g >
<title>__fget_light (7,450,558 samples, 0.25%)</title><rect x="388.0" y="261" width="3.0" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="391.05" y="271.5" ></text>
</g>
<g >
<title>lookup_nulls_elem_raw (21,644,262 samples, 0.74%)</title><rect x="445.4" y="229" width="8.7" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="448.43" y="239.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (39,100,922 samples, 1.33%)</title><rect x="558.0" y="229" width="15.7" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="561.03" y="239.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (7,155,603 samples, 0.24%)</title><rect x="1089.1" y="325" width="2.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1092.08" y="335.5" ></text>
</g>
<g >
<title>timekeeping_advance (848,171 samples, 0.03%)</title><rect x="820.2" y="133" width="0.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="823.20" y="143.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (831,899 samples, 0.03%)</title><rect x="687.5" y="181" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="690.47" y="191.5" ></text>
</g>
<g >
<title>update_process_times (831,899 samples, 0.03%)</title><rect x="687.5" y="101" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="690.47" y="111.5" ></text>
</g>
<g >
<title>kfree (2,223,316 samples, 0.08%)</title><rect x="485.8" y="261" width="0.9" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="488.84" y="271.5" ></text>
</g>
<g >
<title>update_cfs_group (831,899 samples, 0.03%)</title><rect x="687.5" y="69" width="0.3" height="15.0" fill="rgb(242,174,41)" rx="2" ry="2" />
<text  x="690.47" y="79.5" ></text>
</g>
<g >
<title>kvmalloc_node (169,206,951 samples, 5.76%)</title><rect x="699.5" y="245" width="67.9" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="702.53" y="255.5" >kvmallo..</text>
</g>
<g >
<title>__sys_bpf (1,338,822,293 samples, 45.54%)</title><rect x="231.8" y="277" width="537.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="234.75" y="287.5" >__sys_bpf</text>
</g>
<g >
<title>entry_SYSCALL_64 (705,427 samples, 0.02%)</title><rect x="1189.1" y="357" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1192.12" y="367.5" ></text>
</g>
<g >
<title>do_syscall_64 (684,747 samples, 0.02%)</title><rect x="10.5" y="309" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.52" y="319.5" ></text>
</g>
<g >
<title>__kmem_cache_free (663,073 samples, 0.02%)</title><rect x="1188.9" y="181" width="0.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1191.86" y="191.5" ></text>
</g>
<g >
<title>memcpy (1,676,967 samples, 0.06%)</title><rect x="588.4" y="261" width="0.7" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="591.38" y="271.5" ></text>
</g>
<g >
<title>__fdget (43,425,398 samples, 1.48%)</title><rect x="370.6" y="261" width="17.4" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="373.62" y="271.5" ></text>
</g>
<g >
<title>exc_page_fault (641,128 samples, 0.02%)</title><rect x="10.0" y="277" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>should_failslab (849,877 samples, 0.03%)</title><rect x="573.4" y="213" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="576.38" y="223.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (642,464 samples, 0.02%)</title><rect x="1188.6" y="341" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1191.60" y="351.5" ></text>
</g>
<g >
<title>shift_arg_pages (334,683 samples, 0.01%)</title><rect x="10.8" y="229" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="13.80" y="239.5" ></text>
</g>
<g >
<title>__virt_addr_valid (5,548,296 samples, 0.19%)</title><rect x="688.7" y="245" width="2.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="691.70" y="255.5" ></text>
</g>
<g >
<title>__fdget (5,057,958 samples, 0.17%)</title><rect x="229.7" y="277" width="2.1" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="232.72" y="287.5" ></text>
</g>
<g >
<title>kvmalloc_node (5,199,397 samples, 0.18%)</title><rect x="784.4" y="277" width="2.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="787.45" y="287.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,698,565 samples, 0.06%)</title><rect x="50.0" y="277" width="0.7" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="53.01" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_execve (334,683 samples, 0.01%)</title><rect x="10.8" y="309" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="13.80" y="319.5" ></text>
</g>
<g >
<title>____fput (663,073 samples, 0.02%)</title><rect x="1188.9" y="261" width="0.2" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1191.86" y="271.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (831,899 samples, 0.03%)</title><rect x="687.5" y="165" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="690.47" y="175.5" ></text>
</g>
<g >
<title>rep_movs_alternative (4,124,870 samples, 0.14%)</title><rect x="767.4" y="245" width="1.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="770.44" y="255.5" ></text>
</g>
<g >
<title>__kmalloc_node (155,132,949 samples, 5.28%)</title><rect x="702.2" y="229" width="62.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="705.19" y="239.5" >__kmal..</text>
</g>
<g >
<title>entry_SYSCALL_64 (659,301 samples, 0.02%)</title><rect x="10.3" y="325" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="13.26" y="335.5" ></text>
</g>
<g >
<title>__alloc_pages (334,683 samples, 0.01%)</title><rect x="10.8" y="149" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="13.80" y="159.5" ></text>
</g>
<g >
<title>kfree (663,073 samples, 0.02%)</title><rect x="1188.9" y="197" width="0.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1191.86" y="207.5" ></text>
</g>
<g >
<title>__bpf_map_area_alloc (1,394,500 samples, 0.05%)</title><rect x="1189.4" y="229" width="0.6" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1192.41" y="239.5" ></text>
</g>
<g >
<title>kvmalloc_node (115,166,860 samples, 3.92%)</title><rect x="542.2" y="261" width="46.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="545.16" y="271.5" >kvma..</text>
</g>
<g >
<title>free_pipe_info (663,073 samples, 0.02%)</title><rect x="1188.9" y="213" width="0.2" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1191.86" y="223.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (49,596,347 samples, 1.69%)</title><rect x="814.6" y="293" width="19.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="817.63" y="303.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_array (1,120,489 samples, 0.04%)</title><rect x="212.7" y="309" width="0.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="215.65" y="319.5" ></text>
</g>
<g >
<title>[vmlinux] (705,427 samples, 0.02%)</title><rect x="1189.1" y="325" width="0.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1192.12" y="335.5" ></text>
</g>
<g >
<title>__fput (663,073 samples, 0.02%)</title><rect x="1188.9" y="245" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1191.86" y="255.5" ></text>
</g>
<g >
<title>unmap_single_vma (705,427 samples, 0.02%)</title><rect x="1189.1" y="213" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1192.12" y="223.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (849,359 samples, 0.03%)</title><rect x="739.8" y="133" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="742.85" y="143.5" ></text>
</g>
<g >
<title>migrate_enable (1,525,779 samples, 0.05%)</title><rect x="595.5" y="261" width="0.6" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="598.53" y="271.5" ></text>
</g>
<g >
<title>alloc_empty_file (659,301 samples, 0.02%)</title><rect x="10.3" y="245" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="13.26" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (2,580,891,366 samples, 87.78%)</title><rect x="53.2" y="325" width="1035.9" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="56.23" y="335.5" >entry_SYSCALL_64</text>
</g>
<g >
<title>do_group_exit (705,427 samples, 0.02%)</title><rect x="1189.1" y="309" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1192.12" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (713,017 samples, 0.02%)</title><rect x="10.9" y="309" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.93" y="319.5" ></text>
</g>
<g >
<title>__vmalloc_node_range (1,394,500 samples, 0.05%)</title><rect x="1189.4" y="213" width="0.6" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1192.41" y="223.5" ></text>
</g>
<g >
<title>dentry_free (684,747 samples, 0.02%)</title><rect x="10.5" y="213" width="0.3" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="13.52" y="223.5" ></text>
</g>
<g >
<title>alloc_pages (1,394,500 samples, 0.05%)</title><rect x="1189.4" y="197" width="0.6" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1192.41" y="207.5" ></text>
</g>
<g >
<title>tick_sched_timer (849,359 samples, 0.03%)</title><rect x="739.8" y="117" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="742.85" y="127.5" ></text>
</g>
<g >
<title>copy_page (641,128 samples, 0.02%)</title><rect x="10.0" y="213" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>do_syscall_64 (659,301 samples, 0.02%)</title><rect x="10.3" y="309" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.26" y="319.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (848,576 samples, 0.03%)</title><rect x="50.0" y="213" width="0.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="53.01" y="223.5" ></text>
</g>
<g >
<title>alloc_pages (334,683 samples, 0.01%)</title><rect x="10.8" y="165" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="13.80" y="175.5" ></text>
</g>
<g >
<title>memset_orig (10,458,420 samples, 0.36%)</title><rect x="580.9" y="229" width="4.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="583.93" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_bpf (11,816,521 samples, 0.40%)</title><rect x="207.9" y="309" width="4.8" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="210.91" y="319.5" ></text>
</g>
<g >
<title>__virt_addr_valid (7,782,039 samples, 0.26%)</title><rect x="392.7" y="261" width="3.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="395.74" y="271.5" ></text>
</g>
<g >
<title>__check_heap_object (6,171,294 samples, 0.21%)</title><rect x="621.1" y="245" width="2.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="624.06" y="255.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (849,359 samples, 0.03%)</title><rect x="739.8" y="197" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="742.85" y="207.5" ></text>
</g>
<g >
<title>lookup_nulls_elem_raw (4,118,230 samples, 0.14%)</title><rect x="461.0" y="245" width="1.7" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="464.03" y="255.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,698,565 samples, 0.06%)</title><rect x="50.0" y="293" width="0.7" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="53.01" y="303.5" ></text>
</g>
<g >
<title>audit_reset_context (713,017 samples, 0.02%)</title><rect x="10.9" y="261" width="0.3" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="13.93" y="271.5" ></text>
</g>
<g >
<title>__audit_syscall_entry (4,162,550 samples, 0.14%)</title><rect x="818.5" y="277" width="1.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="821.53" y="287.5" ></text>
</g>
<g >
<title>__handle_mm_fault (641,128 samples, 0.02%)</title><rect x="10.0" y="229" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>mmput (705,427 samples, 0.02%)</title><rect x="1189.1" y="277" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1192.12" y="287.5" ></text>
</g>
<g >
<title>__audit_syscall_entry (6,634,440 samples, 0.23%)</title><rect x="831.9" y="261" width="2.6" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="834.87" y="271.5" ></text>
</g>
<g >
<title>path_put (3,936,526 samples, 0.13%)</title><rect x="1062.6" y="229" width="1.6" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1065.61" y="239.5" ></text>
</g>
<g >
<title>check_stack_object (27,552,777 samples, 0.94%)</title><rect x="466.9" y="261" width="11.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="469.90" y="271.5" ></text>
</g>
<g >
<title>rep_movs_alternative (21,933,242 samples, 0.75%)</title><rect x="596.1" y="261" width="8.8" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="599.14" y="271.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (849,359 samples, 0.03%)</title><rect x="739.8" y="181" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="742.85" y="191.5" ></text>
</g>
<g >
<title>should_failslab (282,995 samples, 0.01%)</title><rect x="585.1" y="229" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="588.12" y="239.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (848,171 samples, 0.03%)</title><rect x="820.2" y="181" width="0.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="823.20" y="191.5" ></text>
</g>
<g >
<title>__x64_sys_openat (659,301 samples, 0.02%)</title><rect x="10.3" y="293" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="13.26" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_munmap (642,464 samples, 0.02%)</title><rect x="1188.6" y="277" width="0.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1191.60" y="287.5" ></text>
</g>
<g >
<title>bpf_map_copy_value (157,123,705 samples, 5.34%)</title><rect x="403.8" y="261" width="63.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="406.84" y="271.5" >bpf_ma..</text>
</g>
<g >
<title>map_benchmark (2,939,969,028 samples, 100.00%)</title><rect x="10.0" y="373" width="1180.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="13.00" y="383.5" >map_benchmark</text>
</g>
<g >
<title>tick_do_update_jiffies64 (848,171 samples, 0.03%)</title><rect x="820.2" y="165" width="0.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="823.20" y="175.5" ></text>
</g>
<g >
<title>exit_mmap (705,427 samples, 0.02%)</title><rect x="1189.1" y="245" width="0.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1192.12" y="255.5" ></text>
</g>
<g >
<title>timekeeping_advance (849,359 samples, 0.03%)</title><rect x="739.8" y="53" width="0.4" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="742.85" y="63.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (831,899 samples, 0.03%)</title><rect x="687.5" y="149" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="690.47" y="159.5" ></text>
</g>
<g >
<title>security_bpf (6,077,227 samples, 0.21%)</title><rect x="800.6" y="277" width="2.4" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="803.58" y="287.5" ></text>
</g>
<g >
<title>arch_scale_freq_tick (849,989 samples, 0.03%)</title><rect x="50.3" y="181" width="0.4" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="53.35" y="191.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (2,180,704 samples, 0.07%)</title><rect x="572.5" y="213" width="0.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="575.50" y="223.5" ></text>
</g>
<g >
<title>_copy_from_user (12,012,592 samples, 0.41%)</title><rect x="690.9" y="245" width="4.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="693.92" y="255.5" ></text>
</g>
<g >
<title>__x64_sys_close (684,747 samples, 0.02%)</title><rect x="10.5" y="293" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="13.52" y="303.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (6,396,797 samples, 0.22%)</title><rect x="697.0" y="245" width="2.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="699.96" y="255.5" ></text>
</g>
<g >
<title>__virt_addr_valid (29,763,647 samples, 1.01%)</title><rect x="352.2" y="245" width="11.9" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="355.17" y="255.5" ></text>
</g>
<g >
<title>syscall_exit_work (100,883,641 samples, 3.43%)</title><rect x="1035.4" y="277" width="40.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1038.39" y="287.5" >sys..</text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,698,565 samples, 0.06%)</title><rect x="50.0" y="325" width="0.7" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="53.01" y="335.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (848,576 samples, 0.03%)</title><rect x="50.0" y="165" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="53.01" y="175.5" ></text>
</g>
<g >
<title>map_create (1,394,500 samples, 0.05%)</title><rect x="1189.4" y="277" width="0.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1192.41" y="287.5" ></text>
</g>
<g >
<title>mas_ascend (642,464 samples, 0.02%)</title><rect x="1188.6" y="197" width="0.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1191.60" y="207.5" ></text>
</g>
<g >
<title>bprm_execve (334,683 samples, 0.01%)</title><rect x="10.8" y="277" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="13.80" y="287.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (34,019,195 samples, 1.16%)</title><rect x="820.9" y="277" width="13.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="823.88" y="287.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (838,811 samples, 0.03%)</title><rect x="820.5" y="117" width="0.4" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="823.54" y="127.5" ></text>
</g>
<g >
<title>__sys_bpf (1,394,500 samples, 0.05%)</title><rect x="1189.4" y="293" width="0.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1192.41" y="303.5" ></text>
</g>
<g >
<title>native_read_msr (849,989 samples, 0.03%)</title><rect x="50.3" y="165" width="0.4" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="53.35" y="175.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (641,128 samples, 0.02%)</title><rect x="10.0" y="293" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>syscall_exit_work (1,920,654 samples, 0.07%)</title><rect x="1075.9" y="293" width="0.8" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1078.88" y="303.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (240,154,731 samples, 8.17%)</title><rect x="1092.0" y="325" width="96.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1094.95" y="335.5" >syscall_ret..</text>
</g>
<g >
<title>exit_to_user_mode_prepare (663,073 samples, 0.02%)</title><rect x="1188.9" y="293" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1191.86" y="303.5" ></text>
</g>
<g >
<title>tick_sched_handle (838,811 samples, 0.03%)</title><rect x="820.5" y="181" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="823.54" y="191.5" ></text>
</g>
<g >
<title>__rcu_read_lock (2,511,311 samples, 0.09%)</title><rect x="419.9" y="245" width="1.0" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="422.86" y="255.5" ></text>
</g>
<g >
<title>move_page_tables (334,683 samples, 0.01%)</title><rect x="10.8" y="213" width="0.1" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="13.80" y="223.5" ></text>
</g>
<g >
<title>do_sys_openat2 (659,301 samples, 0.02%)</title><rect x="10.3" y="277" width="0.2" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="13.26" y="287.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1,394,500 samples, 0.05%)</title><rect x="1189.4" y="165" width="0.6" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1192.41" y="175.5" ></text>
</g>
<g >
<title>kfree (6,713,201 samples, 0.23%)</title><rect x="1066.6" y="245" width="2.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1069.56" y="255.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,698,565 samples, 0.06%)</title><rect x="50.0" y="309" width="0.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="53.01" y="319.5" ></text>
</g>
<g >
<title>load_elf_binary (334,683 samples, 0.01%)</title><rect x="10.8" y="261" width="0.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="13.80" y="271.5" ></text>
</g>
<g >
<title>vmemdup_user (402,300,236 samples, 13.68%)</title><rect x="607.6" y="261" width="161.5" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="610.63" y="271.5" >vmemdup_user</text>
</g>
<g >
<title>__mmput (705,427 samples, 0.02%)</title><rect x="1189.1" y="261" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1192.12" y="271.5" ></text>
</g>
<g >
<title>tick_sched_timer (841,964 samples, 0.03%)</title><rect x="403.5" y="181" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="406.50" y="191.5" ></text>
</g>
<g >
<title>scheduler_tick (849,989 samples, 0.03%)</title><rect x="50.3" y="197" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="53.35" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (642,464 samples, 0.02%)</title><rect x="1188.6" y="309" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1191.60" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,159,695,788 samples, 73.46%)</title><rect x="213.1" y="309" width="866.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="216.10" y="319.5" >do_syscall_64</text>
</g>
<g >
<title>__fget_light (43,425,398 samples, 1.48%)</title><rect x="370.6" y="245" width="17.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="373.62" y="255.5" ></text>
</g>
<g >
<title>do_vmi_munmap (642,464 samples, 0.02%)</title><rect x="1188.6" y="245" width="0.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="1191.60" y="255.5" ></text>
</g>
<g >
<title>tick_sched_timer (1,698,565 samples, 0.06%)</title><rect x="50.0" y="245" width="0.7" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="53.01" y="255.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,686,982 samples, 0.06%)</title><rect x="820.2" y="245" width="0.7" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="823.20" y="255.5" ></text>
</g>
<g >
<title>kmalloc_slab (13,657,090 samples, 0.46%)</title><rect x="744.0" y="213" width="5.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="746.95" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (663,073 samples, 0.02%)</title><rect x="1188.9" y="341" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1191.86" y="351.5" ></text>
</g>
<g >
<title>htab_map_lookup_elem (8,243,134 samples, 0.28%)</title><rect x="478.0" y="261" width="3.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="480.96" y="271.5" ></text>
</g>
<g >
<title>__check_object_size (160,117,160 samples, 5.45%)</title><rect x="623.5" y="245" width="64.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="626.54" y="255.5" >__check..</text>
</g>
<g >
<title>kfree (108,560,062 samples, 3.69%)</title><rect x="498.6" y="245" width="43.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="501.59" y="255.5" >kfree</text>
</g>
<g >
<title>do_exit (705,427 samples, 0.02%)</title><rect x="1189.1" y="293" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1192.12" y="303.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (601,336,509 samples, 20.45%)</title><rect x="834.5" y="293" width="241.4" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="837.53" y="303.5" >syscall_exit_to_user_mode</text>
</g>
<g >
<title>audit_reset_context (3,337,477 samples, 0.11%)</title><rect x="1074.5" y="261" width="1.4" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1077.54" y="271.5" ></text>
</g>
<g >
<title>__check_object_size (6,959,366 samples, 0.24%)</title><rect x="226.9" y="277" width="2.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="229.93" y="287.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (1,125,209 samples, 0.04%)</title><rect x="1034.9" y="277" width="0.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1037.94" y="287.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (11,317,102 samples, 0.38%)</title><rect x="1079.9" y="309" width="4.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1082.90" y="319.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (841,964 samples, 0.03%)</title><rect x="403.5" y="197" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="406.50" y="207.5" ></text>
</g>
<g >
<title>memset_orig (24,936,843 samples, 0.85%)</title><rect x="754.1" y="213" width="10.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="757.10" y="223.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (11,554,587 samples, 0.39%)</title><rect x="1084.4" y="309" width="4.7" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1087.45" y="319.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (849,359 samples, 0.03%)</title><rect x="739.8" y="37" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="742.85" y="47.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (684,747 samples, 0.02%)</title><rect x="10.5" y="325" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="13.52" y="335.5" ></text>
</g>
<g >
<title>update_wall_time (848,171 samples, 0.03%)</title><rect x="820.2" y="149" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="823.20" y="159.5" ></text>
</g>
<g >
<title>migrate_disable (8,536,538 samples, 0.29%)</title><rect x="592.1" y="261" width="3.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="595.10" y="271.5" ></text>
</g>
<g >
<title>tick_sched_handle (849,989 samples, 0.03%)</title><rect x="50.3" y="229" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="53.35" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_bpf (1,442,086,838 samples, 49.05%)</title><rect x="226.9" y="293" width="578.8" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="229.93" y="303.5" >__x64_sys_bpf</text>
</g>
<g >
<title>_dl_allocate_tls_storage (639,816 samples, 0.02%)</title><rect x="1188.3" y="357" width="0.3" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="1191.34" y="367.5" ></text>
</g>
<g >
<title>__close (684,747 samples, 0.02%)</title><rect x="10.5" y="341" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="13.52" y="351.5" ></text>
</g>
<g >
<title>bpf_map_value_size (9,993,993 samples, 0.34%)</title><rect x="777.8" y="277" width="4.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="780.75" y="287.5" ></text>
</g>
<g >
<title>native_read_msr (841,964 samples, 0.03%)</title><rect x="403.5" y="101" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="406.50" y="111.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (849,359 samples, 0.03%)</title><rect x="739.8" y="149" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="742.85" y="159.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_array (851,795 samples, 0.03%)</title><rect x="395.9" y="261" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="398.86" y="271.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (831,899 samples, 0.03%)</title><rect x="687.5" y="213" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="690.47" y="223.5" ></text>
</g>
<g >
<title>task_work_run (663,073 samples, 0.02%)</title><rect x="1188.9" y="277" width="0.2" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1191.86" y="287.5" ></text>
</g>
<g >
<title>tick_sched_handle (841,964 samples, 0.03%)</title><rect x="403.5" y="165" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="406.50" y="175.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (841,964 samples, 0.03%)</title><rect x="403.5" y="245" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="406.50" y="255.5" ></text>
</g>
<g >
<title>memset (641,128 samples, 0.02%)</title><rect x="10.0" y="309" width="0.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (79,673,505 samples, 2.71%)</title><rect x="712.0" y="213" width="32.0" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="714.97" y="223.5" >__..</text>
</g>
<g >
<title>__pte_alloc (334,683 samples, 0.01%)</title><rect x="10.8" y="197" width="0.1" height="15.0" fill="rgb(218,62,15)" rx="2" ry="2" />
<text  x="13.80" y="207.5" ></text>
</g>
<g >
<title>memchr_inv (35,011,264 samples, 1.19%)</title><rect x="786.5" y="277" width="14.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="789.53" y="287.5" ></text>
</g>
<g >
<title>htab_map_alloc (1,394,500 samples, 0.05%)</title><rect x="1189.4" y="261" width="0.6" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1192.41" y="271.5" ></text>
</g>
<g >
<title>__vm_munmap (642,464 samples, 0.02%)</title><rect x="1188.6" y="261" width="0.3" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="1191.60" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1,394,500 samples, 0.05%)</title><rect x="1189.4" y="341" width="0.6" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1192.41" y="351.5" ></text>
</g>
<g >
<title>clear_page_erms (1,394,500 samples, 0.05%)</title><rect x="1189.4" y="149" width="0.6" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1192.41" y="159.5" ></text>
</g>
<g >
<title>__check_heap_object (10,030,351 samples, 0.34%)</title><rect x="299.6" y="261" width="4.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="302.62" y="271.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (15,060,253 samples, 0.51%)</title><rect x="1028.9" y="277" width="6.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1031.89" y="287.5" ></text>
</g>
<g >
<title>update_wall_time (848,576 samples, 0.03%)</title><rect x="50.0" y="197" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="53.01" y="207.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,686,982 samples, 0.06%)</title><rect x="820.2" y="229" width="0.7" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="823.20" y="239.5" ></text>
</g>
<g >
<title>_dl_start_user (642,464 samples, 0.02%)</title><rect x="1188.6" y="357" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1191.60" y="367.5" ></text>
</g>
<g >
<title>__alloc_pages (1,394,500 samples, 0.05%)</title><rect x="1189.4" y="181" width="0.6" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1192.41" y="191.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (9,085,803 samples, 0.31%)</title><rect x="740.2" y="197" width="3.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="743.19" y="207.5" ></text>
</g>
<g >
<title>check_stack_object (16,205,237 samples, 0.55%)</title><rect x="364.1" y="245" width="6.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="367.12" y="255.5" ></text>
</g>
<g >
<title>memcmp (17,220,305 samples, 0.59%)</title><rect x="454.1" y="229" width="6.9" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="457.11" y="239.5" ></text>
</g>
<g >
<title>kmalloc_slab (13,167,997 samples, 0.45%)</title><rect x="573.7" y="229" width="5.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="576.72" y="239.5" ></text>
</g>
<g >
<title>__dentry_kill (684,747 samples, 0.02%)</title><rect x="10.5" y="229" width="0.3" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="13.52" y="239.5" ></text>
</g>
<g >
<title>_start (663,073 samples, 0.02%)</title><rect x="1188.9" y="357" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1191.86" y="367.5" ></text>
</g>
<g >
<title>security_bpf (6,684,659 samples, 0.23%)</title><rect x="604.9" y="261" width="2.7" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="607.95" y="271.5" ></text>
</g>
<g >
<title>_copy_from_user (3,093,946 samples, 0.11%)</title><rect x="769.1" y="277" width="1.2" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="772.09" y="287.5" ></text>
</g>
<g >
<title>unmap_vmas (705,427 samples, 0.02%)</title><rect x="1189.1" y="229" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1192.12" y="239.5" ></text>
</g>
<g >
<title>path_put (3,254,449 samples, 0.11%)</title><rect x="1069.3" y="245" width="1.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1072.26" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (663,073 samples, 0.02%)</title><rect x="1188.9" y="325" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1191.86" y="335.5" ></text>
</g>
<g >
<title>update_process_times (838,811 samples, 0.03%)</title><rect x="820.5" y="165" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="823.54" y="175.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (4,788,057 samples, 0.16%)</title><rect x="579.0" y="229" width="1.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="582.00" y="239.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (334,683 samples, 0.01%)</title><rect x="10.8" y="293" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="13.80" y="303.5" ></text>
</g>
<g >
<title>__kmalloc_node (91,888,363 samples, 3.13%)</title><rect x="548.4" y="245" width="36.8" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="551.36" y="255.5" >__k..</text>
</g>
<g >
<title>__hrtimer_run_queues (1,698,565 samples, 0.06%)</title><rect x="50.0" y="261" width="0.7" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="53.01" y="271.5" ></text>
</g>
<g >
<title>bpf_map_copy_value (6,175,993 samples, 0.21%)</title><rect x="775.3" y="277" width="2.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="778.27" y="287.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (713,017 samples, 0.02%)</title><rect x="10.9" y="293" width="0.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="13.93" y="303.5" ></text>
</g>
<g >
<title>tick_sched_timer (831,899 samples, 0.03%)</title><rect x="687.5" y="133" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="690.47" y="143.5" ></text>
</g>
<g >
<title>htab_map_lookup_elem (57,555,638 samples, 1.96%)</title><rect x="437.9" y="245" width="23.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="440.93" y="255.5" >h..</text>
</g>
<g >
<title>handle_mm_fault (641,128 samples, 0.02%)</title><rect x="10.0" y="245" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (663,073 samples, 0.02%)</title><rect x="1188.9" y="309" width="0.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1191.86" y="319.5" ></text>
</g>
<g >
<title>__kmem_cache_free (12,208,535 samples, 0.42%)</title><rect x="491.5" y="245" width="4.9" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="494.47" y="255.5" ></text>
</g>
<g >
<title>all (2,940,056,486 samples, 100%)</title><rect x="10.0" y="389" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>__cond_resched (845,587 samples, 0.03%)</title><rect x="711.6" y="213" width="0.4" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="714.63" y="223.5" ></text>
</g>
<g >
<title>__fput (684,747 samples, 0.02%)</title><rect x="10.5" y="261" width="0.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="13.52" y="271.5" ></text>
</g>
<g >
<title>[unknown] (3,032,876 samples, 0.10%)</title><rect x="10.0" y="357" width="1.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>_dl_map_object (641,128 samples, 0.02%)</title><rect x="10.0" y="325" width="0.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>tick_sched_handle (831,899 samples, 0.03%)</title><rect x="687.5" y="117" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="690.47" y="127.5" ></text>
</g>
<g >
<title>should_failslab (282,582 samples, 0.01%)</title><rect x="743.8" y="197" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="746.84" y="207.5" ></text>
</g>
<g >
<title>kvfree (138,112,831 samples, 4.70%)</title><rect x="486.7" y="261" width="55.5" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="489.73" y="271.5" >kvfree</text>
</g>
<g >
<title>check_stack_object (3,021,855 samples, 0.10%)</title><rect x="695.7" y="245" width="1.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="698.75" y="255.5" ></text>
</g>
<g >
<title>__rcu_read_lock (1,406,265 samples, 0.05%)</title><rect x="391.6" y="261" width="0.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="394.61" y="271.5" ></text>
</g>
<g >
<title>scheduler_tick (838,811 samples, 0.03%)</title><rect x="820.5" y="149" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="823.54" y="159.5" ></text>
</g>
<g >
<title>do_syscall_64 (334,683 samples, 0.01%)</title><rect x="10.8" y="325" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.80" y="335.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (4,730,629 samples, 0.16%)</title><rect x="1033.0" y="261" width="1.9" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1036.04" y="271.5" ></text>
</g>
<g >
<title>__fput_sync (684,747 samples, 0.02%)</title><rect x="10.5" y="277" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.52" y="287.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (6,435,618 samples, 0.22%)</title><rect x="585.2" y="245" width="2.6" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="588.24" y="255.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (841,964 samples, 0.03%)</title><rect x="403.5" y="261" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="406.50" y="271.5" ></text>
</g>
<g >
<title>migrate_enable (10,525,700 samples, 0.36%)</title><rect x="462.7" y="245" width="4.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="465.68" y="255.5" ></text>
</g>
<g >
<title>__check_heap_object (48,598,357 samples, 1.65%)</title><rect x="640.5" y="229" width="19.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="643.51" y="239.5" ></text>
</g>
<g >
<title>do_syscall_64 (705,427 samples, 0.02%)</title><rect x="1189.1" y="341" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1192.12" y="351.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (841,964 samples, 0.03%)</title><rect x="403.5" y="213" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="406.50" y="223.5" ></text>
</g>
<g >
<title>syscall (713,017 samples, 0.02%)</title><rect x="10.9" y="341" width="0.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="13.93" y="351.5" ></text>
</g>
<g >
<title>syscall (2,870,581,870 samples, 97.64%)</title><rect x="36.2" y="341" width="1152.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="39.23" y="351.5" >syscall</text>
</g>
<g >
<title>amd_clear_divider (13,053,030 samples, 0.44%)</title><rect x="805.7" y="293" width="5.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="808.71" y="303.5" ></text>
</g>
<g >
<title>do_user_addr_fault (641,128 samples, 0.02%)</title><rect x="10.0" y="261" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>update_process_times (841,964 samples, 0.03%)</title><rect x="403.5" y="149" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="406.50" y="159.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (849,359 samples, 0.03%)</title><rect x="739.8" y="165" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="742.85" y="175.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,686,982 samples, 0.06%)</title><rect x="820.2" y="261" width="0.7" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="823.20" y="271.5" ></text>
</g>
<g >
<title>bpf_map_lookup_elem (36,629,234 samples, 1.25%)</title><rect x="11.2" y="341" width="14.7" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.22" y="351.5" ></text>
</g>
<g >
<title>update_wall_time (849,359 samples, 0.03%)</title><rect x="739.8" y="69" width="0.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="742.85" y="79.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (848,576 samples, 0.03%)</title><rect x="50.0" y="229" width="0.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="53.01" y="239.5" ></text>
</g>
<g >
<title>arch_scale_freq_tick (841,964 samples, 0.03%)</title><rect x="403.5" y="117" width="0.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="406.50" y="127.5" ></text>
</g>
<g >
<title>memcpy_orig (7,589,622 samples, 0.26%)</title><rect x="589.1" y="261" width="3.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="592.06" y="271.5" ></text>
</g>
<g >
<title>syscall (1,394,500 samples, 0.05%)</title><rect x="1189.4" y="357" width="0.6" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1192.41" y="367.5" ></text>
</g>
<g >
<title>vm_normal_page (705,427 samples, 0.02%)</title><rect x="1189.1" y="181" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1192.12" y="191.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (9,150,337 samples, 0.31%)</title><rect x="811.0" y="293" width="3.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="813.95" y="303.5" ></text>
</g>
<g >
<title>do_vmi_align_munmap (642,464 samples, 0.02%)</title><rect x="1188.6" y="229" width="0.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="1191.60" y="239.5" ></text>
</g>
</g>
</svg>
