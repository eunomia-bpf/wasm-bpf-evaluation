<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="406" onload="init(evt)" viewBox="0 0 1200 406" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="406.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="389" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="389" > </text>
<g id="frames">
<g >
<title>vma_expand (295,199 samples, 0.01%)</title><rect x="11.6" y="181" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="14.61" y="191.5" ></text>
</g>
<g >
<title>unroll_tree_refs (5,771,419 samples, 0.20%)</title><rect x="1073.7" y="213" width="2.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1076.74" y="223.5" ></text>
</g>
<g >
<title>__audit_syscall_entry (8,136,201 samples, 0.28%)</title><rect x="810.1" y="229" width="3.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="813.14" y="239.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (801,039 samples, 0.03%)</title><rect x="33.7" y="245" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="36.70" y="255.5" ></text>
</g>
<g >
<title>update_wall_time (838,167 samples, 0.03%)</title><rect x="402.8" y="85" width="0.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="405.83" y="95.5" ></text>
</g>
<g >
<title>audit_reset_context (78,459,421 samples, 2.68%)</title><rect x="1036.7" y="213" width="31.6" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1039.65" y="223.5" >au..</text>
</g>
<g >
<title>__virt_addr_valid (36,267,889 samples, 1.24%)</title><rect x="353.3" y="213" width="14.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="356.30" y="223.5" ></text>
</g>
<g >
<title>__sys_bpf (7,243,440 samples, 0.25%)</title><rect x="227.0" y="261" width="2.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="230.00" y="271.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (6,013,811 samples, 0.21%)</title><rect x="570.6" y="213" width="2.4" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="573.58" y="223.5" ></text>
</g>
<g >
<title>clear_page_erms (1,695,537 samples, 0.06%)</title><rect x="1189.3" y="117" width="0.7" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1192.29" y="127.5" ></text>
</g>
<g >
<title>htab_map_hash (34,971,848 samples, 1.20%)</title><rect x="423.9" y="213" width="14.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="426.91" y="223.5" ></text>
</g>
<g >
<title>vmemdup_user (8,060,583 samples, 0.28%)</title><rect x="776.5" y="245" width="3.3" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="779.54" y="255.5" ></text>
</g>
<g >
<title>syscall (2,860,626,669 samples, 97.80%)</title><rect x="34.0" y="309" width="1154.0" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="37.03" y="319.5" >syscall</text>
</g>
<g >
<title>migrate_disable (11,720,802 samples, 0.40%)</title><rect x="575.0" y="229" width="4.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="578.02" y="239.5" ></text>
</g>
<g >
<title>__vfscanf_internal (859,044 samples, 0.03%)</title><rect x="10.6" y="293" width="0.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="13.63" y="303.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,205,848 samples, 0.04%)</title><rect x="53.2" y="261" width="0.5" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="56.20" y="271.5" ></text>
</g>
<g >
<title>__isoc99_sscanf (859,044 samples, 0.03%)</title><rect x="10.6" y="309" width="0.4" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="13.63" y="319.5" ></text>
</g>
<g >
<title>perf_event_mmap (702,341 samples, 0.02%)</title><rect x="11.3" y="149" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="14.33" y="159.5" ></text>
</g>
<g >
<title>do_lookup_x (866,463 samples, 0.03%)</title><rect x="1188.9" y="325" width="0.4" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="1191.94" y="335.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (801,039 samples, 0.03%)</title><rect x="33.7" y="293" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="36.70" y="303.5" ></text>
</g>
<g >
<title>check_stack_object (30,004,174 samples, 1.03%)</title><rect x="463.9" y="229" width="12.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="466.86" y="239.5" ></text>
</g>
<g >
<title>ttwu_queue_wakelist (715,739 samples, 0.02%)</title><rect x="10.3" y="101" width="0.3" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="13.35" y="111.5" ></text>
</g>
<g >
<title>__check_heap_object (30,638,606 samples, 1.05%)</title><rect x="340.9" y="213" width="12.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="343.94" y="223.5" ></text>
</g>
<g >
<title>do_fault (855,436 samples, 0.03%)</title><rect x="10.0" y="181" width="0.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title>kvmalloc_node (2,697,272 samples, 0.09%)</title><rect x="759.5" y="245" width="1.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="762.54" y="255.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (38,918,904 samples, 1.33%)</title><rect x="797.7" y="245" width="15.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="800.72" y="255.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (859,044 samples, 0.03%)</title><rect x="10.6" y="277" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="13.63" y="287.5" ></text>
</g>
<g >
<title>__kmalloc_node (101,290,260 samples, 3.46%)</title><rect x="529.7" y="213" width="40.9" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="532.72" y="223.5" >__k..</text>
</g>
<g >
<title>__virt_addr_valid (2,755,482 samples, 0.09%)</title><rect x="664.3" y="213" width="1.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="667.25" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_execve (997,540 samples, 0.03%)</title><rect x="11.3" y="277" width="0.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="14.33" y="287.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (13,076,457 samples, 0.45%)</title><rect x="710.2" y="165" width="5.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="713.16" y="175.5" ></text>
</g>
<g >
<title>unroll_tree_refs (13,559,478 samples, 0.46%)</title><rect x="1062.8" y="197" width="5.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1065.83" y="207.5" ></text>
</g>
<g >
<title>do_fault (859,044 samples, 0.03%)</title><rect x="10.6" y="197" width="0.4" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="13.63" y="207.5" ></text>
</g>
<g >
<title>migrate_enable (7,756,956 samples, 0.27%)</title><rect x="579.7" y="229" width="3.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="582.74" y="239.5" ></text>
</g>
<g >
<title>bprm_execve (997,540 samples, 0.03%)</title><rect x="11.3" y="245" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="14.33" y="255.5" ></text>
</g>
<g >
<title>path_put (4,208,633 samples, 0.14%)</title><rect x="1072.0" y="213" width="1.7" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1075.04" y="223.5" ></text>
</g>
<g >
<title>should_failslab (564,304 samples, 0.02%)</title><rect x="715.4" y="165" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="718.44" y="175.5" ></text>
</g>
<g >
<title>do_syscall_64 (997,540 samples, 0.03%)</title><rect x="11.3" y="293" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="14.33" y="303.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (715,739 samples, 0.02%)</title><rect x="10.3" y="197" width="0.3" height="15.0" fill="rgb(226,100,24)" rx="2" ry="2" />
<text  x="13.35" y="207.5" ></text>
</g>
<g >
<title>kvfree (4,259,893 samples, 0.15%)</title><rect x="757.8" y="245" width="1.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="760.82" y="255.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (1,902,523 samples, 0.07%)</title><rect x="669.9" y="213" width="0.7" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="672.85" y="223.5" ></text>
</g>
<g >
<title>kmalloc_slab (19,030,028 samples, 0.65%)</title><rect x="556.8" y="197" width="7.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="559.83" y="207.5" ></text>
</g>
<g >
<title>__wake_up_common_lock (715,739 samples, 0.02%)</title><rect x="10.3" y="181" width="0.3" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="13.35" y="191.5" ></text>
</g>
<g >
<title>do_syscall_64 (5,156,321 samples, 0.18%)</title><rect x="53.7" y="293" width="2.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="56.69" y="303.5" ></text>
</g>
<g >
<title>__fdget (7,495,653 samples, 0.26%)</title><rect x="234.2" y="245" width="3.0" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="237.22" y="255.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (838,167 samples, 0.03%)</title><rect x="402.8" y="101" width="0.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="405.83" y="111.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,205,848 samples, 0.04%)</title><rect x="53.2" y="277" width="0.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="56.20" y="287.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (7,568,496 samples, 0.26%)</title><rect x="1081.2" y="277" width="3.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1084.22" y="287.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (822,559 samples, 0.03%)</title><rect x="367.6" y="149" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="370.60" y="159.5" ></text>
</g>
<g >
<title>shift_arg_pages (295,199 samples, 0.01%)</title><rect x="11.6" y="197" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="14.61" y="207.5" ></text>
</g>
<g >
<title>handle_mm_fault (859,044 samples, 0.03%)</title><rect x="10.6" y="229" width="0.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="13.63" y="239.5" ></text>
</g>
<g >
<title>timekeeping_update (855,016 samples, 0.03%)</title><rect x="53.2" y="133" width="0.3" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="56.20" y="143.5" ></text>
</g>
<g >
<title>setup_arg_pages (295,199 samples, 0.01%)</title><rect x="11.6" y="213" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="14.61" y="223.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (6,064,904 samples, 0.21%)</title><rect x="1078.8" y="261" width="2.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1081.77" y="271.5" ></text>
</g>
<g >
<title>__rcu_read_lock (2,772,728 samples, 0.09%)</title><rect x="391.8" y="229" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="394.80" y="239.5" ></text>
</g>
<g >
<title>_copy_to_user (3,229,123 samples, 0.11%)</title><rect x="745.8" y="245" width="1.3" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="748.78" y="255.5" ></text>
</g>
<g >
<title>__kmalloc_node (4,467,457 samples, 0.15%)</title><rect x="662.5" y="213" width="1.8" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="665.45" y="223.5" ></text>
</g>
<g >
<title>__check_heap_object (9,853,296 samples, 0.34%)</title><rect x="300.6" y="229" width="4.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="303.58" y="239.5" ></text>
</g>
<g >
<title>kfree (3,354,292 samples, 0.11%)</title><rect x="485.7" y="229" width="1.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="488.70" y="239.5" ></text>
</g>
<g >
<title>check_stack_object (15,573,191 samples, 0.53%)</title><rect x="367.9" y="213" width="6.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="370.93" y="223.5" ></text>
</g>
<g >
<title>_dl_map_object (855,436 samples, 0.03%)</title><rect x="10.0" y="293" width="0.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>__handle_mm_fault (855,436 samples, 0.03%)</title><rect x="10.0" y="197" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (997,540 samples, 0.03%)</title><rect x="11.3" y="309" width="0.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="14.33" y="319.5" ></text>
</g>
<g >
<title>lookup_nulls_elem_raw (17,237,334 samples, 0.59%)</title><rect x="446.1" y="197" width="6.9" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="449.08" y="207.5" ></text>
</g>
<g >
<title>_copy_from_user (13,527,576 samples, 0.46%)</title><rect x="397.7" y="229" width="5.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="400.71" y="239.5" ></text>
</g>
<g >
<title>rep_movs_alternative (26,153,653 samples, 0.89%)</title><rect x="582.9" y="229" width="10.5" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="585.87" y="239.5" ></text>
</g>
<g >
<title>kmalloc_slab (2,720,962 samples, 0.09%)</title><rect x="573.0" y="213" width="1.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="576.00" y="223.5" ></text>
</g>
<g >
<title>load_elf_binary (997,540 samples, 0.03%)</title><rect x="11.3" y="229" width="0.4" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="14.33" y="239.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (4,521,102 samples, 0.15%)</title><rect x="1024.9" y="229" width="1.9" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1027.93" y="239.5" ></text>
</g>
<g >
<title>autoremove_wake_function (715,739 samples, 0.02%)</title><rect x="10.3" y="149" width="0.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.35" y="159.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (80,079,180 samples, 2.74%)</title><rect x="683.4" y="181" width="32.3" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="686.36" y="191.5" >__..</text>
</g>
<g >
<title>_copy_to_user (2,234,747 samples, 0.08%)</title><rect x="403.2" y="229" width="0.9" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="406.16" y="239.5" ></text>
</g>
<g >
<title>__vmalloc_node_range (1,695,537 samples, 0.06%)</title><rect x="1189.3" y="181" width="0.7" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1192.29" y="191.5" ></text>
</g>
<g >
<title>syscall@plt (2,266,015 samples, 0.08%)</title><rect x="1188.0" y="309" width="0.9" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1191.02" y="319.5" ></text>
</g>
<g >
<title>[unknown] (855,436 samples, 0.03%)</title><rect x="10.0" y="309" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (838,167 samples, 0.03%)</title><rect x="402.8" y="53" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="405.83" y="63.5" ></text>
</g>
<g >
<title>__alloc_pages (855,436 samples, 0.03%)</title><rect x="10.0" y="133" width="0.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="13.00" y="143.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,205,848 samples, 0.04%)</title><rect x="53.2" y="229" width="0.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="56.20" y="239.5" ></text>
</g>
<g >
<title>syscall_exit_work (122,820,112 samples, 4.20%)</title><rect x="1028.6" y="245" width="49.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1031.55" y="255.5" >sysc..</text>
</g>
<g >
<title>__check_heap_object (43,386,174 samples, 1.48%)</title><rect x="622.6" y="197" width="17.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="625.63" y="207.5" ></text>
</g>
<g >
<title>arch_setup_additional_pages (702,341 samples, 0.02%)</title><rect x="11.3" y="213" width="0.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="14.33" y="223.5" ></text>
</g>
<g >
<title>__audit_syscall_entry (8,511,507 samples, 0.29%)</title><rect x="794.3" y="245" width="3.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="797.29" y="255.5" ></text>
</g>
<g >
<title>tick_sched_handle (822,559 samples, 0.03%)</title><rect x="367.6" y="101" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="370.60" y="111.5" ></text>
</g>
<g >
<title>__kmalloc_node (3,823,751 samples, 0.13%)</title><rect x="390.3" y="229" width="1.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="393.25" y="239.5" ></text>
</g>
<g >
<title>arch_scale_freq_tick (822,559 samples, 0.03%)</title><rect x="367.6" y="53" width="0.3" height="15.0" fill="rgb(252,219,52)" rx="2" ry="2" />
<text  x="370.60" y="63.5" ></text>
</g>
<g >
<title>path_put (283,655 samples, 0.01%)</title><rect x="1062.7" y="197" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1065.72" y="207.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (855,016 samples, 0.03%)</title><rect x="53.2" y="181" width="0.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="56.20" y="191.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1,695,537 samples, 0.06%)</title><rect x="1189.3" y="309" width="0.7" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1192.29" y="319.5" ></text>
</g>
<g >
<title>kmalloc_slab (3,089,512 samples, 0.11%)</title><rect x="742.2" y="197" width="1.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="745.24" y="207.5" ></text>
</g>
<g >
<title>task_work_run (824,552 samples, 0.03%)</title><rect x="1026.8" y="229" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1029.76" y="239.5" ></text>
</g>
<g >
<title>__alloc_pages (1,695,537 samples, 0.06%)</title><rect x="1189.3" y="149" width="0.7" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1192.29" y="159.5" ></text>
</g>
<g >
<title>_install_special_mapping (702,341 samples, 0.02%)</title><rect x="11.3" y="181" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="14.33" y="191.5" ></text>
</g>
<g >
<title>kvmalloc_node (119,727,591 samples, 4.09%)</title><rect x="525.8" y="229" width="48.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="528.80" y="239.5" >kvma..</text>
</g>
<g >
<title>default_wake_function (715,739 samples, 0.02%)</title><rect x="10.3" y="133" width="0.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="13.35" y="143.5" ></text>
</g>
<g >
<title>vfs_write (715,739 samples, 0.02%)</title><rect x="10.3" y="229" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="13.35" y="239.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (801,039 samples, 0.03%)</title><rect x="33.7" y="229" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="36.70" y="239.5" ></text>
</g>
<g >
<title>exc_page_fault (859,044 samples, 0.03%)</title><rect x="10.6" y="261" width="0.4" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="13.63" y="271.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (838,167 samples, 0.03%)</title><rect x="402.8" y="117" width="0.4" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="405.83" y="127.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (238,087,704 samples, 8.14%)</title><rect x="1092.0" y="293" width="96.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1094.98" y="303.5" >syscall_ret..</text>
</g>
<g >
<title>is_vmalloc_addr (4,103,341 samples, 0.14%)</title><rect x="493.8" y="213" width="1.7" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="496.82" y="223.5" ></text>
</g>
<g >
<title>__virt_addr_valid (4,690,742 samples, 0.16%)</title><rect x="395.4" y="229" width="1.9" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="398.37" y="239.5" ></text>
</g>
<g >
<title>memchr_inv (31,615,734 samples, 1.08%)</title><rect x="760.6" y="245" width="12.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="763.63" y="255.5" ></text>
</g>
<g >
<title>__fget_light (29,897,047 samples, 1.02%)</title><rect x="374.2" y="213" width="12.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="377.22" y="223.5" ></text>
</g>
<g >
<title>should_failslab (564,786 samples, 0.02%)</title><rect x="738.7" y="181" width="0.2" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="741.70" y="191.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (43,315,472 samples, 1.48%)</title><rect x="539.4" y="197" width="17.4" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="542.35" y="207.5" ></text>
</g>
<g >
<title>__check_heap_object (4,492,804 samples, 0.15%)</title><rect x="609.6" y="213" width="1.8" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="612.58" y="223.5" ></text>
</g>
<g >
<title>rcu_sched_clock_irq (801,039 samples, 0.03%)</title><rect x="33.7" y="165" width="0.3" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="36.70" y="175.5" ></text>
</g>
<g >
<title>handle_mm_fault (855,436 samples, 0.03%)</title><rect x="10.0" y="213" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (14,817,939 samples, 0.51%)</title><rect x="479.7" y="229" width="6.0" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="482.72" y="239.5" ></text>
</g>
<g >
<title>lookup_nulls_elem_raw (5,720,689 samples, 0.20%)</title><rect x="458.3" y="213" width="2.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="461.31" y="223.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (855,436 samples, 0.03%)</title><rect x="10.0" y="261" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (2,560,098,472 samples, 87.52%)</title><rect x="55.8" y="293" width="1032.7" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="58.77" y="303.5" >entry_SYSCALL_64</text>
</g>
<g >
<title>syscall_exit_to_user_mode (10,551,617 samples, 0.36%)</title><rect x="1084.3" y="277" width="4.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1087.27" y="287.5" ></text>
</g>
<g >
<title>kfree (8,051,851 samples, 0.28%)</title><rect x="1058.8" y="197" width="3.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1061.81" y="207.5" ></text>
</g>
<g >
<title>all (2,925,081,726 samples, 100%)</title><rect x="10.0" y="357" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>kfree (9,273,255 samples, 0.32%)</title><rect x="1068.3" y="213" width="3.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1071.30" y="223.5" ></text>
</g>
<g >
<title>security_bpf (9,363,410 samples, 0.32%)</title><rect x="593.4" y="229" width="3.8" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="596.42" y="239.5" ></text>
</g>
<g >
<title>scheduler_tick (822,559 samples, 0.03%)</title><rect x="367.6" y="69" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="370.60" y="79.5" ></text>
</g>
<g >
<title>tick_sched_timer (801,039 samples, 0.03%)</title><rect x="33.7" y="213" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="36.70" y="223.5" ></text>
</g>
<g >
<title>bpf_map_lookup_elem (31,698,672 samples, 1.08%)</title><rect x="11.7" y="309" width="12.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.73" y="319.5" ></text>
</g>
<g >
<title>__kmem_cache_free (54,752,668 samples, 1.87%)</title><rect x="503.7" y="197" width="22.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="506.72" y="207.5" >_..</text>
</g>
<g >
<title>timekeeping_advance (855,016 samples, 0.03%)</title><rect x="53.2" y="149" width="0.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="56.20" y="159.5" ></text>
</g>
<g >
<title>bpf_check_uarg_tail_zero (12,831,240 samples, 0.44%)</title><rect x="747.1" y="245" width="5.2" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="750.08" y="255.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (103,996,572 samples, 3.56%)</title><rect x="1034.1" y="229" width="42.0" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1037.12" y="239.5" >__a..</text>
</g>
<g >
<title>do_syscall_64 (715,739 samples, 0.02%)</title><rect x="10.3" y="277" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.35" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_bpf (1,695,537 samples, 0.06%)</title><rect x="1189.3" y="277" width="0.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.29" y="287.5" ></text>
</g>
<g >
<title>vmemdup_user (365,540,684 samples, 12.50%)</title><rect x="597.2" y="229" width="147.5" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="600.20" y="239.5" >vmemdup_user</text>
</g>
<g >
<title>exit_to_user_mode_prepare (10,616,139 samples, 0.36%)</title><rect x="1022.8" y="245" width="4.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1025.81" y="255.5" ></text>
</g>
<g >
<title>task_mm_cid_work (824,552 samples, 0.03%)</title><rect x="1026.8" y="213" width="0.3" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="1029.76" y="223.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (8,547,405 samples, 0.29%)</title><rect x="1088.5" y="293" width="3.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1091.53" y="303.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (838,167 samples, 0.03%)</title><rect x="402.8" y="165" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="405.83" y="175.5" ></text>
</g>
<g >
<title>amd_clear_divider (14,749,652 samples, 0.50%)</title><rect x="779.8" y="261" width="5.9" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="782.79" y="271.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (3,631,523 samples, 0.12%)</title><rect x="1027.1" y="245" width="1.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1030.09" y="255.5" ></text>
</g>
<g >
<title>__check_object_size (172,682,120 samples, 5.90%)</title><rect x="304.6" y="229" width="69.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="307.56" y="239.5" >__check..</text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (8,037,651 samples, 0.27%)</title><rect x="725.9" y="181" width="3.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="728.92" y="191.5" ></text>
</g>
<g >
<title>bpf_map_area_alloc (1,695,537 samples, 0.06%)</title><rect x="1189.3" y="213" width="0.7" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1192.29" y="223.5" ></text>
</g>
<g >
<title>__kmalloc_node (161,971,727 samples, 5.54%)</title><rect x="673.6" y="197" width="65.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="676.59" y="207.5" >__kmall..</text>
</g>
<g >
<title>__x64_sys_bpf (11,980,312 samples, 0.41%)</title><rect x="209.6" y="277" width="4.8" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="212.61" y="287.5" ></text>
</g>
<g >
<title>do_user_addr_fault (855,436 samples, 0.03%)</title><rect x="10.0" y="229" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (5,126,169 samples, 0.18%)</title><rect x="564.5" y="197" width="2.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="567.50" y="207.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (822,559 samples, 0.03%)</title><rect x="367.6" y="133" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="370.60" y="143.5" ></text>
</g>
<g >
<title>kvmalloc_node (180,629,854 samples, 6.18%)</title><rect x="670.6" y="213" width="72.9" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="673.62" y="223.5" >kvmalloc..</text>
</g>
<g >
<title>tick_sched_handle (350,832 samples, 0.01%)</title><rect x="53.5" y="197" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="56.54" y="207.5" ></text>
</g>
<g >
<title>memcmp (13,095,060 samples, 0.45%)</title><rect x="453.0" y="197" width="5.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="456.03" y="207.5" ></text>
</g>
<g >
<title>__install_special_mapping (702,341 samples, 0.02%)</title><rect x="11.3" y="165" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="14.33" y="175.5" ></text>
</g>
<g >
<title>tick_sched_handle (801,039 samples, 0.03%)</title><rect x="33.7" y="197" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="36.70" y="207.5" ></text>
</g>
<g >
<title>__perf_addr_filters_adjust (702,341 samples, 0.02%)</title><rect x="11.3" y="117" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="14.33" y="127.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (10,528,508 samples, 0.36%)</title><rect x="552.5" y="181" width="4.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="555.46" y="191.5" ></text>
</g>
<g >
<title>htab_map_lookup_elem (50,299,872 samples, 1.72%)</title><rect x="438.0" y="213" width="20.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="441.02" y="223.5" ></text>
</g>
<g >
<title>audit_reset_context (5,029,399 samples, 0.17%)</title><rect x="1076.1" y="229" width="2.0" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1079.07" y="239.5" ></text>
</g>
<g >
<title>htab_map_lookup_elem (9,306,609 samples, 0.32%)</title><rect x="476.0" y="229" width="3.7" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="478.97" y="239.5" ></text>
</g>
<g >
<title>update_process_times (822,559 samples, 0.03%)</title><rect x="367.6" y="85" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="370.60" y="95.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (60,200,818 samples, 2.06%)</title><rect x="789.1" y="261" width="24.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="792.13" y="271.5" >s..</text>
</g>
<g >
<title>map_benchmark (2,925,011,031 samples, 100.00%)</title><rect x="10.0" y="341" width="1180.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="13.00" y="351.5" >map_benchmark</text>
</g>
<g >
<title>mntput (1,639,786 samples, 0.06%)</title><rect x="1062.1" y="197" width="0.6" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1065.06" y="207.5" ></text>
</g>
<g >
<title>bpf_prog_load (855,733 samples, 0.03%)</title><rect x="11.0" y="309" width="0.3" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="13.98" y="319.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (822,559 samples, 0.03%)</title><rect x="367.6" y="165" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="370.60" y="175.5" ></text>
</g>
<g >
<title>filemap_map_pages (859,044 samples, 0.03%)</title><rect x="10.6" y="181" width="0.4" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="13.63" y="191.5" ></text>
</g>
<g >
<title>_copy_from_user (9,468,808 samples, 0.32%)</title><rect x="665.4" y="213" width="3.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="668.37" y="223.5" ></text>
</g>
<g >
<title>__sys_bpf (1,695,537 samples, 0.06%)</title><rect x="1189.3" y="261" width="0.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1192.29" y="271.5" ></text>
</g>
<g >
<title>memset (3,012,841 samples, 0.10%)</title><rect x="729.2" y="181" width="1.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="732.16" y="191.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (822,559 samples, 0.03%)</title><rect x="367.6" y="197" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="370.60" y="207.5" ></text>
</g>
<g >
<title>__check_object_size (126,569,375 samples, 4.33%)</title><rect x="611.4" y="213" width="51.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="614.39" y="223.5" >__che..</text>
</g>
<g >
<title>update_process_times (801,039 samples, 0.03%)</title><rect x="33.7" y="181" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="36.70" y="191.5" ></text>
</g>
<g >
<title>main (23,574,183 samples, 0.81%)</title><rect x="24.5" y="309" width="9.5" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="27.52" y="319.5" ></text>
</g>
<g >
<title>next_uptodate_folio (859,044 samples, 0.03%)</title><rect x="10.6" y="165" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.63" y="175.5" ></text>
</g>
<g >
<title>__fdget (29,897,047 samples, 1.02%)</title><rect x="374.2" y="229" width="12.1" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="377.22" y="239.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (702,341 samples, 0.02%)</title><rect x="11.3" y="133" width="0.3" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="14.33" y="143.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (838,167 samples, 0.03%)</title><rect x="402.8" y="149" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="405.83" y="159.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (997,540 samples, 0.03%)</title><rect x="11.3" y="261" width="0.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="14.33" y="271.5" ></text>
</g>
<g >
<title>get_page_from_freelist (855,436 samples, 0.03%)</title><rect x="10.0" y="117" width="0.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="13.00" y="127.5" ></text>
</g>
<g >
<title>bpf_map_copy_value (3,921,707 samples, 0.13%)</title><rect x="752.3" y="245" width="1.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="755.26" y="255.5" ></text>
</g>
<g >
<title>__virt_addr_valid (55,318,094 samples, 1.89%)</title><rect x="640.1" y="197" width="22.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="643.14" y="207.5" >_..</text>
</g>
<g >
<title>__fget_light (9,852,953 samples, 0.34%)</title><rect x="386.3" y="229" width="4.0" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="389.28" y="239.5" ></text>
</g>
<g >
<title>alloc_pages (1,695,537 samples, 0.06%)</title><rect x="1189.3" y="165" width="0.7" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1192.29" y="175.5" ></text>
</g>
<g >
<title>__x64_sys_write (715,739 samples, 0.02%)</title><rect x="10.3" y="261" width="0.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="13.35" y="271.5" ></text>
</g>
<g >
<title>memset_orig (20,636,468 samples, 0.71%)</title><rect x="730.4" y="181" width="8.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="733.38" y="191.5" ></text>
</g>
<g >
<title>tick_sched_timer (1,205,848 samples, 0.04%)</title><rect x="53.2" y="213" width="0.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="56.20" y="223.5" ></text>
</g>
<g >
<title>update_vsyscall (855,016 samples, 0.03%)</title><rect x="53.2" y="117" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="56.20" y="127.5" ></text>
</g>
<g >
<title>htab_map_alloc (1,695,537 samples, 0.06%)</title><rect x="1189.3" y="229" width="0.7" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1192.29" y="239.5" ></text>
</g>
<g >
<title>update_process_times (350,832 samples, 0.01%)</title><rect x="53.5" y="181" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="56.54" y="191.5" ></text>
</g>
<g >
<title>timekeeping_advance (838,167 samples, 0.03%)</title><rect x="402.8" y="69" width="0.4" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="405.83" y="79.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,695,537 samples, 0.06%)</title><rect x="1189.3" y="293" width="0.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1192.29" y="303.5" ></text>
</g>
<g >
<title>__GI___libc_write (715,739 samples, 0.02%)</title><rect x="10.3" y="309" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="13.35" y="319.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_array (1,910,191 samples, 0.07%)</title><rect x="214.4" y="277" width="0.8" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="217.45" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_bpf (1,363,068,912 samples, 46.60%)</title><rect x="229.9" y="261" width="549.9" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="232.92" y="271.5" >__x64_sys_bpf</text>
</g>
<g >
<title>ksys_write (715,739 samples, 0.02%)</title><rect x="10.3" y="245" width="0.3" height="15.0" fill="rgb(205,4,1)" rx="2" ry="2" />
<text  x="13.35" y="255.5" ></text>
</g>
<g >
<title>tick_sched_timer (838,167 samples, 0.03%)</title><rect x="402.8" y="133" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="405.83" y="143.5" ></text>
</g>
<g >
<title>__sys_bpf (1,257,838,131 samples, 43.00%)</title><rect x="237.2" y="245" width="507.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="240.24" y="255.5" >__sys_bpf</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (838,167 samples, 0.03%)</title><rect x="402.8" y="197" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="405.83" y="207.5" ></text>
</g>
<g >
<title>exc_page_fault (855,436 samples, 0.03%)</title><rect x="10.0" y="245" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>__libc_start_call_main (2,918,165,539 samples, 99.76%)</title><rect x="11.7" y="325" width="1177.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="14.73" y="335.5" >__libc_start_call_main</text>
</g>
<g >
<title>syscall_exit_work (1,669,386 samples, 0.06%)</title><rect x="1078.1" y="261" width="0.7" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1081.10" y="271.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (822,559 samples, 0.03%)</title><rect x="367.6" y="181" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="370.60" y="191.5" ></text>
</g>
<g >
<title>kfree (75,177,146 samples, 2.57%)</title><rect x="495.5" y="213" width="30.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="498.48" y="223.5" >kf..</text>
</g>
<g >
<title>do_user_addr_fault (859,044 samples, 0.03%)</title><rect x="10.6" y="245" width="0.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="13.63" y="255.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (2,550,855 samples, 0.09%)</title><rect x="1021.8" y="245" width="1.0" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1024.78" y="255.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (656,109,736 samples, 22.43%)</title><rect x="813.4" y="261" width="264.7" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="816.42" y="271.5" >syscall_exit_to_user_mode</text>
</g>
<g >
<title>_copy_from_user (2,759,725 samples, 0.09%)</title><rect x="744.7" y="245" width="1.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="747.66" y="255.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (855,016 samples, 0.03%)</title><rect x="53.2" y="197" width="0.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="56.20" y="207.5" ></text>
</g>
<g >
<title>__bpf_map_area_alloc (1,695,537 samples, 0.06%)</title><rect x="1189.3" y="197" width="0.7" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1192.29" y="207.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (801,039 samples, 0.03%)</title><rect x="33.7" y="277" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="36.70" y="287.5" ></text>
</g>
<g >
<title>map_create (1,695,537 samples, 0.06%)</title><rect x="1189.3" y="245" width="0.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1192.29" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,146,721,278 samples, 73.39%)</title><rect x="215.2" y="277" width="866.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="218.22" y="287.5" >do_syscall_64</text>
</g>
<g >
<title>bpf_map_value_size (9,879,029 samples, 0.34%)</title><rect x="753.8" y="245" width="4.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="756.84" y="255.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (801,039 samples, 0.03%)</title><rect x="33.7" y="261" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="36.70" y="271.5" ></text>
</g>
<g >
<title>memcpy (283,922 samples, 0.01%)</title><rect x="574.1" y="229" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="577.10" y="239.5" ></text>
</g>
<g >
<title>[unknown] (4,283,492 samples, 0.15%)</title><rect x="10.0" y="325" width="1.7" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>should_failslab (281,771 samples, 0.01%)</title><rect x="556.7" y="181" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="559.71" y="191.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (8,208,556 samples, 0.28%)</title><rect x="738.9" y="197" width="3.3" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="741.93" y="207.5" ></text>
</g>
<g >
<title>pipe_write (715,739 samples, 0.02%)</title><rect x="10.3" y="213" width="0.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="13.35" y="223.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (6,093,635 samples, 0.21%)</title><rect x="392.9" y="229" width="2.5" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="395.91" y="239.5" ></text>
</g>
<g >
<title>native_read_msr (822,559 samples, 0.03%)</title><rect x="367.6" y="37" width="0.3" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="370.60" y="47.5" ></text>
</g>
<g >
<title>security_bpf (7,826,131 samples, 0.27%)</title><rect x="773.4" y="245" width="3.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="776.38" y="255.5" ></text>
</g>
<g >
<title>try_to_wake_up (715,739 samples, 0.02%)</title><rect x="10.3" y="117" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="13.35" y="127.5" ></text>
</g>
<g >
<title>tick_sched_timer (822,559 samples, 0.03%)</title><rect x="367.6" y="117" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="370.60" y="127.5" ></text>
</g>
<g >
<title>__cond_resched (3,029,405 samples, 0.10%)</title><rect x="538.1" y="197" width="1.3" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="541.13" y="207.5" ></text>
</g>
<g >
<title>dput (1,086,083 samples, 0.04%)</title><rect x="1058.4" y="197" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1061.37" y="207.5" ></text>
</g>
<g >
<title>rep_movs_alternative (2,911,404 samples, 0.10%)</title><rect x="743.5" y="213" width="1.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="746.49" y="223.5" ></text>
</g>
<g >
<title>__rcu_read_lock (797,386 samples, 0.03%)</title><rect x="423.6" y="213" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="426.59" y="223.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_array (1,097,972 samples, 0.04%)</title><rect x="397.3" y="229" width="0.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="400.26" y="239.5" ></text>
</g>
<g >
<title>__wake_up_common (715,739 samples, 0.02%)</title><rect x="10.3" y="165" width="0.3" height="15.0" fill="rgb(248,197,47)" rx="2" ry="2" />
<text  x="13.35" y="175.5" ></text>
</g>
<g >
<title>__cond_resched (4,708,645 samples, 0.16%)</title><rect x="681.5" y="181" width="1.9" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="684.46" y="191.5" ></text>
</g>
<g >
<title>memset_orig (7,715,463 samples, 0.26%)</title><rect x="566.6" y="197" width="3.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="569.57" y="207.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,205,848 samples, 0.04%)</title><rect x="53.2" y="245" width="0.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="56.20" y="255.5" ></text>
</g>
<g >
<title>__handle_mm_fault (859,044 samples, 0.03%)</title><rect x="10.6" y="213" width="0.4" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="13.63" y="223.5" ></text>
</g>
<g >
<title>check_stack_object (1,656,964 samples, 0.06%)</title><rect x="669.2" y="213" width="0.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="672.19" y="223.5" ></text>
</g>
<g >
<title>vma_alloc_folio (855,436 samples, 0.03%)</title><rect x="10.0" y="165" width="0.3" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="13.00" y="175.5" ></text>
</g>
<g >
<title>account_process_tick (350,832 samples, 0.01%)</title><rect x="53.5" y="165" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="56.54" y="175.5" ></text>
</g>
<g >
<title>update_wall_time (855,016 samples, 0.03%)</title><rect x="53.2" y="165" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="56.20" y="175.5" ></text>
</g>
<g >
<title>memcpy_orig (1,981,890 samples, 0.07%)</title><rect x="574.2" y="229" width="0.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="577.22" y="239.5" ></text>
</g>
<g >
<title>kvfree (96,063,395 samples, 3.28%)</title><rect x="487.1" y="229" width="38.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="490.05" y="239.5" >kvf..</text>
</g>
<g >
<title>syscall (1,695,537 samples, 0.06%)</title><rect x="1189.3" y="325" width="0.7" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1192.29" y="335.5" ></text>
</g>
<g >
<title>migrate_enable (8,030,727 samples, 0.27%)</title><rect x="460.6" y="213" width="3.3" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="463.62" y="223.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,205,848 samples, 0.04%)</title><rect x="53.2" y="293" width="0.5" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="56.20" y="303.5" ></text>
</g>
<g >
<title>memset (855,436 samples, 0.03%)</title><rect x="10.0" y="277" width="0.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>__check_object_size (10,654,691 samples, 0.36%)</title><rect x="229.9" y="245" width="4.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="232.92" y="255.5" ></text>
</g>
<g >
<title>should_failslab (2,220,305 samples, 0.08%)</title><rect x="569.7" y="197" width="0.9" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="572.68" y="207.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1,695,537 samples, 0.06%)</title><rect x="1189.3" y="133" width="0.7" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1192.29" y="143.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (838,167 samples, 0.03%)</title><rect x="402.8" y="213" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="405.83" y="223.5" ></text>
</g>
<g >
<title>__folio_alloc (855,436 samples, 0.03%)</title><rect x="10.0" y="149" width="0.3" height="15.0" fill="rgb(224,91,21)" rx="2" ry="2" />
<text  x="13.00" y="159.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (715,739 samples, 0.02%)</title><rect x="10.3" y="293" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="13.35" y="303.5" ></text>
</g>
<g >
<title>__kmem_cache_free (7,391,752 samples, 0.25%)</title><rect x="490.8" y="213" width="3.0" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="493.84" y="223.5" ></text>
</g>
<g >
<title>kmalloc_slab (25,421,036 samples, 0.87%)</title><rect x="715.7" y="181" width="10.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="718.67" y="191.5" ></text>
</g>
<g >
<title>bpf_map_copy_value (148,226,080 samples, 5.07%)</title><rect x="404.1" y="229" width="59.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="407.07" y="239.5" >bpf_ma..</text>
</g>
<g >
<title>llist_add_batch (715,739 samples, 0.02%)</title><rect x="10.3" y="85" width="0.3" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="13.35" y="95.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (8,408,667 samples, 0.29%)</title><rect x="785.7" y="261" width="3.4" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="788.74" y="271.5" ></text>
</g>
<g >
<title>map_vdso (702,341 samples, 0.02%)</title><rect x="11.3" y="197" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="14.33" y="207.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (838,167 samples, 0.03%)</title><rect x="402.8" y="181" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="405.83" y="191.5" ></text>
</g>
</g>
</svg>
