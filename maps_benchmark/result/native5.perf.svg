<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="678" onload="init(evt)" viewBox="0 0 1200 678" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="678.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="661" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="661" > </text>
<g id="frames">
<g >
<title>__audit_syscall_entry (2,527,564 samples, 0.09%)</title><rect x="820.7" y="517" width="1.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="823.68" y="527.5" ></text>
</g>
<g >
<title>kvmalloc_node (122,694,402 samples, 4.25%)</title><rect x="533.3" y="501" width="50.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="536.27" y="511.5" >kvmal..</text>
</g>
<g >
<title>exit_to_user_mode_prepare (14,712,549 samples, 0.51%)</title><rect x="1015.6" y="517" width="6.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1018.58" y="527.5" ></text>
</g>
<g >
<title>__x64_sys_execve (295,252 samples, 0.01%)</title><rect x="10.7" y="549" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="13.72" y="559.5" ></text>
</g>
<g >
<title>map_benchmark (2,887,022,973 samples, 100.00%)</title><rect x="10.0" y="613" width="1180.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="13.00" y="623.5" >map_benchmark</text>
</g>
<g >
<title>bpf_map_copy_value (5,198,526 samples, 0.18%)</title><rect x="783.7" y="517" width="2.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="786.72" y="527.5" ></text>
</g>
<g >
<title>irqentry_exit_to_user_mode (496,846 samples, 0.02%)</title><rect x="1188.9" y="533" width="0.2" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1191.91" y="543.5" ></text>
</g>
<g >
<title>__x64_sys_bpf (11,339,925 samples, 0.39%)</title><rect x="210.9" y="549" width="4.6" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="213.89" y="559.5" ></text>
</g>
<g >
<title>memset_orig (10,416,890 samples, 0.36%)</title><rect x="574.9" y="469" width="4.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="577.89" y="479.5" ></text>
</g>
<g >
<title>memcmp (11,558,284 samples, 0.40%)</title><rect x="446.2" y="469" width="4.7" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="449.18" y="479.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (596,283 samples, 0.02%)</title><rect x="1188.7" y="549" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1191.67" y="559.5" ></text>
</g>
<g >
<title>security_bpf (1,873,551 samples, 0.06%)</title><rect x="807.5" y="517" width="0.8" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="810.50" y="527.5" ></text>
</g>
<g >
<title>syscall (1,235,646 samples, 0.04%)</title><rect x="10.8" y="581" width="0.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="13.84" y="591.5" ></text>
</g>
<g >
<title>[unknown] (565,971 samples, 0.02%)</title><rect x="10.0" y="581" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="591.5" ></text>
</g>
<g >
<title>__cond_resched (1,869,880 samples, 0.06%)</title><rect x="709.7" y="453" width="0.8" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="712.74" y="463.5" ></text>
</g>
<g >
<title>kmalloc_slab (4,824,455 samples, 0.17%)</title><rect x="581.4" y="485" width="2.0" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="584.44" y="495.5" ></text>
</g>
<g >
<title>kfree (4,302,774 samples, 0.15%)</title><rect x="475.5" y="501" width="1.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="478.46" y="511.5" ></text>
</g>
<g >
<title>mmput (818,235 samples, 0.03%)</title><rect x="1189.1" y="517" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1192.12" y="527.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (655,768 samples, 0.02%)</title><rect x="51.8" y="517" width="0.3" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="54.83" y="527.5" ></text>
</g>
<g >
<title>bpf_check (624,758 samples, 0.02%)</title><rect x="10.8" y="485" width="0.3" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="13.84" y="495.5" ></text>
</g>
<g >
<title>migrate_enable (7,408,509 samples, 0.26%)</title><rect x="453.8" y="485" width="3.0" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="456.79" y="495.5" ></text>
</g>
<g >
<title>bpf_map_value_size (10,428,113 samples, 0.36%)</title><rect x="785.8" y="517" width="4.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="788.85" y="527.5" ></text>
</g>
<g >
<title>mntput (4,547,706 samples, 0.16%)</title><rect x="1059.6" y="469" width="1.8" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1062.55" y="479.5" ></text>
</g>
<g >
<title>_start (496,846 samples, 0.02%)</title><rect x="1188.9" y="597" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1191.91" y="607.5" ></text>
</g>
<g >
<title>ip_queue_xmit (656,868 samples, 0.02%)</title><rect x="379.7" y="277" width="0.2" height="15.0" fill="rgb(230,119,28)" rx="2" ry="2" />
<text  x="382.66" y="287.5" ></text>
</g>
<g >
<title>__kmalloc_node (105,186,635 samples, 3.64%)</title><rect x="536.7" y="485" width="43.0" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="539.69" y="495.5" >__km..</text>
</g>
<g >
<title>__kmem_cache_free (21,275,976 samples, 0.74%)</title><rect x="479.6" y="485" width="8.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="482.65" y="495.5" ></text>
</g>
<g >
<title>bpf_check_uarg_tail_zero (11,416,744 samples, 0.40%)</title><rect x="779.1" y="517" width="4.6" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="782.06" y="527.5" ></text>
</g>
<g >
<title>__fget_light (10,418,375 samples, 0.36%)</title><rect x="371.8" y="501" width="4.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="374.83" y="511.5" ></text>
</g>
<g >
<title>_copy_from_user (6,096,356 samples, 0.21%)</title><rect x="691.8" y="485" width="2.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="694.80" y="495.5" ></text>
</g>
<g >
<title>__virt_addr_valid (24,019,957 samples, 0.83%)</title><rect x="343.0" y="485" width="9.8" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="345.99" y="495.5" ></text>
</g>
<g >
<title>vfree (624,758 samples, 0.02%)</title><rect x="10.8" y="469" width="0.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="13.84" y="479.5" ></text>
</g>
<g >
<title>remove_vm_area (624,758 samples, 0.02%)</title><rect x="10.8" y="453" width="0.3" height="15.0" fill="rgb(252,220,52)" rx="2" ry="2" />
<text  x="13.84" y="463.5" ></text>
</g>
<g >
<title>__br_forward (656,868 samples, 0.02%)</title><rect x="379.7" y="101" width="0.2" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="382.66" y="111.5" ></text>
</g>
<g >
<title>main (13,117,246 samples, 0.45%)</title><rect x="26.1" y="581" width="5.4" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="29.12" y="591.5" ></text>
</g>
<g >
<title>htab_map_lookup_elem (10,817,558 samples, 0.37%)</title><rect x="467.5" y="501" width="4.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="470.49" y="511.5" ></text>
</g>
<g >
<title>unroll_tree_refs (5,353,785 samples, 0.19%)</title><rect x="1065.1" y="469" width="2.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1068.11" y="479.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (565,971 samples, 0.02%)</title><rect x="10.0" y="389" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>__x64_sys_bpf (624,758 samples, 0.02%)</title><rect x="10.8" y="533" width="0.3" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="13.84" y="543.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (565,971 samples, 0.02%)</title><rect x="10.0" y="405" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (2,531,576,808 samples, 87.68%)</title><rect x="55.9" y="565" width="1034.7" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="58.92" y="575.5" >entry_SYSCALL_64</text>
</g>
<g >
<title>perf_event_mmap (295,252 samples, 0.01%)</title><rect x="10.7" y="437" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="13.72" y="447.5" ></text>
</g>
<g >
<title>do_fault (596,283 samples, 0.02%)</title><rect x="1188.7" y="469" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1191.67" y="479.5" ></text>
</g>
<g >
<title>ip_finish_output (656,868 samples, 0.02%)</title><rect x="379.7" y="213" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="382.66" y="223.5" ></text>
</g>
<g >
<title>__check_object_size (167,858,002 samples, 5.81%)</title><rect x="620.5" y="485" width="68.6" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="623.53" y="495.5" >__check..</text>
</g>
<g >
<title>syscall_exit_work (143,074,137 samples, 4.96%)</title><rect x="1023.1" y="517" width="58.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1026.08" y="527.5" >syscal..</text>
</g>
<g >
<title>check_stack_object (26,120,072 samples, 0.90%)</title><rect x="456.8" y="501" width="10.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="459.82" y="511.5" ></text>
</g>
<g >
<title>ip_finish_output2 (656,868 samples, 0.02%)</title><rect x="379.7" y="181" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="382.66" y="191.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (123,041,871 samples, 4.26%)</title><rect x="1029.2" y="501" width="50.3" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1032.23" y="511.5" >__aud..</text>
</g>
<g >
<title>perf_iterate_ctx (295,252 samples, 0.01%)</title><rect x="10.7" y="405" width="0.1" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="13.72" y="415.5" ></text>
</g>
<g >
<title>_dl_check_map_versions (585,960 samples, 0.02%)</title><rect x="10.5" y="581" width="0.2" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="13.48" y="591.5" ></text>
</g>
<g >
<title>load_elf_binary (295,252 samples, 0.01%)</title><rect x="10.7" y="501" width="0.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="13.72" y="511.5" ></text>
</g>
<g >
<title>__fget_light (27,305,633 samples, 0.95%)</title><rect x="360.7" y="485" width="11.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="363.67" y="495.5" ></text>
</g>
<g >
<title>unroll_tree_refs (4,354,187 samples, 0.15%)</title><rect x="1077.7" y="485" width="1.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1080.74" y="495.5" ></text>
</g>
<g >
<title>tcp_send_ack (656,868 samples, 0.02%)</title><rect x="379.7" y="325" width="0.2" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="382.66" y="335.5" ></text>
</g>
<g >
<title>bpf_map_copy_value (152,032,686 samples, 5.27%)</title><rect x="394.7" y="501" width="62.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="397.68" y="511.5" >bpf_ma..</text>
</g>
<g >
<title>__irq_exit_rcu (656,868 samples, 0.02%)</title><rect x="379.7" y="437" width="0.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="382.66" y="447.5" ></text>
</g>
<g >
<title>irq_exit_rcu (656,868 samples, 0.02%)</title><rect x="379.7" y="453" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="382.66" y="463.5" ></text>
</g>
<g >
<title>alloc_pages (620,700 samples, 0.02%)</title><rect x="1189.7" y="437" width="0.3" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1192.70" y="447.5" ></text>
</g>
<g >
<title>__slab_free (818,235 samples, 0.03%)</title><rect x="1189.1" y="421" width="0.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1192.12" y="431.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (656,868 samples, 0.02%)</title><rect x="379.7" y="485" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="382.66" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (818,235 samples, 0.03%)</title><rect x="1189.1" y="597" width="0.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1192.12" y="607.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (565,971 samples, 0.02%)</title><rect x="10.0" y="533" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="13.00" y="543.5" ></text>
</g>
<g >
<title>__rcu_read_lock (3,827,493 samples, 0.13%)</title><rect x="378.4" y="501" width="1.5" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="381.36" y="511.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (3,131,948 samples, 0.11%)</title><rect x="754.1" y="453" width="1.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="757.14" y="463.5" ></text>
</g>
<g >
<title>br_dev_queue_push_xmit (656,868 samples, 0.02%)</title><rect x="379.7" y="69" width="0.2" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="382.66" y="79.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (496,846 samples, 0.02%)</title><rect x="1188.9" y="581" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1191.91" y="591.5" ></text>
</g>
<g >
<title>__cond_resched (1,216,412 samples, 0.04%)</title><rect x="541.5" y="469" width="0.5" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="544.52" y="479.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (43,035,622 samples, 1.49%)</title><rect x="816.7" y="533" width="17.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="819.69" y="543.5" ></text>
</g>
<g >
<title>irqentry_exit (496,846 samples, 0.02%)</title><rect x="1188.9" y="549" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1191.91" y="559.5" ></text>
</g>
<g >
<title>mt_free_rcu (655,768 samples, 0.02%)</title><rect x="51.8" y="453" width="0.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="54.83" y="463.5" ></text>
</g>
<g >
<title>do_syscall_64 (9,336,977 samples, 0.32%)</title><rect x="52.1" y="565" width="3.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="55.10" y="575.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (7,530,803 samples, 0.26%)</title><rect x="763.8" y="469" width="3.1" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="766.81" y="479.5" ></text>
</g>
<g >
<title>kmalloc_slab (5,841,482 samples, 0.20%)</title><rect x="570.6" y="469" width="2.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="573.64" y="479.5" ></text>
</g>
<g >
<title>filemap_map_pages (596,283 samples, 0.02%)</title><rect x="1188.7" y="453" width="0.2" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="1191.67" y="463.5" ></text>
</g>
<g >
<title>do_user_addr_fault (596,283 samples, 0.02%)</title><rect x="1188.7" y="517" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1191.67" y="527.5" ></text>
</g>
<g >
<title>should_failslab (1,315,540 samples, 0.05%)</title><rect x="579.1" y="469" width="0.6" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="582.15" y="479.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (295,252 samples, 0.01%)</title><rect x="10.7" y="533" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="13.72" y="543.5" ></text>
</g>
<g >
<title>__sys_bpf (624,758 samples, 0.02%)</title><rect x="10.8" y="517" width="0.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="13.84" y="527.5" ></text>
</g>
<g >
<title>__sys_bpf (11,043,227 samples, 0.38%)</title><rect x="226.0" y="533" width="4.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="228.98" y="543.5" ></text>
</g>
<g >
<title>br_forward_finish (656,868 samples, 0.02%)</title><rect x="379.7" y="85" width="0.2" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="382.66" y="95.5" ></text>
</g>
<g >
<title>__sys_bpf (1,298,390,069 samples, 44.97%)</title><rect x="239.5" y="517" width="530.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="242.54" y="527.5" >__sys_bpf</text>
</g>
<g >
<title>__fdget (6,979,999 samples, 0.24%)</title><rect x="236.7" y="517" width="2.8" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="239.69" y="527.5" ></text>
</g>
<g >
<title>check_stack_object (18,392,954 samples, 0.64%)</title><rect x="352.8" y="485" width="7.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="355.81" y="495.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (4,553,705 samples, 0.16%)</title><rect x="573.0" y="469" width="1.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="576.03" y="479.5" ></text>
</g>
<g >
<title>setup_arg_pages (295,252 samples, 0.01%)</title><rect x="10.7" y="485" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="13.72" y="495.5" ></text>
</g>
<g >
<title>__memmove_sse2_unaligned_erms (603,930 samples, 0.02%)</title><rect x="10.2" y="581" width="0.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="13.23" y="591.5" ></text>
</g>
<g >
<title>__do_softirq (656,868 samples, 0.02%)</title><rect x="379.7" y="421" width="0.2" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="382.66" y="431.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (565,971 samples, 0.02%)</title><rect x="10.0" y="485" width="0.2" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="13.00" y="495.5" ></text>
</g>
<g >
<title>bpf_map_lookup_elem (36,143,517 samples, 1.25%)</title><rect x="11.3" y="581" width="14.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.34" y="591.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (2,918,570 samples, 0.10%)</title><rect x="697.3" y="485" width="1.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="700.35" y="495.5" ></text>
</g>
<g >
<title>__tcp_send_ack.part.0 (656,868 samples, 0.02%)</title><rect x="379.7" y="309" width="0.2" height="15.0" fill="rgb(246,192,46)" rx="2" ry="2" />
<text  x="382.66" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (565,971 samples, 0.02%)</title><rect x="10.0" y="501" width="0.2" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="13.00" y="511.5" ></text>
</g>
<g >
<title>tcp_delack_timer (656,868 samples, 0.02%)</title><rect x="379.7" y="357" width="0.2" height="15.0" fill="rgb(249,205,49)" rx="2" ry="2" />
<text  x="382.66" y="367.5" ></text>
</g>
<g >
<title>should_failslab (1,216,425 samples, 0.04%)</title><rect x="763.3" y="453" width="0.5" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="766.31" y="463.5" ></text>
</g>
<g >
<title>__virt_addr_valid (83,400,830 samples, 2.89%)</title><rect x="654.8" y="469" width="34.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="657.79" y="479.5" >__..</text>
</g>
<g >
<title>__dev_queue_xmit (656,868 samples, 0.02%)</title><rect x="379.7" y="53" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="382.66" y="63.5" ></text>
</g>
<g >
<title>vm_mmap_pgoff (565,971 samples, 0.02%)</title><rect x="10.0" y="469" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="13.00" y="479.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (7,111,467 samples, 0.25%)</title><rect x="1090.6" y="565" width="2.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1093.60" y="575.5" ></text>
</g>
<g >
<title>kvfree (137,124,188 samples, 4.75%)</title><rect x="477.2" y="501" width="56.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="480.22" y="511.5" >kvfree</text>
</g>
<g >
<title>__x64_sys_bpf (1,236,697 samples, 0.04%)</title><rect x="1189.5" y="549" width="0.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.45" y="559.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (4,301,195 samples, 0.15%)</title><rect x="579.7" y="485" width="1.7" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="582.68" y="495.5" ></text>
</g>
<g >
<title>__run_timers (656,868 samples, 0.02%)</title><rect x="379.7" y="389" width="0.2" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="382.66" y="399.5" ></text>
</g>
<g >
<title>htab_map_alloc (1,236,697 samples, 0.04%)</title><rect x="1189.5" y="501" width="0.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1192.45" y="511.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (596,283 samples, 0.02%)</title><rect x="1188.7" y="581" width="0.2" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1191.67" y="591.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (91,719,344 samples, 3.18%)</title><rect x="710.5" y="453" width="37.5" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="713.50" y="463.5" >__k..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (656,868 samples, 0.02%)</title><rect x="379.7" y="469" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="382.66" y="479.5" ></text>
</g>
<g >
<title>path_put (3,186,954 samples, 0.11%)</title><rect x="1076.4" y="485" width="1.3" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1079.43" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,131,100,745 samples, 73.81%)</title><rect x="215.9" y="549" width="871.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="218.87" y="559.5" >do_syscall_64</text>
</g>
<g >
<title>__x86_indirect_thunk_array (845,053 samples, 0.03%)</title><rect x="215.5" y="549" width="0.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="218.53" y="559.5" ></text>
</g>
<g >
<title>run_timer_softirq (656,868 samples, 0.02%)</title><rect x="379.7" y="405" width="0.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="382.66" y="415.5" ></text>
</g>
<g >
<title>do_group_exit (818,235 samples, 0.03%)</title><rect x="1189.1" y="549" width="0.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1192.12" y="559.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (3,328,275 samples, 0.12%)</title><rect x="1089.2" y="549" width="1.4" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1092.24" y="559.5" ></text>
</g>
<g >
<title>__audit_syscall_entry (7,249,598 samples, 0.25%)</title><rect x="831.3" y="501" width="3.0" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="834.32" y="511.5" ></text>
</g>
<g >
<title>__check_object_size (15,153,760 samples, 0.52%)</title><rect x="230.5" y="517" width="6.2" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="233.49" y="527.5" ></text>
</g>
<g >
<title>call_timer_fn (656,868 samples, 0.02%)</title><rect x="379.7" y="373" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="382.66" y="383.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (656,868 samples, 0.02%)</title><rect x="379.7" y="165" width="0.2" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="382.66" y="175.5" ></text>
</g>
<g >
<title>audit_reset_context (610,888 samples, 0.02%)</title><rect x="11.1" y="485" width="0.2" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="14.09" y="495.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (655,768 samples, 0.02%)</title><rect x="51.8" y="565" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="54.83" y="575.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,235,646 samples, 0.04%)</title><rect x="10.8" y="549" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.84" y="559.5" ></text>
</g>
<g >
<title>syscall_exit_work (7,130,420 samples, 0.25%)</title><rect x="1081.6" y="533" width="2.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1084.56" y="543.5" ></text>
</g>
<g >
<title>__virt_addr_valid (4,403,947 samples, 0.15%)</title><rect x="690.0" y="485" width="1.8" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="693.00" y="495.5" ></text>
</g>
<g >
<title>__pthread_tunables_init (596,283 samples, 0.02%)</title><rect x="1188.7" y="565" width="0.2" height="15.0" fill="rgb(217,58,13)" rx="2" ry="2" />
<text  x="1191.67" y="575.5" ></text>
</g>
<g >
<title>mmap64 (565,971 samples, 0.02%)</title><rect x="10.0" y="549" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="13.00" y="559.5" ></text>
</g>
<g >
<title>mod_objcg_state (565,971 samples, 0.02%)</title><rect x="10.0" y="373" width="0.2" height="15.0" fill="rgb(208,16,3)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>rep_movs_alternative (4,747,257 samples, 0.16%)</title><rect x="768.3" y="485" width="1.9" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="771.27" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1,236,697 samples, 0.04%)</title><rect x="1189.5" y="581" width="0.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1192.45" y="591.5" ></text>
</g>
<g >
<title>__kmalloc_node (2,095,281 samples, 0.07%)</title><rect x="689.1" y="485" width="0.9" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="692.14" y="495.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (610,888 samples, 0.02%)</title><rect x="11.1" y="501" width="0.2" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="14.09" y="511.5" ></text>
</g>
<g >
<title>vm_area_alloc (565,971 samples, 0.02%)</title><rect x="10.0" y="421" width="0.2" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>__handle_mm_fault (596,283 samples, 0.02%)</title><rect x="1188.7" y="485" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1191.67" y="495.5" ></text>
</g>
<g >
<title>do_syscall_64 (565,971 samples, 0.02%)</title><rect x="10.0" y="517" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.00" y="527.5" ></text>
</g>
<g >
<title>kmem_cache_free (818,235 samples, 0.03%)</title><rect x="1189.1" y="437" width="0.4" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="1192.12" y="447.5" ></text>
</g>
<g >
<title>irq_exit_rcu (655,768 samples, 0.02%)</title><rect x="51.8" y="533" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="54.83" y="543.5" ></text>
</g>
<g >
<title>remove_vma (818,235 samples, 0.03%)</title><rect x="1189.1" y="469" width="0.4" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1192.12" y="479.5" ></text>
</g>
<g >
<title>map_create (1,236,697 samples, 0.04%)</title><rect x="1189.5" y="517" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1192.45" y="527.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (655,152 samples, 0.02%)</title><rect x="688.9" y="469" width="0.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="691.87" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (295,252 samples, 0.01%)</title><rect x="10.7" y="565" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.72" y="575.5" ></text>
</g>
<g >
<title>get_obj_cgroup_from_current (615,997 samples, 0.02%)</title><rect x="1189.5" y="421" width="0.2" height="15.0" fill="rgb(221,78,18)" rx="2" ry="2" />
<text  x="1192.45" y="431.5" ></text>
</g>
<g >
<title>__ip_queue_xmit (656,868 samples, 0.02%)</title><rect x="379.7" y="261" width="0.2" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="382.66" y="271.5" ></text>
</g>
<g >
<title>memcpy_orig (6,393,426 samples, 0.22%)</title><rect x="583.9" y="501" width="2.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="586.93" y="511.5" ></text>
</g>
<g >
<title>do_mmap (565,971 samples, 0.02%)</title><rect x="10.0" y="453" width="0.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="13.00" y="463.5" ></text>
</g>
<g >
<title>lookup_nulls_elem_raw (18,024,498 samples, 0.62%)</title><rect x="438.8" y="469" width="7.4" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="441.81" y="479.5" ></text>
</g>
<g >
<title>__kmalloc_node (5,550,661 samples, 0.19%)</title><rect x="376.1" y="501" width="2.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="379.09" y="511.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (8,013,660 samples, 0.28%)</title><rect x="813.4" y="533" width="3.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="816.41" y="543.5" ></text>
</g>
<g >
<title>mmap_region (565,971 samples, 0.02%)</title><rect x="10.0" y="437" width="0.2" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="13.00" y="447.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (1,263,080 samples, 0.04%)</title><rect x="1015.1" y="517" width="0.5" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1018.06" y="527.5" ></text>
</g>
<g >
<title>memset_orig (19,310,693 samples, 0.67%)</title><rect x="755.4" y="453" width="7.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="758.42" y="463.5" ></text>
</g>
<g >
<title>__sys_bpf (1,236,697 samples, 0.04%)</title><rect x="1189.5" y="533" width="0.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1192.45" y="543.5" ></text>
</g>
<g >
<title>dput (4,805,048 samples, 0.17%)</title><rect x="1053.2" y="469" width="2.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1056.21" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (818,235 samples, 0.03%)</title><rect x="1189.1" y="581" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1192.12" y="591.5" ></text>
</g>
<g >
<title>ip_local_out (656,868 samples, 0.02%)</title><rect x="379.7" y="245" width="0.2" height="15.0" fill="rgb(233,131,31)" rx="2" ry="2" />
<text  x="382.66" y="255.5" ></text>
</g>
<g >
<title>__check_heap_object (13,937,004 samples, 0.48%)</title><rect x="337.3" y="485" width="5.7" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="340.30" y="495.5" ></text>
</g>
<g >
<title>__fdget (27,305,633 samples, 0.95%)</title><rect x="360.7" y="501" width="11.1" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="363.67" y="511.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (610,888 samples, 0.02%)</title><rect x="11.1" y="533" width="0.2" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="14.09" y="543.5" ></text>
</g>
<g >
<title>_copy_to_user (8,493,165 samples, 0.29%)</title><rect x="391.2" y="501" width="3.5" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="394.21" y="511.5" ></text>
</g>
<g >
<title>vmemdup_user (397,652,290 samples, 13.77%)</title><rect x="607.7" y="501" width="162.5" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="610.68" y="511.5" >vmemdup_user</text>
</g>
<g >
<title>exit_mmap (818,235 samples, 0.03%)</title><rect x="1189.1" y="485" width="0.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1192.12" y="495.5" ></text>
</g>
<g >
<title>__do_softirq (655,768 samples, 0.02%)</title><rect x="51.8" y="501" width="0.3" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="54.83" y="511.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (295,252 samples, 0.01%)</title><rect x="10.7" y="581" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="13.72" y="591.5" ></text>
</g>
<g >
<title>audit_reset_context (4,994,186 samples, 0.17%)</title><rect x="1079.5" y="501" width="2.1" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1082.52" y="511.5" ></text>
</g>
<g >
<title>__check_heap_object (7,341,404 samples, 0.25%)</title><rect x="305.0" y="501" width="3.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="308.01" y="511.5" ></text>
</g>
<g >
<title>__ip_finish_output (656,868 samples, 0.02%)</title><rect x="379.7" y="197" width="0.2" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="382.66" y="207.5" ></text>
</g>
<g >
<title>br_forward (656,868 samples, 0.02%)</title><rect x="379.7" y="117" width="0.2" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="382.66" y="127.5" ></text>
</g>
<g >
<title>br_dev_xmit (656,868 samples, 0.02%)</title><rect x="379.7" y="133" width="0.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="382.66" y="143.5" ></text>
</g>
<g >
<title>perf_iterate_sb (295,252 samples, 0.01%)</title><rect x="10.7" y="421" width="0.1" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="13.72" y="431.5" ></text>
</g>
<g >
<title>should_failslab (2,159,390 samples, 0.07%)</title><rect x="747.1" y="437" width="0.9" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="750.10" y="447.5" ></text>
</g>
<g >
<title>__virt_addr_valid (1,872,885 samples, 0.06%)</title><rect x="382.5" y="501" width="0.8" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="385.54" y="511.5" ></text>
</g>
<g >
<title>htab_map_lookup_elem (46,910,527 samples, 1.62%)</title><rect x="431.7" y="485" width="19.2" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="434.73" y="495.5" ></text>
</g>
<g >
<title>kmalloc_slab (3,367,412 samples, 0.12%)</title><rect x="766.9" y="469" width="1.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="769.89" y="479.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,236,697 samples, 0.04%)</title><rect x="1189.5" y="565" width="0.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1192.45" y="575.5" ></text>
</g>
<g >
<title>[unknown] (3,286,759 samples, 0.11%)</title><rect x="10.0" y="597" width="1.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="607.5" ></text>
</g>
<g >
<title>rep_movs_alternative (26,542,890 samples, 0.92%)</title><rect x="593.9" y="501" width="10.8" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="596.88" y="511.5" ></text>
</g>
<g >
<title>__vm_area_free (818,235 samples, 0.03%)</title><rect x="1189.1" y="453" width="0.4" height="15.0" fill="rgb(250,207,49)" rx="2" ry="2" />
<text  x="1192.12" y="463.5" ></text>
</g>
<g >
<title>_copy_from_user (19,337,484 samples, 0.67%)</title><rect x="383.3" y="501" width="7.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="386.30" y="511.5" ></text>
</g>
<g >
<title>expand_stack_locked (295,252 samples, 0.01%)</title><rect x="10.7" y="469" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="13.72" y="479.5" ></text>
</g>
<g >
<title>audit_reset_context (86,324,409 samples, 2.99%)</title><rect x="1032.0" y="485" width="35.3" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1035.02" y="495.5" >au..</text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (30,733,042 samples, 1.06%)</title><rect x="821.7" y="517" width="12.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="824.72" y="527.5" ></text>
</g>
<g >
<title>_copy_from_user (6,599,035 samples, 0.23%)</title><rect x="770.2" y="517" width="2.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="773.21" y="527.5" ></text>
</g>
<g >
<title>_copy_to_user (15,056,941 samples, 0.52%)</title><rect x="772.9" y="517" width="6.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="775.90" y="527.5" ></text>
</g>
<g >
<title>memchr_inv (35,025,716 samples, 1.21%)</title><rect x="793.2" y="517" width="14.3" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="796.19" y="527.5" ></text>
</g>
<g >
<title>__libc_start_call_main (2,880,588,153 samples, 99.77%)</title><rect x="11.3" y="597" width="1177.4" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="14.34" y="607.5" >__libc_start_call_main</text>
</g>
<g >
<title>sch_direct_xmit (656,868 samples, 0.02%)</title><rect x="379.7" y="37" width="0.2" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="382.66" y="47.5" ></text>
</g>
<g >
<title>bpf_prog_load (624,758 samples, 0.02%)</title><rect x="10.8" y="501" width="0.3" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="13.84" y="511.5" ></text>
</g>
<g >
<title>__tcp_transmit_skb (656,868 samples, 0.02%)</title><rect x="379.7" y="293" width="0.2" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="382.66" y="303.5" ></text>
</g>
<g >
<title>ip_output (656,868 samples, 0.02%)</title><rect x="379.7" y="229" width="0.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="382.66" y="239.5" ></text>
</g>
<g >
<title>__x64_sys_bpf (1,418,539,270 samples, 49.13%)</title><rect x="230.5" y="533" width="579.8" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="233.49" y="543.5" >__x64_sys_bpf</text>
</g>
<g >
<title>do_exit (818,235 samples, 0.03%)</title><rect x="1189.1" y="533" width="0.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1192.12" y="543.5" ></text>
</g>
<g >
<title>kfree (10,717,436 samples, 0.37%)</title><rect x="1055.2" y="469" width="4.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1058.17" y="479.5" ></text>
</g>
<g >
<title>amd_clear_divider (7,701,122 samples, 0.27%)</title><rect x="810.3" y="533" width="3.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="813.27" y="543.5" ></text>
</g>
<g >
<title>htab_map_hash (47,206,071 samples, 1.64%)</title><rect x="412.4" y="485" width="19.3" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="415.43" y="495.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (656,868 samples, 0.02%)</title><rect x="379.7" y="149" width="0.2" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="382.66" y="159.5" ></text>
</g>
<g >
<title>kvmalloc_node (170,601,294 samples, 5.91%)</title><rect x="698.5" y="485" width="69.8" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="701.54" y="495.5" >kvmallo..</text>
</g>
<g >
<title>fpregs_assert_state_consistent (3,639,544 samples, 0.13%)</title><rect x="1021.6" y="517" width="1.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1024.59" y="527.5" ></text>
</g>
<g >
<title>__alloc_pages (620,700 samples, 0.02%)</title><rect x="1189.7" y="421" width="0.3" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1192.70" y="431.5" ></text>
</g>
<g >
<title>kmem_cache_free (655,768 samples, 0.02%)</title><rect x="51.8" y="437" width="0.3" height="15.0" fill="rgb(254,225,53)" rx="2" ry="2" />
<text  x="54.83" y="447.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (8,345,154 samples, 0.29%)</title><rect x="567.2" y="453" width="3.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="570.23" y="463.5" ></text>
</g>
<g >
<title>__check_heap_object (8,426,130 samples, 0.29%)</title><rect x="617.1" y="485" width="3.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="620.09" y="495.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (5,890,050 samples, 0.20%)</title><rect x="1084.5" y="533" width="2.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1087.47" y="543.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (6,394,846 samples, 0.22%)</title><rect x="379.9" y="501" width="2.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="382.93" y="511.5" ></text>
</g>
<g >
<title>expand_downwards (295,252 samples, 0.01%)</title><rect x="10.7" y="453" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="13.72" y="463.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (4,650,812 samples, 0.16%)</title><rect x="488.3" y="485" width="1.9" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="491.34" y="495.5" ></text>
</g>
<g >
<title>__get_obj_cgroup_from_memcg (615,997 samples, 0.02%)</title><rect x="1189.5" y="405" width="0.2" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1192.45" y="415.5" ></text>
</g>
<g >
<title>vmemdup_user (4,882,568 samples, 0.17%)</title><rect x="808.3" y="517" width="2.0" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="811.27" y="527.5" ></text>
</g>
<g >
<title>syscall (1,236,697 samples, 0.04%)</title><rect x="1189.5" y="597" width="0.5" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1192.45" y="607.5" ></text>
</g>
<g >
<title>__vunmap_range_noflush (624,758 samples, 0.02%)</title><rect x="10.8" y="437" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="13.84" y="447.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (605,020,959 samples, 20.96%)</title><rect x="834.3" y="533" width="247.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="837.28" y="543.5" >syscall_exit_to_user_mode</text>
</g>
<g >
<title>syscall (2,830,719,861 samples, 98.05%)</title><rect x="31.5" y="581" width="1156.9" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="34.48" y="591.5" >syscall</text>
</g>
<g >
<title>__kmem_cache_alloc_node (70,023,749 samples, 2.43%)</title><rect x="542.0" y="469" width="28.6" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="545.02" y="479.5" >__..</text>
</g>
<g >
<title>syscall_enter_from_user_mode (5,781,960 samples, 0.20%)</title><rect x="1086.9" y="549" width="2.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1089.88" y="559.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (847,611 samples, 0.03%)</title><rect x="360.3" y="485" width="0.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="363.33" y="495.5" ></text>
</g>
<g >
<title>path_put (9,051,846 samples, 0.31%)</title><rect x="1061.4" y="469" width="3.7" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1064.41" y="479.5" ></text>
</g>
<g >
<title>rcu_core (655,768 samples, 0.02%)</title><rect x="51.8" y="469" width="0.3" height="15.0" fill="rgb(222,81,19)" rx="2" ry="2" />
<text  x="54.83" y="479.5" ></text>
</g>
<g >
<title>bprm_execve (295,252 samples, 0.01%)</title><rect x="10.7" y="517" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="13.72" y="527.5" ></text>
</g>
<g >
<title>exc_page_fault (496,846 samples, 0.02%)</title><rect x="1188.9" y="565" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1191.91" y="575.5" ></text>
</g>
<g >
<title>tcp_delack_timer_handler (656,868 samples, 0.02%)</title><rect x="379.7" y="341" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="382.66" y="351.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (9,228,676 samples, 0.32%)</title><rect x="743.3" y="437" width="3.8" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="746.33" y="447.5" ></text>
</g>
<g >
<title>_dl_start_user (596,283 samples, 0.02%)</title><rect x="1188.7" y="597" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1191.67" y="607.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (655,768 samples, 0.02%)</title><rect x="51.8" y="549" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="54.83" y="559.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (5,401,684 samples, 0.19%)</title><rect x="1019.4" y="501" width="2.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1022.39" y="511.5" ></text>
</g>
<g >
<title>exc_page_fault (596,283 samples, 0.02%)</title><rect x="1188.7" y="533" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1191.67" y="543.5" ></text>
</g>
<g >
<title>__check_object_size (128,852,969 samples, 4.46%)</title><rect x="308.0" y="501" width="52.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="311.01" y="511.5" >__che..</text>
</g>
<g >
<title>check_stack_object (7,483,751 samples, 0.26%)</title><rect x="694.3" y="485" width="3.0" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="697.29" y="495.5" ></text>
</g>
<g >
<title>kfree (105,265,757 samples, 3.65%)</title><rect x="490.2" y="485" width="43.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="493.24" y="495.5" >kfree</text>
</g>
<g >
<title>kfree (22,346,730 samples, 0.77%)</title><rect x="1067.3" y="485" width="9.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1070.30" y="495.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (232,228,050 samples, 8.04%)</title><rect x="1093.5" y="565" width="94.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1096.51" y="575.5" >syscall_ret..</text>
</g>
<g >
<title>rcu_core_si (655,768 samples, 0.02%)</title><rect x="51.8" y="485" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="54.83" y="495.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (615,997 samples, 0.02%)</title><rect x="1189.5" y="437" width="0.2" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="1192.45" y="447.5" ></text>
</g>
<g >
<title>__mmput (818,235 samples, 0.03%)</title><rect x="1189.1" y="501" width="0.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1192.12" y="511.5" ></text>
</g>
<g >
<title>__kmem_cache_free (69,654,277 samples, 2.41%)</title><rect x="504.8" y="469" width="28.5" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="507.80" y="479.5" >__..</text>
</g>
<g >
<title>all (2,887,127,672 samples, 100%)</title><rect x="10.0" y="629" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>kmalloc_slab (15,059,146 samples, 0.52%)</title><rect x="748.0" y="453" width="6.1" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="750.99" y="463.5" ></text>
</g>
<g >
<title>handle_mm_fault (596,283 samples, 0.02%)</title><rect x="1188.7" y="501" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1191.67" y="511.5" ></text>
</g>
<g >
<title>lookup_nulls_elem_raw (7,067,885 samples, 0.24%)</title><rect x="450.9" y="485" width="2.9" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="453.90" y="495.5" ></text>
</g>
<g >
<title>security_bpf (7,221,768 samples, 0.25%)</title><rect x="604.7" y="501" width="3.0" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="607.73" y="511.5" ></text>
</g>
<g >
<title>kvmalloc_node (820,642 samples, 0.03%)</title><rect x="792.9" y="517" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="795.85" y="527.5" ></text>
</g>
<g >
<title>__kmalloc_node (148,044,142 samples, 5.13%)</title><rect x="703.3" y="469" width="60.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="706.30" y="479.5" >__kmal..</text>
</g>
<g >
<title>syscall_exit_work (610,888 samples, 0.02%)</title><rect x="11.1" y="517" width="0.2" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="14.09" y="527.5" ></text>
</g>
<g >
<title>__vmalloc_node_range (620,700 samples, 0.02%)</title><rect x="1189.7" y="453" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1192.70" y="463.5" ></text>
</g>
<g >
<title>[vmlinux] (818,235 samples, 0.03%)</title><rect x="1189.1" y="565" width="0.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1192.12" y="575.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (8,688,439 samples, 0.30%)</title><rect x="471.9" y="501" width="3.6" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="474.91" y="511.5" ></text>
</g>
<g >
<title>migrate_disable (15,646,697 samples, 0.54%)</title><rect x="586.5" y="501" width="6.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="589.54" y="511.5" ></text>
</g>
<g >
<title>__bpf_map_area_alloc (1,236,697 samples, 0.04%)</title><rect x="1189.5" y="469" width="0.5" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1192.45" y="479.5" ></text>
</g>
<g >
<title>migrate_enable (2,305,581 samples, 0.08%)</title><rect x="592.9" y="501" width="1.0" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="595.94" y="511.5" ></text>
</g>
<g >
<title>get_page_from_freelist (620,700 samples, 0.02%)</title><rect x="1189.7" y="405" width="0.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1192.70" y="415.5" ></text>
</g>
<g >
<title>__kmalloc_node (615,997 samples, 0.02%)</title><rect x="1189.5" y="453" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1192.45" y="463.5" ></text>
</g>
<g >
<title>clear_page_erms (620,700 samples, 0.02%)</title><rect x="1189.7" y="389" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1192.70" y="399.5" ></text>
</g>
<g >
<title>syscall@plt (607,529 samples, 0.02%)</title><rect x="1188.4" y="581" width="0.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1191.42" y="591.5" ></text>
</g>
<g >
<title>bpf_map_area_alloc (1,236,697 samples, 0.04%)</title><rect x="1189.5" y="485" width="0.5" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1192.45" y="495.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1,235,646 samples, 0.04%)</title><rect x="10.8" y="565" width="0.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="13.84" y="575.5" ></text>
</g>
<g >
<title>kvfree (6,713,606 samples, 0.23%)</title><rect x="790.1" y="517" width="2.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="793.11" y="527.5" ></text>
</g>
<g >
<title>_dl_map_object (565,971 samples, 0.02%)</title><rect x="10.0" y="565" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="13.00" y="575.5" ></text>
</g>
<g >
<title>__check_heap_object (47,555,888 samples, 1.65%)</title><rect x="635.3" y="469" width="19.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="638.35" y="479.5" ></text>
</g>
<g >
<title>memcpy (1,265,011 samples, 0.04%)</title><rect x="583.4" y="501" width="0.5" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="586.41" y="511.5" ></text>
</g>
</g>
</svg>
