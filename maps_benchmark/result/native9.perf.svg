<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="470" onload="init(evt)" viewBox="0 0 1200 470" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="470.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="453" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="453" > </text>
<g id="frames">
<g >
<title>check_stack_object (16,188,912 samples, 0.17%)</title><rect x="708.7" y="277" width="2.0" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="711.66" y="287.5" ></text>
</g>
<g >
<title>perf_event_task_tick (844,037 samples, 0.01%)</title><rect x="701.1" y="117" width="0.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="704.12" y="127.5" ></text>
</g>
<g >
<title>map_benchmark (9,325,426,883 samples, 100.00%)</title><rect x="10.0" y="405" width="1180.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="13.00" y="415.5" >map_benchmark</text>
</g>
<g >
<title>tick_sched_do_timer (853,657 samples, 0.01%)</title><rect x="756.7" y="133" width="0.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="759.65" y="143.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (844,037 samples, 0.01%)</title><rect x="701.1" y="101" width="0.1" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="704.12" y="111.5" ></text>
</g>
<g >
<title>kfree (298,868,576 samples, 3.20%)</title><rect x="520.6" y="277" width="37.8" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="523.55" y="287.5" >kfree</text>
</g>
<g >
<title>scheduler_tick (848,377 samples, 0.01%)</title><rect x="422.9" y="165" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="425.92" y="175.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (814,386 samples, 0.01%)</title><rect x="389.9" y="229" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="392.95" y="239.5" ></text>
</g>
<g >
<title>do_user_addr_fault (861,270 samples, 0.01%)</title><rect x="10.1" y="309" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="13.10" y="319.5" ></text>
</g>
<g >
<title>scheduler_tick (814,386 samples, 0.01%)</title><rect x="389.9" y="133" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="392.95" y="143.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (809,319 samples, 0.01%)</title><rect x="10.2" y="325" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="13.21" y="335.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (844,037 samples, 0.01%)</title><rect x="701.1" y="245" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="704.12" y="255.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (853,657 samples, 0.01%)</title><rect x="756.7" y="117" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="759.65" y="127.5" ></text>
</g>
<g >
<title>perf_event_task_tick (833,700 samples, 0.01%)</title><rect x="836.8" y="165" width="0.1" height="15.0" fill="rgb(205,3,0)" rx="2" ry="2" />
<text  x="839.76" y="175.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (851,419 samples, 0.01%)</title><rect x="607.8" y="229" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="610.85" y="239.5" ></text>
</g>
<g >
<title>tick_sched_timer (853,657 samples, 0.01%)</title><rect x="756.7" y="149" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="759.65" y="159.5" ></text>
</g>
<g >
<title>main (346,708,678 samples, 3.72%)</title><rect x="23.3" y="373" width="43.9" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="26.29" y="383.5" >main</text>
</g>
<g >
<title>task_tick_fair (848,377 samples, 0.01%)</title><rect x="422.9" y="149" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="425.92" y="159.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (4,196,338 samples, 0.04%)</title><rect x="81.0" y="309" width="0.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="84.03" y="319.5" ></text>
</g>
<g >
<title>update_vsyscall (830,760 samples, 0.01%)</title><rect x="390.1" y="101" width="0.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="393.05" y="111.5" ></text>
</g>
<g >
<title>__virt_addr_valid (104,103,718 samples, 1.12%)</title><rect x="376.9" y="277" width="13.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="379.88" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_bpf (51,580,497 samples, 0.55%)</title><rect x="231.0" y="341" width="6.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="233.96" y="351.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (848,377 samples, 0.01%)</title><rect x="422.9" y="229" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="425.92" y="239.5" ></text>
</g>
<g >
<title>get_timestamp (12,877,759 samples, 0.14%)</title><rect x="65.5" y="357" width="1.7" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="68.53" y="367.5" ></text>
</g>
<g >
<title>path_put (22,049,639 samples, 0.24%)</title><rect x="1064.9" y="261" width="2.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1067.93" y="271.5" ></text>
</g>
<g >
<title>__rcu_read_lock (8,597,450 samples, 0.09%)</title><rect x="439.0" y="277" width="1.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="441.97" y="287.5" ></text>
</g>
<g >
<title>tick_sched_timer (830,760 samples, 0.01%)</title><rect x="390.1" y="197" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="393.05" y="207.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (15,230,534 samples, 0.16%)</title><rect x="768.4" y="245" width="1.9" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="771.42" y="255.5" ></text>
</g>
<g >
<title>all (9,325,480,600 samples, 100%)</title><rect x="10.0" y="421" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>unmap_single_vma (840,353 samples, 0.01%)</title><rect x="1189.7" y="245" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1192.67" y="255.5" ></text>
</g>
<g >
<title>dl_main (857,109 samples, 0.01%)</title><rect x="1189.6" y="357" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1192.57" y="367.5" ></text>
</g>
<g >
<title>br_dev_queue_push_xmit (796,874 samples, 0.01%)</title><rect x="80.9" y="101" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="83.93" y="111.5" ></text>
</g>
<g >
<title>syscall@plt (6,120,200 samples, 0.07%)</title><rect x="1188.8" y="373" width="0.8" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1191.79" y="383.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (35,607,546 samples, 0.38%)</title><rect x="1086.4" y="341" width="4.5" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1089.41" y="351.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1,672,178 samples, 0.02%)</title><rect x="81.1" y="197" width="0.2" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="84.14" y="207.5" ></text>
</g>
<g >
<title>bpf_map_value_size (27,779,832 samples, 0.30%)</title><rect x="795.8" y="309" width="3.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="798.77" y="319.5" ></text>
</g>
<g >
<title>syscall (1,684,588 samples, 0.02%)</title><rect x="1189.8" y="389" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1192.78" y="399.5" ></text>
</g>
<g >
<title>syscall_exit_work (386,691,437 samples, 4.15%)</title><rect x="1031.2" y="309" width="48.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1034.17" y="319.5" >sysc..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (814,386 samples, 0.01%)</title><rect x="389.9" y="245" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="392.95" y="255.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (1,669,647 samples, 0.02%)</title><rect x="836.8" y="277" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="839.76" y="287.5" ></text>
</g>
<g >
<title>lookup_nulls_elem_raw (15,486,350 samples, 0.17%)</title><rect x="478.0" y="277" width="2.0" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="481.04" y="287.5" ></text>
</g>
<g >
<title>__kmem_cache_free (212,737,638 samples, 2.28%)</title><rect x="531.5" y="261" width="26.9" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="534.45" y="271.5" >_..</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (1,669,647 samples, 0.02%)</title><rect x="836.8" y="293" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="839.76" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (840,353 samples, 0.01%)</title><rect x="1189.7" y="389" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1192.67" y="399.5" ></text>
</g>
<g >
<title>__netif_receive_skb_one_core (796,874 samples, 0.01%)</title><rect x="80.9" y="213" width="0.1" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="83.93" y="223.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (830,760 samples, 0.01%)</title><rect x="390.1" y="277" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="393.05" y="287.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (844,037 samples, 0.01%)</title><rect x="701.1" y="229" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="704.12" y="239.5" ></text>
</g>
<g >
<title>update_process_times (1,669,647 samples, 0.02%)</title><rect x="836.8" y="197" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="839.76" y="207.5" ></text>
</g>
<g >
<title>_dl_map_object (819,481 samples, 0.01%)</title><rect x="10.0" y="357" width="0.1" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>__mmput (840,353 samples, 0.01%)</title><rect x="1189.7" y="293" width="0.1" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1192.67" y="303.5" ></text>
</g>
<g >
<title>bpf_prog_alloc (859,694 samples, 0.01%)</title><rect x="10.3" y="277" width="0.1" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="13.32" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (22,415,628 samples, 0.24%)</title><rect x="81.6" y="357" width="2.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="84.56" y="367.5" ></text>
</g>
<g >
<title>alloc_pages (846,111 samples, 0.01%)</title><rect x="1189.8" y="229" width="0.1" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1192.78" y="239.5" ></text>
</g>
<g >
<title>should_failslab (8,076,537 samples, 0.09%)</title><rect x="778.2" y="245" width="1.0" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="781.17" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1,684,588 samples, 0.02%)</title><rect x="1189.8" y="373" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1192.78" y="383.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (9,075,122 samples, 0.10%)</title><rect x="603.9" y="277" width="1.2" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="606.91" y="287.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (853,657 samples, 0.01%)</title><rect x="756.7" y="197" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="759.65" y="207.5" ></text>
</g>
<g >
<title>__virt_addr_valid (16,559,958 samples, 0.18%)</title><rect x="412.0" y="293" width="2.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="414.97" y="303.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (9,056,215 samples, 0.10%)</title><rect x="779.2" y="261" width="1.1" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="782.19" y="271.5" ></text>
</g>
<g >
<title>memset_orig (60,798,142 samples, 0.65%)</title><rect x="770.5" y="245" width="7.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="773.48" y="255.5" ></text>
</g>
<g >
<title>htab_map_hash (145,643,358 samples, 1.56%)</title><rect x="440.1" y="277" width="18.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="443.06" y="287.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (830,760 samples, 0.01%)</title><rect x="390.1" y="181" width="0.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="393.05" y="191.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (2,512,777 samples, 0.03%)</title><rect x="81.1" y="245" width="0.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="84.14" y="255.5" ></text>
</g>
<g >
<title>__libc_start_call_main (9,318,695,069 samples, 99.93%)</title><rect x="10.4" y="389" width="1179.2" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="13.42" y="399.5" >__libc_start_call_main</text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (37,628,752 samples, 0.40%)</title><rect x="756.8" y="229" width="4.7" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="759.76" y="239.5" ></text>
</g>
<g >
<title>audit_reset_context (253,666,165 samples, 2.72%)</title><rect x="1038.4" y="277" width="32.1" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1041.38" y="287.5" >au..</text>
</g>
<g >
<title>open_verify.constprop.0 (819,481 samples, 0.01%)</title><rect x="10.0" y="341" width="0.1" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>kmalloc_slab (7,051,201 samples, 0.08%)</title><rect x="780.3" y="261" width="0.9" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="783.34" y="271.5" ></text>
</g>
<g >
<title>__vmalloc_node_range (846,111 samples, 0.01%)</title><rect x="1189.8" y="245" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1192.78" y="255.5" ></text>
</g>
<g >
<title>timekeeping_update (840,599 samples, 0.01%)</title><rect x="81.3" y="197" width="0.2" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="84.35" y="207.5" ></text>
</g>
<g >
<title>__fdget (69,516,767 samples, 0.75%)</title><rect x="395.6" y="293" width="8.8" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="398.63" y="303.5" ></text>
</g>
<g >
<title>scheduler_tick (833,869 samples, 0.01%)</title><rect x="81.5" y="229" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="84.45" y="239.5" ></text>
</g>
<g >
<title>timekeeping_advance (830,760 samples, 0.01%)</title><rect x="390.1" y="133" width="0.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="393.05" y="143.5" ></text>
</g>
<g >
<title>tick_sched_handle (848,377 samples, 0.01%)</title><rect x="422.9" y="197" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="425.92" y="207.5" ></text>
</g>
<g >
<title>irq_enter_rcu (835,285 samples, 0.01%)</title><rect x="1094.9" y="357" width="0.1" height="15.0" fill="rgb(208,15,3)" rx="2" ry="2" />
<text  x="1097.93" y="367.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (848,377 samples, 0.01%)</title><rect x="422.9" y="245" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="425.92" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (859,694 samples, 0.01%)</title><rect x="10.3" y="357" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="13.32" y="367.5" ></text>
</g>
<g >
<title>migrate_enable (38,632,657 samples, 0.41%)</title><rect x="480.0" y="277" width="4.9" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="483.00" y="287.5" ></text>
</g>
<g >
<title>vmemdup_user (1,208,204,159 samples, 12.96%)</title><rect x="629.9" y="293" width="152.9" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="632.91" y="303.5" >vmemdup_user</text>
</g>
<g >
<title>syscall (8,864,171,875 samples, 95.05%)</title><rect x="67.2" y="373" width="1121.6" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="70.16" y="383.5" >syscall</text>
</g>
<g >
<title>update_process_times (844,037 samples, 0.01%)</title><rect x="701.1" y="149" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="704.12" y="159.5" ></text>
</g>
<g >
<title>update_wall_time (853,657 samples, 0.01%)</title><rect x="756.7" y="101" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="759.65" y="111.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (853,657 samples, 0.01%)</title><rect x="756.7" y="213" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="759.65" y="223.5" ></text>
</g>
<g >
<title>check_stack_object (112,930,450 samples, 1.21%)</title><rect x="484.9" y="293" width="14.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="487.89" y="303.5" ></text>
</g>
<g >
<title>bpf_map_lookup_elem (77,293,469 samples, 0.83%)</title><rect x="10.4" y="373" width="9.8" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.42" y="383.5" ></text>
</g>
<g >
<title>__check_object_size (545,007,942 samples, 5.84%)</title><rect x="326.7" y="293" width="68.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="329.67" y="303.5" >__check..</text>
</g>
<g >
<title>__vmalloc (859,694 samples, 0.01%)</title><rect x="10.3" y="245" width="0.1" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="13.32" y="255.5" ></text>
</g>
<g >
<title>clock_gettime@@GLIBC_2.17 (202,655,647 samples, 2.17%)</title><rect x="38.8" y="357" width="25.6" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="41.76" y="367.5" >c..</text>
</g>
<g >
<title>x86_pmu_disable (833,700 samples, 0.01%)</title><rect x="836.8" y="133" width="0.1" height="15.0" fill="rgb(239,160,38)" rx="2" ry="2" />
<text  x="839.76" y="143.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (20,060,333 samples, 0.22%)</title><rect x="1083.9" y="341" width="2.5" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1086.88" y="351.5" ></text>
</g>
<g >
<title>unroll_tree_refs (20,238,651 samples, 0.22%)</title><rect x="1075.5" y="277" width="2.6" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1078.52" y="287.5" ></text>
</g>
<g >
<title>update_wall_time (830,760 samples, 0.01%)</title><rect x="390.1" y="149" width="0.1" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="393.05" y="159.5" ></text>
</g>
<g >
<title>migrate_enable (10,811,646 samples, 0.12%)</title><rect x="614.6" y="293" width="1.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="617.60" y="303.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (830,760 samples, 0.01%)</title><rect x="390.1" y="229" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="393.05" y="239.5" ></text>
</g>
<g >
<title>__check_heap_object (143,889,705 samples, 1.54%)</title><rect x="358.7" y="277" width="18.2" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="361.67" y="287.5" ></text>
</g>
<g >
<title>__handle_mm_fault (861,270 samples, 0.01%)</title><rect x="10.1" y="277" width="0.1" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="13.10" y="287.5" ></text>
</g>
<g >
<title>update_process_times (814,386 samples, 0.01%)</title><rect x="389.9" y="149" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="392.95" y="159.5" ></text>
</g>
<g >
<title>__sys_bpf (35,068,923 samples, 0.38%)</title><rect x="249.1" y="325" width="4.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="252.08" y="335.5" ></text>
</g>
<g >
<title>should_failslab (2,494,625 samples, 0.03%)</title><rect x="591.0" y="245" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="593.96" y="255.5" ></text>
</g>
<g >
<title>common_interrupt (796,874 samples, 0.01%)</title><rect x="80.9" y="341" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="83.93" y="351.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (171,769,165 samples, 1.84%)</title><rect x="569.5" y="261" width="21.8" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="572.54" y="271.5" >_..</text>
</g>
<g >
<title>kmalloc_slab (14,118,576 samples, 0.15%)</title><rect x="605.1" y="277" width="1.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="608.06" y="287.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (23,631,550 samples, 0.25%)</title><rect x="828.0" y="325" width="3.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="830.97" y="335.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (4,196,338 samples, 0.04%)</title><rect x="81.0" y="357" width="0.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="84.03" y="367.5" ></text>
</g>
<g >
<title>timekeeping_advance (853,657 samples, 0.01%)</title><rect x="756.7" y="85" width="0.1" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="759.65" y="95.5" ></text>
</g>
<g >
<title>__virt_addr_valid (192,857,733 samples, 2.07%)</title><rect x="676.7" y="261" width="24.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="679.72" y="271.5" >_..</text>
</g>
<g >
<title>path_put (11,980,763 samples, 0.13%)</title><rect x="1074.0" y="277" width="1.5" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1077.00" y="287.5" ></text>
</g>
<g >
<title>__sys_bpf (859,694 samples, 0.01%)</title><rect x="10.3" y="309" width="0.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="13.32" y="319.5" ></text>
</g>
<g >
<title>__kmalloc_node (321,397,470 samples, 3.45%)</title><rect x="563.2" y="277" width="40.7" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="566.24" y="287.5" >__k..</text>
</g>
<g >
<title>memset (1,988,777 samples, 0.02%)</title><rect x="600.2" y="261" width="0.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="603.20" y="271.5" ></text>
</g>
<g >
<title>kfree (7,764,285 samples, 0.08%)</title><rect x="507.1" y="293" width="1.0" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="510.14" y="303.5" ></text>
</g>
<g >
<title>memset_orig (26,229,764 samples, 0.28%)</title><rect x="600.5" y="261" width="3.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="603.45" y="271.5" ></text>
</g>
<g >
<title>kmalloc_slab (57,868,804 samples, 0.62%)</title><rect x="591.3" y="261" width="7.3" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="594.27" y="271.5" ></text>
</g>
<g >
<title>__check_object_size (37,453,563 samples, 0.40%)</title><rect x="253.5" y="309" width="4.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="256.52" y="319.5" ></text>
</g>
<g >
<title>get_timestamp (24,400,847 samples, 0.26%)</title><rect x="20.2" y="373" width="3.1" height="15.0" fill="rgb(252,216,51)" rx="2" ry="2" />
<text  x="23.20" y="383.5" ></text>
</g>
<g >
<title>__bpf_map_area_alloc (846,111 samples, 0.01%)</title><rect x="1189.8" y="261" width="0.1" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1192.78" y="271.5" ></text>
</g>
<g >
<title>update_process_times (851,419 samples, 0.01%)</title><rect x="607.8" y="165" width="0.2" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="610.85" y="175.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (848,377 samples, 0.01%)</title><rect x="422.9" y="117" width="0.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="425.92" y="127.5" ></text>
</g>
<g >
<title>__x64_sys_bpf (4,496,956,562 samples, 48.22%)</title><rect x="253.5" y="325" width="569.0" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="256.52" y="335.5" >__x64_sys_bpf</text>
</g>
<g >
<title>security_bpf (8,338,681 samples, 0.09%)</title><rect x="819.0" y="309" width="1.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="822.00" y="319.5" ></text>
</g>
<g >
<title>__update_load_avg_se (833,869 samples, 0.01%)</title><rect x="81.5" y="181" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="84.45" y="191.5" ></text>
</g>
<g >
<title>tick_sched_handle (1,669,647 samples, 0.02%)</title><rect x="836.8" y="213" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="839.76" y="223.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (123,357,655 samples, 1.32%)</title><rect x="837.0" y="309" width="15.6" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="839.97" y="319.5" ></text>
</g>
<g >
<title>syscall (859,694 samples, 0.01%)</title><rect x="10.3" y="373" width="0.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="13.32" y="383.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (6,942,132 samples, 0.07%)</title><rect x="519.7" y="277" width="0.9" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="522.68" y="287.5" ></text>
</g>
<g >
<title>tick_sched_timer (851,419 samples, 0.01%)</title><rect x="607.8" y="197" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="610.85" y="207.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (11,964,731 samples, 0.13%)</title><rect x="710.7" y="277" width="1.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="713.70" y="287.5" ></text>
</g>
<g >
<title>tick_sched_timer (848,377 samples, 0.01%)</title><rect x="422.9" y="213" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="425.92" y="223.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (31,711,328 samples, 0.34%)</title><rect x="1090.9" y="357" width="4.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1093.92" y="367.5" ></text>
</g>
<g >
<title>_dl_start_user (857,109 samples, 0.01%)</title><rect x="1189.6" y="389" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1192.57" y="399.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (830,760 samples, 0.01%)</title><rect x="390.1" y="245" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="393.05" y="255.5" ></text>
</g>
<g >
<title>exc_page_fault (861,270 samples, 0.01%)</title><rect x="10.1" y="325" width="0.1" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="13.10" y="335.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (861,270 samples, 0.01%)</title><rect x="10.1" y="341" width="0.1" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="13.10" y="351.5" ></text>
</g>
<g >
<title>tick_sched_timer (3,346,646 samples, 0.04%)</title><rect x="81.1" y="277" width="0.5" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="84.14" y="287.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (848,377 samples, 0.01%)</title><rect x="422.9" y="261" width="0.1" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="425.92" y="271.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (330,502,561 samples, 3.54%)</title><rect x="1036.3" y="293" width="41.8" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1039.26" y="303.5" >__a..</text>
</g>
<g >
<title>kfree (29,451,354 samples, 0.32%)</title><rect x="1060.3" y="261" width="3.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1063.25" y="271.5" ></text>
</g>
<g >
<title>__audit_syscall_entry (22,891,966 samples, 0.25%)</title><rect x="849.7" y="293" width="2.9" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="852.68" y="303.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (19,829,467 samples, 0.21%)</title><rect x="1027.8" y="293" width="2.5" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1030.80" y="303.5" ></text>
</g>
<g >
<title>tick_sched_timer (1,669,647 samples, 0.02%)</title><rect x="836.8" y="229" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="839.76" y="239.5" ></text>
</g>
<g >
<title>tick_sched_timer (814,386 samples, 0.01%)</title><rect x="389.9" y="181" width="0.2" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="392.95" y="191.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (8,101,766 samples, 0.09%)</title><rect x="1022.3" y="309" width="1.0" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1025.29" y="319.5" ></text>
</g>
<g >
<title>tick_sched_timer (844,037 samples, 0.01%)</title><rect x="701.1" y="181" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="704.12" y="191.5" ></text>
</g>
<g >
<title>pcpu_freelist_populate (838,477 samples, 0.01%)</title><rect x="1189.9" y="277" width="0.1" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1192.89" y="287.5" ></text>
</g>
<g >
<title>htab_map_lookup_elem (154,526,231 samples, 1.66%)</title><rect x="458.5" y="277" width="19.5" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="461.49" y="287.5" ></text>
</g>
<g >
<title>rep_movs_alternative (77,512,223 samples, 0.83%)</title><rect x="616.0" y="293" width="9.8" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="618.97" y="303.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (740,917,742 samples, 7.95%)</title><rect x="1095.0" y="357" width="93.8" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1098.04" y="367.5" >syscall_ret..</text>
</g>
<g >
<title>__hrtimer_run_queues (844,037 samples, 0.01%)</title><rect x="701.1" y="197" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="704.12" y="207.5" ></text>
</g>
<g >
<title>kfree (27,817,117 samples, 0.30%)</title><rect x="1070.5" y="277" width="3.5" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1073.48" y="287.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1,669,647 samples, 0.02%)</title><rect x="836.8" y="261" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="839.76" y="271.5" ></text>
</g>
<g >
<title>do_fault (861,270 samples, 0.01%)</title><rect x="10.1" y="261" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="13.10" y="271.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (4,196,338 samples, 0.04%)</title><rect x="81.0" y="341" width="0.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="84.03" y="351.5" ></text>
</g>
<g >
<title>unroll_tree_refs (21,812,539 samples, 0.23%)</title><rect x="1067.7" y="261" width="2.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1070.72" y="271.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (844,037 samples, 0.01%)</title><rect x="701.1" y="261" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="704.12" y="271.5" ></text>
</g>
<g >
<title>task_tick_fair (835,947 samples, 0.01%)</title><rect x="836.9" y="165" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="839.86" y="175.5" ></text>
</g>
<g >
<title>kvfree (15,473,566 samples, 0.17%)</title><rect x="799.3" y="309" width="1.9" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="802.28" y="319.5" ></text>
</g>
<g >
<title>__check_heap_object (28,044,648 samples, 0.30%)</title><rect x="323.1" y="293" width="3.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="326.12" y="303.5" ></text>
</g>
<g >
<title>kvmalloc_node (13,310,332 samples, 0.14%)</title><rect x="801.2" y="309" width="1.7" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="804.24" y="319.5" ></text>
</g>
<g >
<title>net_rx_action (796,874 samples, 0.01%)</title><rect x="80.9" y="277" width="0.1" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="83.93" y="287.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (853,657 samples, 0.01%)</title><rect x="756.7" y="229" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="759.65" y="239.5" ></text>
</g>
<g >
<title>unmap_page_range (840,353 samples, 0.01%)</title><rect x="1189.7" y="229" width="0.1" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1192.67" y="239.5" ></text>
</g>
<g >
<title>bprm_execve (809,319 samples, 0.01%)</title><rect x="10.2" y="309" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="13.21" y="319.5" ></text>
</g>
<g >
<title>rep_movs_alternative (12,279,578 samples, 0.13%)</title><rect x="781.2" y="277" width="1.6" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="784.23" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (809,319 samples, 0.01%)</title><rect x="10.2" y="357" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.21" y="367.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (848,377 samples, 0.01%)</title><rect x="422.9" y="277" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="425.92" y="287.5" ></text>
</g>
<g >
<title>irq_exit_rcu (796,874 samples, 0.01%)</title><rect x="80.9" y="325" width="0.1" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="83.93" y="335.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (149,734,841 samples, 1.61%)</title><rect x="45.5" y="341" width="18.9" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="48.46" y="351.5" ></text>
</g>
<g >
<title>native_write_msr (833,700 samples, 0.01%)</title><rect x="836.8" y="117" width="0.1" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="839.76" y="127.5" ></text>
</g>
<g >
<title>__cond_resched (7,574,113 samples, 0.08%)</title><rect x="720.1" y="245" width="1.0" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="723.11" y="255.5" ></text>
</g>
<g >
<title>mmput (840,353 samples, 0.01%)</title><rect x="1189.7" y="309" width="0.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1192.67" y="319.5" ></text>
</g>
<g >
<title>kvmalloc_node (545,414,115 samples, 5.85%)</title><rect x="712.2" y="277" width="69.0" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="715.22" y="287.5" >kvmallo..</text>
</g>
<g >
<title>hrtimer_interrupt (853,657 samples, 0.01%)</title><rect x="756.7" y="181" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="759.65" y="191.5" ></text>
</g>
<g >
<title>unmap_vmas (840,353 samples, 0.01%)</title><rect x="1189.7" y="261" width="0.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1192.67" y="271.5" ></text>
</g>
<g >
<title>__alloc_pages (846,111 samples, 0.01%)</title><rect x="1189.8" y="213" width="0.1" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1192.78" y="223.5" ></text>
</g>
<g >
<title>do_exit (840,353 samples, 0.01%)</title><rect x="1189.7" y="325" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1192.67" y="335.5" ></text>
</g>
<g >
<title>security_bpf (32,624,257 samples, 0.35%)</title><rect x="625.8" y="293" width="4.1" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="628.78" y="303.5" ></text>
</g>
<g >
<title>update_load_avg (833,869 samples, 0.01%)</title><rect x="81.5" y="197" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="84.45" y="207.5" ></text>
</g>
<g >
<title>br_handle_frame_finish (796,874 samples, 0.01%)</title><rect x="80.9" y="165" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="83.93" y="175.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,684,588 samples, 0.02%)</title><rect x="1189.8" y="357" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1192.78" y="367.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (848,377 samples, 0.01%)</title><rect x="422.9" y="293" width="0.1" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="425.92" y="303.5" ></text>
</g>
<g >
<title>[unknown] (819,481 samples, 0.01%)</title><rect x="10.0" y="373" width="0.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (17,881,853 samples, 0.19%)</title><rect x="588.7" y="245" width="2.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="591.69" y="255.5" ></text>
</g>
<g >
<title>__vdso_clock_gettime (43,679,318 samples, 0.47%)</title><rect x="33.2" y="357" width="5.6" height="15.0" fill="rgb(254,226,54)" rx="2" ry="2" />
<text  x="36.23" y="367.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (851,419 samples, 0.01%)</title><rect x="607.8" y="277" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="610.85" y="287.5" ></text>
</g>
<g >
<title>_copy_from_user (28,228,575 samples, 0.30%)</title><rect x="705.1" y="277" width="3.6" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="708.08" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (840,353 samples, 0.01%)</title><rect x="1189.7" y="373" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1192.67" y="383.5" ></text>
</g>
<g >
<title>dev_hard_start_xmit (796,874 samples, 0.01%)</title><rect x="80.9" y="53" width="0.1" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="83.93" y="63.5" ></text>
</g>
<g >
<title>migrate_disable (44,189,411 samples, 0.47%)</title><rect x="609.0" y="293" width="5.6" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="612.01" y="303.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (809,319 samples, 0.01%)</title><rect x="10.2" y="373" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="13.21" y="383.5" ></text>
</g>
<g >
<title>memcpy (8,771,996 samples, 0.09%)</title><rect x="606.8" y="293" width="1.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="609.85" y="303.5" ></text>
</g>
<g >
<title>__vmalloc_node (859,694 samples, 0.01%)</title><rect x="10.3" y="229" width="0.1" height="15.0" fill="rgb(251,213,51)" rx="2" ry="2" />
<text  x="13.32" y="239.5" ></text>
</g>
<g >
<title>clock_gettime@plt (8,935,670 samples, 0.10%)</title><rect x="64.4" y="357" width="1.1" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="67.40" y="367.5" ></text>
</g>
<g >
<title>__irq_exit_rcu (796,874 samples, 0.01%)</title><rect x="80.9" y="309" width="0.1" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="83.93" y="319.5" ></text>
</g>
<g >
<title>__check_object_size (466,299,098 samples, 5.00%)</title><rect x="642.5" y="277" width="59.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="645.47" y="287.5" >__chec..</text>
</g>
<g >
<title>__kmalloc_node (11,469,018 samples, 0.12%)</title><rect x="701.5" y="277" width="1.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="704.48" y="287.5" ></text>
</g>
<g >
<title>__dev_queue_xmit (796,874 samples, 0.01%)</title><rect x="80.9" y="85" width="0.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="83.93" y="95.5" ></text>
</g>
<g >
<title>map_create (1,684,588 samples, 0.02%)</title><rect x="1189.8" y="309" width="0.2" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1192.78" y="319.5" ></text>
</g>
<g >
<title>__napi_poll (796,874 samples, 0.01%)</title><rect x="80.9" y="261" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="83.93" y="271.5" ></text>
</g>
<g >
<title>update_fast_timekeeper (840,599 samples, 0.01%)</title><rect x="81.3" y="181" width="0.2" height="15.0" fill="rgb(212,32,7)" rx="2" ry="2" />
<text  x="84.35" y="191.5" ></text>
</g>
<g >
<title>__vfscanf_internal (861,270 samples, 0.01%)</title><rect x="10.1" y="357" width="0.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="13.10" y="367.5" ></text>
</g>
<g >
<title>htab_map_alloc (1,684,588 samples, 0.02%)</title><rect x="1189.8" y="293" width="0.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1192.78" y="303.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1,669,647 samples, 0.02%)</title><rect x="836.8" y="245" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="839.76" y="255.5" ></text>
</g>
<g >
<title>_copy_from_user (23,431,097 samples, 0.25%)</title><rect x="782.8" y="309" width="3.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="785.79" y="319.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (857,109 samples, 0.01%)</title><rect x="1189.6" y="373" width="0.1" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1192.57" y="383.5" ></text>
</g>
<g >
<title>get_page_from_freelist (846,111 samples, 0.01%)</title><rect x="1189.8" y="197" width="0.1" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1192.78" y="207.5" ></text>
</g>
<g >
<title>hrtimer_forward (849,692 samples, 0.01%)</title><rect x="81.0" y="277" width="0.1" height="15.0" fill="rgb(230,118,28)" rx="2" ry="2" />
<text  x="84.03" y="287.5" ></text>
</g>
<g >
<title>__virt_addr_valid (17,031,117 samples, 0.18%)</title><rect x="702.9" y="277" width="2.2" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="705.93" y="287.5" ></text>
</g>
<g >
<title>memset (1,063,843 samples, 0.01%)</title><rect x="770.3" y="245" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="773.34" y="255.5" ></text>
</g>
<g >
<title>bpf_map_copy_value (488,898,302 samples, 5.24%)</title><rect x="423.0" y="293" width="61.9" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="426.02" y="303.5" >bpf_ma..</text>
</g>
<g >
<title>__hrtimer_run_queues (851,419 samples, 0.01%)</title><rect x="607.8" y="213" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="610.85" y="223.5" ></text>
</g>
<g >
<title>kvfree (397,130,548 samples, 4.26%)</title><rect x="508.1" y="293" width="50.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="511.12" y="303.5" >kvfree</text>
</g>
<g >
<title>__kmalloc_node (16,819,597 samples, 0.18%)</title><rect x="406.7" y="293" width="2.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="409.66" y="303.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (830,760 samples, 0.01%)</title><rect x="390.1" y="165" width="0.1" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="393.05" y="175.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (12,693,781 samples, 0.14%)</title><rect x="598.6" y="261" width="1.6" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="601.59" y="271.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (828,561 samples, 0.01%)</title><rect x="395.5" y="277" width="0.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="398.53" y="287.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (170,814,414 samples, 1.83%)</title><rect x="831.0" y="325" width="21.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="833.96" y="335.5" >s..</text>
</g>
<g >
<title>is_vmalloc_addr (1,945,258 samples, 0.02%)</title><rect x="701.2" y="261" width="0.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="704.23" y="271.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (851,419 samples, 0.01%)</title><rect x="607.8" y="245" width="0.2" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="610.85" y="255.5" ></text>
</g>
<g >
<title>exit_mmap (840,353 samples, 0.01%)</title><rect x="1189.7" y="277" width="0.1" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1192.67" y="287.5" ></text>
</g>
<g >
<title>br_forward_finish (796,874 samples, 0.01%)</title><rect x="80.9" y="117" width="0.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="83.93" y="127.5" ></text>
</g>
<g >
<title>tick_sched_handle (814,386 samples, 0.01%)</title><rect x="389.9" y="165" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="392.95" y="175.5" ></text>
</g>
<g >
<title>update_load_avg (848,377 samples, 0.01%)</title><rect x="422.9" y="133" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="425.92" y="143.5" ></text>
</g>
<g >
<title>__cond_resched (5,375,324 samples, 0.06%)</title><rect x="568.9" y="261" width="0.6" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="571.86" y="271.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (325,055,943 samples, 3.49%)</title><rect x="721.1" y="245" width="41.1" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="724.07" y="255.5" >__k..</text>
</g>
<g >
<title>__sys_bpf (4,128,772,999 samples, 44.27%)</title><rect x="260.4" y="309" width="522.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="263.35" y="319.5" >__sys_bpf</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (851,419 samples, 0.01%)</title><rect x="607.8" y="261" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="610.85" y="271.5" ></text>
</g>
<g >
<title>memchr_inv (127,067,182 samples, 1.36%)</title><rect x="802.9" y="309" width="16.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="805.92" y="319.5" ></text>
</g>
<g >
<title>bpf_map_area_alloc (846,111 samples, 0.01%)</title><rect x="1189.8" y="277" width="0.1" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1192.78" y="287.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (853,657 samples, 0.01%)</title><rect x="756.7" y="165" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="759.65" y="175.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (830,760 samples, 0.01%)</title><rect x="390.1" y="261" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="393.05" y="271.5" ></text>
</g>
<g >
<title>_copy_to_user (15,923,416 samples, 0.17%)</title><rect x="420.9" y="293" width="2.0" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="423.90" y="303.5" ></text>
</g>
<g >
<title>__fget_light (69,516,767 samples, 0.75%)</title><rect x="395.6" y="277" width="8.8" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="398.63" y="287.5" ></text>
</g>
<g >
<title>dput (6,111,041 samples, 0.07%)</title><rect x="1059.5" y="261" width="0.8" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1062.48" y="271.5" ></text>
</g>
<g >
<title>bpf_prog_load (859,694 samples, 0.01%)</title><rect x="10.3" y="293" width="0.1" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="13.32" y="303.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core.constprop.0 (796,874 samples, 0.01%)</title><rect x="80.9" y="197" width="0.1" height="15.0" fill="rgb(244,182,43)" rx="2" ry="2" />
<text  x="83.93" y="207.5" ></text>
</g>
<g >
<title>kvmalloc_node (383,092,764 samples, 4.11%)</title><rect x="558.4" y="293" width="48.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="561.37" y="303.5" >kvma..</text>
</g>
<g >
<title>should_failslab (5,328,932 samples, 0.06%)</title><rect x="761.5" y="229" width="0.7" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="764.52" y="239.5" ></text>
</g>
<g >
<title>scheduler_tick (844,037 samples, 0.01%)</title><rect x="701.1" y="133" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="704.12" y="143.5" ></text>
</g>
<g >
<title>kmalloc_slab (49,141,737 samples, 0.53%)</title><rect x="762.2" y="245" width="6.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="765.20" y="255.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (2,512,777 samples, 0.03%)</title><rect x="81.1" y="261" width="0.4" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="84.14" y="271.5" ></text>
</g>
<g >
<title>br_handle_frame (796,874 samples, 0.01%)</title><rect x="80.9" y="181" width="0.1" height="15.0" fill="rgb(233,128,30)" rx="2" ry="2" />
<text  x="83.93" y="191.5" ></text>
</g>
<g >
<title>[unknown] (3,349,764 samples, 0.04%)</title><rect x="10.0" y="389" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>__check_heap_object (167,060,264 samples, 1.79%)</title><rect x="655.6" y="261" width="21.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="658.58" y="271.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (12,287,081 samples, 0.13%)</title><rect x="410.4" y="293" width="1.6" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="413.42" y="303.5" ></text>
</g>
<g >
<title>__isoc99_sscanf (861,270 samples, 0.01%)</title><rect x="10.1" y="373" width="0.1" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="13.10" y="383.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (814,386 samples, 0.01%)</title><rect x="389.9" y="261" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="392.95" y="271.5" ></text>
</g>
<g >
<title>__check_heap_object (26,592,026 samples, 0.29%)</title><rect x="639.1" y="277" width="3.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="642.11" y="287.5" ></text>
</g>
<g >
<title>_copy_from_user (48,148,329 samples, 0.52%)</title><rect x="414.8" y="293" width="6.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="417.81" y="303.5" ></text>
</g>
<g >
<title>asm_common_interrupt (796,874 samples, 0.01%)</title><rect x="80.9" y="357" width="0.1" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="83.93" y="367.5" ></text>
</g>
<g >
<title>update_process_times (848,377 samples, 0.01%)</title><rect x="422.9" y="181" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="425.92" y="191.5" ></text>
</g>
<g >
<title>tun_net_xmit (796,874 samples, 0.01%)</title><rect x="80.9" y="37" width="0.1" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="83.93" y="47.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (21,675,353 samples, 0.23%)</title><rect x="1081.1" y="325" width="2.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1084.13" y="335.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_array (3,337,962 samples, 0.04%)</title><rect x="237.5" y="341" width="0.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="240.49" y="351.5" ></text>
</g>
<g >
<title>__sys_bpf (1,684,588 samples, 0.02%)</title><rect x="1189.8" y="325" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1192.78" y="335.5" ></text>
</g>
<g >
<title>check_stack_object (42,454,313 samples, 0.46%)</title><rect x="390.2" y="277" width="5.3" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="393.16" y="287.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (55,277,169 samples, 0.59%)</title><rect x="1023.3" y="309" width="7.0" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1026.32" y="319.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_array (5,847,214 samples, 0.06%)</title><rect x="414.1" y="293" width="0.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="417.07" y="303.5" ></text>
</g>
<g >
<title>update_process_times (833,869 samples, 0.01%)</title><rect x="81.5" y="245" width="0.1" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="84.45" y="255.5" ></text>
</g>
<g >
<title>native_read_msr (814,386 samples, 0.01%)</title><rect x="389.9" y="117" width="0.2" height="15.0" fill="rgb(211,30,7)" rx="2" ry="2" />
<text  x="392.95" y="127.5" ></text>
</g>
<g >
<title>htab_map_lookup_elem (20,233,239 samples, 0.22%)</title><rect x="499.2" y="293" width="2.5" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="502.18" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,669,647 samples, 0.02%)</title><rect x="836.8" y="309" width="0.2" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="839.76" y="319.5" ></text>
</g>
<g >
<title>timekeeping_advance (2,512,777 samples, 0.03%)</title><rect x="81.1" y="213" width="0.4" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="84.14" y="223.5" ></text>
</g>
<g >
<title>__kmalloc_node (510,360,466 samples, 5.47%)</title><rect x="714.6" y="261" width="64.6" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="717.62" y="271.5" >__kmall..</text>
</g>
<g >
<title>is_vmalloc_addr (42,687,649 samples, 0.46%)</title><rect x="501.7" y="293" width="5.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="504.74" y="303.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (4,196,338 samples, 0.04%)</title><rect x="81.0" y="325" width="0.6" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="84.03" y="335.5" ></text>
</g>
<g >
<title>irq_work_tick (851,419 samples, 0.01%)</title><rect x="607.8" y="149" width="0.2" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="610.85" y="159.5" ></text>
</g>
<g >
<title>__vmalloc_node_range (859,694 samples, 0.01%)</title><rect x="10.3" y="213" width="0.1" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="13.32" y="223.5" ></text>
</g>
<g >
<title>bpf_map_copy_value (19,733,400 samples, 0.21%)</title><rect x="793.3" y="309" width="2.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="796.27" y="319.5" ></text>
</g>
<g >
<title>_dl_relocate_object (857,109 samples, 0.01%)</title><rect x="1189.6" y="341" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1192.57" y="351.5" ></text>
</g>
<g >
<title>[vmlinux] (840,353 samples, 0.01%)</title><rect x="1189.7" y="357" width="0.1" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1192.67" y="367.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (4,196,338 samples, 0.04%)</title><rect x="81.0" y="293" width="0.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="84.03" y="303.5" ></text>
</g>
<g >
<title>bpf_check_uarg_tail_zero (42,072,312 samples, 0.45%)</title><rect x="787.9" y="309" width="5.4" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="790.95" y="319.5" ></text>
</g>
<g >
<title>audit_reset_context (15,972,700 samples, 0.17%)</title><rect x="1078.1" y="293" width="2.0" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1081.08" y="303.5" ></text>
</g>
<g >
<title>timekeeping_update (830,760 samples, 0.01%)</title><rect x="390.1" y="117" width="0.1" height="15.0" fill="rgb(238,152,36)" rx="2" ry="2" />
<text  x="393.05" y="127.5" ></text>
</g>
<g >
<title>task_tick_fair (833,869 samples, 0.01%)</title><rect x="81.5" y="213" width="0.1" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="84.45" y="223.5" ></text>
</g>
<g >
<title>scheduler_tick (1,669,647 samples, 0.02%)</title><rect x="836.8" y="181" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="839.76" y="191.5" ></text>
</g>
<g >
<title>load_elf_binary (809,319 samples, 0.01%)</title><rect x="10.2" y="293" width="0.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="13.21" y="303.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (830,760 samples, 0.01%)</title><rect x="390.1" y="213" width="0.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="393.05" y="223.5" ></text>
</g>
<g >
<title>should_failslab (1,109,287 samples, 0.01%)</title><rect x="603.8" y="261" width="0.1" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="606.77" y="271.5" ></text>
</g>
<g >
<title>do_group_exit (840,353 samples, 0.01%)</title><rect x="1189.7" y="341" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1192.67" y="351.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (1,798,087,586 samples, 19.28%)</title><rect x="852.6" y="325" width="227.5" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="855.58" y="335.5" >syscall_exit_to_user_mode</text>
</g>
<g >
<title>handle_mm_fault (861,270 samples, 0.01%)</title><rect x="10.1" y="293" width="0.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="13.10" y="303.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (853,657 samples, 0.01%)</title><rect x="756.7" y="69" width="0.1" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="759.65" y="79.5" ></text>
</g>
<g >
<title>perf_adjust_freq_unthr_context (833,700 samples, 0.01%)</title><rect x="836.8" y="149" width="0.1" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="839.76" y="159.5" ></text>
</g>
<g >
<title>_copy_to_user (17,360,349 samples, 0.19%)</title><rect x="785.8" y="309" width="2.1" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="788.75" y="319.5" ></text>
</g>
<g >
<title>br_forward (796,874 samples, 0.01%)</title><rect x="80.9" y="149" width="0.1" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="83.93" y="159.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (6,783,930 samples, 0.07%)</title><rect x="1030.3" y="309" width="0.9" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1033.31" y="319.5" ></text>
</g>
<g >
<title>tick_sched_handle (851,419 samples, 0.01%)</title><rect x="607.8" y="181" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="610.85" y="191.5" ></text>
</g>
<g >
<title>tick_sched_handle (833,869 samples, 0.01%)</title><rect x="81.5" y="261" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="84.45" y="271.5" ></text>
</g>
<g >
<title>tick_sched_handle (844,037 samples, 0.01%)</title><rect x="701.1" y="165" width="0.1" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="704.12" y="175.5" ></text>
</g>
<g >
<title>__x64_sys_execve (809,319 samples, 0.01%)</title><rect x="10.2" y="341" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="13.21" y="351.5" ></text>
</g>
<g >
<title>__br_forward (796,874 samples, 0.01%)</title><rect x="80.9" y="133" width="0.1" height="15.0" fill="rgb(212,36,8)" rx="2" ry="2" />
<text  x="83.93" y="143.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (814,386 samples, 0.01%)</title><rect x="389.9" y="197" width="0.2" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="392.95" y="207.5" ></text>
</g>
<g >
<title>bpf_prog_alloc_no_stats (859,694 samples, 0.01%)</title><rect x="10.3" y="261" width="0.1" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="13.32" y="271.5" ></text>
</g>
<g >
<title>memcmp (47,604,386 samples, 0.51%)</title><rect x="472.0" y="261" width="6.0" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="475.02" y="271.5" ></text>
</g>
<g >
<title>sch_direct_xmit (796,874 samples, 0.01%)</title><rect x="80.9" y="69" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="83.93" y="79.5" ></text>
</g>
<g >
<title>__x64_sys_bpf (859,694 samples, 0.01%)</title><rect x="10.3" y="325" width="0.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="13.32" y="335.5" ></text>
</g>
<g >
<title>memcpy_orig (8,326,689 samples, 0.09%)</title><rect x="608.0" y="293" width="1.0" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="610.96" y="303.5" ></text>
</g>
<g >
<title>filemap_map_pages (861,270 samples, 0.01%)</title><rect x="10.1" y="245" width="0.1" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="13.10" y="255.5" ></text>
</g>
<g >
<title>mntput (7,506,253 samples, 0.08%)</title><rect x="1064.0" y="261" width="0.9" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1066.98" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (6,685,625,433 samples, 71.69%)</title><rect x="237.9" y="341" width="846.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="240.91" y="351.5" >do_syscall_64</text>
</g>
<g >
<title>__x64_sys_bpf (1,684,588 samples, 0.02%)</title><rect x="1189.8" y="341" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.78" y="351.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (844,037 samples, 0.01%)</title><rect x="701.1" y="213" width="0.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="704.12" y="223.5" ></text>
</g>
<g >
<title>clear_page_erms (846,111 samples, 0.01%)</title><rect x="1189.8" y="181" width="0.1" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1192.78" y="191.5" ></text>
</g>
<g >
<title>update_wall_time (2,512,777 samples, 0.03%)</title><rect x="81.1" y="229" width="0.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="84.14" y="239.5" ></text>
</g>
<g >
<title>vmemdup_user (19,612,633 samples, 0.21%)</title><rect x="820.1" y="309" width="2.4" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="823.06" y="319.5" ></text>
</g>
<g >
<title>__fget_light (17,645,103 samples, 0.19%)</title><rect x="404.4" y="293" width="2.3" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="407.43" y="303.5" ></text>
</g>
<g >
<title>alloc_pages_bulk_array_mempolicy (859,694 samples, 0.01%)</title><rect x="10.3" y="197" width="0.1" height="15.0" fill="rgb(235,140,33)" rx="2" ry="2" />
<text  x="13.32" y="207.5" ></text>
</g>
<g >
<title>__audit_syscall_entry (14,257,457 samples, 0.15%)</title><rect x="835.0" y="309" width="1.8" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="837.95" y="319.5" ></text>
</g>
<g >
<title>amd_clear_divider (42,937,869 samples, 0.46%)</title><rect x="822.5" y="325" width="5.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="825.54" y="335.5" ></text>
</g>
<g >
<title>process_backlog (796,874 samples, 0.01%)</title><rect x="80.9" y="245" width="0.1" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="83.93" y="255.5" ></text>
</g>
<g >
<title>__fdget (16,550,616 samples, 0.18%)</title><rect x="258.3" y="309" width="2.1" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="261.26" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (7,954,511,989 samples, 85.30%)</title><rect x="84.4" y="357" width="1006.5" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="87.40" y="367.5" >entry_SYSCALL_64</text>
</g>
<g >
<title>lookup_nulls_elem_raw (48,899,081 samples, 0.52%)</title><rect x="465.8" y="261" width="6.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="468.83" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (859,694 samples, 0.01%)</title><rect x="10.3" y="341" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.32" y="351.5" ></text>
</g>
<g >
<title>syscall_exit_work (8,181,691 samples, 0.09%)</title><rect x="1080.1" y="325" width="1.0" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1083.10" y="335.5" ></text>
</g>
<g >
<title>__kmem_cache_free (44,747,592 samples, 0.48%)</title><rect x="514.0" y="277" width="5.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="517.01" y="287.5" ></text>
</g>
<g >
<title>__rcu_read_lock (12,862,679 samples, 0.14%)</title><rect x="408.8" y="293" width="1.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="411.79" y="303.5" ></text>
</g>
<g >
<title>__netif_receive_skb (796,874 samples, 0.01%)</title><rect x="80.9" y="229" width="0.1" height="15.0" fill="rgb(218,60,14)" rx="2" ry="2" />
<text  x="83.93" y="239.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (814,386 samples, 0.01%)</title><rect x="389.9" y="213" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="392.95" y="223.5" ></text>
</g>
<g >
<title>__do_softirq (796,874 samples, 0.01%)</title><rect x="80.9" y="293" width="0.1" height="15.0" fill="rgb(246,191,45)" rx="2" ry="2" />
<text  x="83.93" y="303.5" ></text>
</g>
</g>
</svg>
