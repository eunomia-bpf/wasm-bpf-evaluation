<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="454" onload="init(evt)" viewBox="0 0 1200 454" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="454.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="437" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="437" > </text>
<g id="frames">
<g >
<title>__sysvec_apic_timer_interrupt (805,823 samples, 0.03%)</title><rect x="359.4" y="229" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="362.37" y="239.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (15,520,681 samples, 0.51%)</title><rect x="1020.6" y="293" width="6.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1023.60" y="303.5" ></text>
</g>
<g >
<title>__kmalloc_node (6,974,282 samples, 0.23%)</title><rect x="662.1" y="261" width="2.7" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="665.05" y="271.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (53,790,580 samples, 1.78%)</title><rect x="534.4" y="245" width="21.0" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="537.39" y="255.5" ></text>
</g>
<g >
<title>_copy_from_user (21,682,209 samples, 0.72%)</title><rect x="390.8" y="277" width="8.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="393.76" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (8,453,812 samples, 0.28%)</title><rect x="48.4" y="341" width="3.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="51.42" y="351.5" ></text>
</g>
<g >
<title>__GI___open64_nocancel (623,888 samples, 0.02%)</title><rect x="10.0" y="325" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (793,571 samples, 0.03%)</title><rect x="661.7" y="229" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="664.74" y="239.5" ></text>
</g>
<g >
<title>memset (1,539,575 samples, 0.05%)</title><rect x="562.5" y="245" width="0.6" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="565.45" y="255.5" ></text>
</g>
<g >
<title>syscall_exit_work (3,177,752 samples, 0.11%)</title><rect x="1079.3" y="309" width="1.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1082.34" y="319.5" ></text>
</g>
<g >
<title>kmalloc_slab (9,368,138 samples, 0.31%)</title><rect x="570.0" y="261" width="3.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="573.01" y="271.5" ></text>
</g>
<g >
<title>should_failslab (2,337,117 samples, 0.08%)</title><rect x="731.4" y="213" width="0.9" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="734.43" y="223.5" ></text>
</g>
<g >
<title>htab_map_hash (39,224,549 samples, 1.30%)</title><rect x="413.9" y="261" width="15.4" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="416.90" y="271.5" ></text>
</g>
<g >
<title>__audit_syscall_entry (18,615,482 samples, 0.62%)</title><rect x="822.2" y="277" width="7.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="825.23" y="287.5" ></text>
</g>
<g >
<title>check_stack_object (1,501,508 samples, 0.05%)</title><rect x="668.8" y="261" width="0.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="671.76" y="271.5" ></text>
</g>
<g >
<title>pcpu_freelist_populate (697,113 samples, 0.02%)</title><rect x="1189.7" y="261" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1192.70" y="271.5" ></text>
</g>
<g >
<title>__audit_syscall_entry (13,822,330 samples, 0.46%)</title><rect x="807.7" y="293" width="5.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="810.74" y="303.5" ></text>
</g>
<g >
<title>update_curr (758,568 samples, 0.03%)</title><rect x="446.7" y="69" width="0.3" height="15.0" fill="rgb(227,105,25)" rx="2" ry="2" />
<text  x="449.73" y="79.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (9,372,965 samples, 0.31%)</title><rect x="794.4" y="309" width="3.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="797.40" y="319.5" ></text>
</g>
<g >
<title>audit_reset_context (83,788,429 samples, 2.78%)</title><rect x="1037.0" y="261" width="32.8" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1040.00" y="271.5" >au..</text>
</g>
<g >
<title>bpf_prog_load (1,373,139 samples, 0.05%)</title><rect x="1188.9" y="293" width="0.5" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="1191.89" y="303.5" ></text>
</g>
<g >
<title>__check_heap_object (7,857,333 samples, 0.26%)</title><rect x="296.2" y="277" width="3.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="299.23" y="287.5" ></text>
</g>
<g >
<title>init_file (623,888 samples, 0.02%)</title><rect x="10.0" y="197" width="0.2" height="15.0" fill="rgb(246,188,45)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>_dl_start_user (1,225,877 samples, 0.04%)</title><rect x="1187.8" y="373" width="0.5" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1190.84" y="383.5" ></text>
</g>
<g >
<title>__kmalloc_node (199,138,683 samples, 6.61%)</title><rect x="674.2" y="245" width="77.9" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="677.17" y="255.5" >__kmalloc..</text>
</g>
<g >
<title>__check_heap_object (46,075,377 samples, 1.53%)</title><rect x="616.6" y="245" width="18.1" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="619.64" y="255.5" ></text>
</g>
<g >
<title>__alloc_percpu_gfp (697,818 samples, 0.02%)</title><rect x="1189.4" y="245" width="0.3" height="15.0" fill="rgb(251,212,50)" rx="2" ry="2" />
<text  x="1192.43" y="255.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (7,712,602 samples, 0.26%)</title><rect x="740.5" y="229" width="3.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="743.55" y="239.5" ></text>
</g>
<g >
<title>syscall_exit_work (131,434,189 samples, 4.36%)</title><rect x="1027.9" y="293" width="51.4" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1030.88" y="303.5" >sysca..</text>
</g>
<g >
<title>change_protection (272,372 samples, 0.01%)</title><rect x="10.4" y="229" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="13.43" y="239.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (41,806,441 samples, 1.39%)</title><rect x="813.1" y="293" width="16.4" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="816.15" y="303.5" ></text>
</g>
<g >
<title>map_benchmark (3,014,291,068 samples, 100.00%)</title><rect x="10.0" y="389" width="1180.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="13.00" y="399.5" >map_benchmark</text>
</g>
<g >
<title>map_create (1,394,931 samples, 0.05%)</title><rect x="1189.4" y="293" width="0.6" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1192.43" y="303.5" ></text>
</g>
<g >
<title>_find_next_bit (697,818 samples, 0.02%)</title><rect x="1189.4" y="229" width="0.3" height="15.0" fill="rgb(230,116,27)" rx="2" ry="2" />
<text  x="1192.43" y="239.5" ></text>
</g>
<g >
<title>check_stack_object (27,329,346 samples, 0.91%)</title><rect x="458.9" y="277" width="10.7" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="461.90" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (2,656,201,057 samples, 88.12%)</title><rect x="51.7" y="341" width="1039.8" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="54.72" y="351.5" >entry_SYSCALL_64</text>
</g>
<g >
<title>do_exit (801,885 samples, 0.03%)</title><rect x="1188.6" y="309" width="0.3" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1191.58" y="319.5" ></text>
</g>
<g >
<title>amd_clear_divider (6,945,874 samples, 0.23%)</title><rect x="791.7" y="309" width="2.7" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="794.68" y="319.5" ></text>
</g>
<g >
<title>should_failslab (2,389,795 samples, 0.08%)</title><rect x="566.9" y="245" width="1.0" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="569.95" y="255.5" ></text>
</g>
<g >
<title>tick_sched_timer (758,568 samples, 0.03%)</title><rect x="446.7" y="149" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="449.73" y="159.5" ></text>
</g>
<g >
<title>mntput (3,114,055 samples, 0.10%)</title><rect x="1061.9" y="245" width="1.2" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1064.89" y="255.5" ></text>
</g>
<g >
<title>setup_arg_pages (272,372 samples, 0.01%)</title><rect x="10.4" y="261" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="13.43" y="271.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (3,137,026 samples, 0.10%)</title><rect x="561.2" y="245" width="1.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="564.22" y="255.5" ></text>
</g>
<g >
<title>kfree (15,015,719 samples, 0.50%)</title><rect x="1069.8" y="261" width="5.9" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1072.80" y="271.5" ></text>
</g>
<g >
<title>__check_object_size (7,746,629 samples, 0.26%)</title><rect x="225.5" y="293" width="3.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="228.54" y="303.5" ></text>
</g>
<g >
<title>memchr_inv (30,234,309 samples, 1.00%)</title><rect x="776.8" y="293" width="11.8" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="779.79" y="303.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (758,568 samples, 0.03%)</title><rect x="446.7" y="197" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="449.73" y="207.5" ></text>
</g>
<g >
<title>path_openat (623,888 samples, 0.02%)</title><rect x="10.0" y="229" width="0.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>unroll_tree_refs (3,878,847 samples, 0.13%)</title><rect x="1068.3" y="245" width="1.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1071.29" y="255.5" ></text>
</g>
<g >
<title>__libc_start_call_main (3,007,457,237 samples, 99.77%)</title><rect x="10.5" y="373" width="1177.3" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="13.54" y="383.5" >__libc_start_call_main</text>
</g>
<g >
<title>hrtimer_interrupt (805,823 samples, 0.03%)</title><rect x="359.4" y="213" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="362.37" y="223.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (805,823 samples, 0.03%)</title><rect x="359.4" y="261" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="362.37" y="271.5" ></text>
</g>
<g >
<title>__handle_mm_fault (645,043 samples, 0.02%)</title><rect x="1188.1" y="245" width="0.2" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="1191.06" y="255.5" ></text>
</g>
<g >
<title>do_syscall_64 (750,388 samples, 0.02%)</title><rect x="10.2" y="341" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.24" y="351.5" ></text>
</g>
<g >
<title>syscall (2,768,070 samples, 0.09%)</title><rect x="1188.9" y="373" width="1.1" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1191.89" y="383.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (113,636,603 samples, 3.77%)</title><rect x="1034.6" y="277" width="44.4" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1037.56" y="287.5" >__au..</text>
</g>
<g >
<title>perf_event_ksymbol (693,262 samples, 0.02%)</title><rect x="1189.2" y="261" width="0.2" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1192.16" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (623,888 samples, 0.02%)</title><rect x="10.0" y="293" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>next_uptodate_folio (645,043 samples, 0.02%)</title><rect x="1188.1" y="197" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1191.06" y="207.5" ></text>
</g>
<g >
<title>do_syscall_64 (580,834 samples, 0.02%)</title><rect x="1187.8" y="309" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1190.84" y="319.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_array (1,511,929 samples, 0.05%)</title><rect x="206.2" y="325" width="0.5" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="209.15" y="335.5" ></text>
</g>
<g >
<title>load_elf_binary (750,388 samples, 0.02%)</title><rect x="10.2" y="277" width="0.3" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="13.24" y="287.5" ></text>
</g>
<g >
<title>kfree (79,988,085 samples, 2.65%)</title><rect x="490.7" y="261" width="31.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="493.69" y="271.5" >kf..</text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (793,571 samples, 0.03%)</title><rect x="661.7" y="197" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="664.74" y="207.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (11,580,224 samples, 0.38%)</title><rect x="474.2" y="277" width="4.5" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="477.20" y="287.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (5,522,032 samples, 0.18%)</title><rect x="488.5" y="261" width="2.2" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="491.53" y="271.5" ></text>
</g>
<g >
<title>syscall (2,957,928,639 samples, 98.13%)</title><rect x="29.9" y="357" width="1157.9" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="32.93" y="367.5" >syscall</text>
</g>
<g >
<title>__hrtimer_run_queues (793,571 samples, 0.03%)</title><rect x="661.7" y="165" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="664.74" y="175.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (3,085,851 samples, 0.10%)</title><rect x="1026.7" y="293" width="1.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1029.68" y="303.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (80,330,622 samples, 2.66%)</title><rect x="798.1" y="309" width="31.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="801.07" y="319.5" >sy..</text>
</g>
<g >
<title>mprotect_fixup (272,372 samples, 0.01%)</title><rect x="10.4" y="245" width="0.1" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="13.43" y="255.5" ></text>
</g>
<g >
<title>_dl_map_object (623,888 samples, 0.02%)</title><rect x="10.0" y="341" width="0.2" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (10,897,240 samples, 0.36%)</title><rect x="727.2" y="213" width="4.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="730.16" y="223.5" ></text>
</g>
<g >
<title>unmap_page_range (801,885 samples, 0.03%)</title><rect x="1188.6" y="213" width="0.3" height="15.0" fill="rgb(206,5,1)" rx="2" ry="2" />
<text  x="1191.58" y="223.5" ></text>
</g>
<g >
<title>perf_iterate_sb (693,262 samples, 0.02%)</title><rect x="1189.2" y="245" width="0.2" height="15.0" fill="rgb(244,179,42)" rx="2" ry="2" />
<text  x="1192.16" y="255.5" ></text>
</g>
<g >
<title>__update_load_avg_cfs_rq (793,571 samples, 0.03%)</title><rect x="661.7" y="53" width="0.4" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="664.74" y="63.5" ></text>
</g>
<g >
<title>tick_sched_timer (805,823 samples, 0.03%)</title><rect x="359.4" y="197" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="362.37" y="207.5" ></text>
</g>
<g >
<title>dl_main (645,043 samples, 0.02%)</title><rect x="1188.1" y="341" width="0.2" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1191.06" y="351.5" ></text>
</g>
<g >
<title>main (18,776,269 samples, 0.62%)</title><rect x="22.6" y="357" width="7.3" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="25.58" y="367.5" ></text>
</g>
<g >
<title>do_group_exit (801,885 samples, 0.03%)</title><rect x="1188.6" y="325" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1191.58" y="335.5" ></text>
</g>
<g >
<title>__fdget (3,882,562 samples, 0.13%)</title><rect x="228.6" y="293" width="1.5" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="231.57" y="303.5" ></text>
</g>
<g >
<title>scheduler_tick (793,571 samples, 0.03%)</title><rect x="661.7" y="101" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="664.74" y="111.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (645,043 samples, 0.02%)</title><rect x="1188.1" y="309" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1191.06" y="319.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (5,426,272 samples, 0.18%)</title><rect x="567.9" y="261" width="2.1" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="570.88" y="271.5" ></text>
</g>
<g >
<title>security_file_alloc (623,888 samples, 0.02%)</title><rect x="10.0" y="181" width="0.2" height="15.0" fill="rgb(233,133,31)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title>unmap_single_vma (801,885 samples, 0.03%)</title><rect x="1188.6" y="229" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1191.58" y="239.5" ></text>
</g>
<g >
<title>audit_reset_context (580,834 samples, 0.02%)</title><rect x="1187.8" y="261" width="0.3" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1190.84" y="271.5" ></text>
</g>
<g >
<title>[vmlinux] (801,885 samples, 0.03%)</title><rect x="1188.6" y="341" width="0.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1191.58" y="351.5" ></text>
</g>
<g >
<title>__mod_lruvec_page_state (801,885 samples, 0.03%)</title><rect x="1188.6" y="197" width="0.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1191.58" y="207.5" ></text>
</g>
<g >
<title>[unknown] (623,888 samples, 0.02%)</title><rect x="10.0" y="357" width="0.2" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>syscall_exit_work (580,834 samples, 0.02%)</title><rect x="1187.8" y="277" width="0.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1190.84" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_bpf (2,768,070 samples, 0.09%)</title><rect x="1188.9" y="325" width="1.1" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1191.89" y="335.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (6,886,822 samples, 0.23%)</title><rect x="1080.6" y="309" width="2.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1083.58" y="319.5" ></text>
</g>
<g >
<title>migrate_enable (3,905,248 samples, 0.13%)</title><rect x="577.6" y="277" width="1.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="580.60" y="287.5" ></text>
</g>
<g >
<title>do_user_addr_fault (645,043 samples, 0.02%)</title><rect x="1188.1" y="277" width="0.2" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1191.06" y="287.5" ></text>
</g>
<g >
<title>_copy_to_user (6,954,381 samples, 0.23%)</title><rect x="760.1" y="293" width="2.7" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="763.07" y="303.5" ></text>
</g>
<g >
<title>__fdget (34,141,995 samples, 1.13%)</title><rect x="365.8" y="277" width="13.4" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="368.81" y="287.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (7,878,489 samples, 0.26%)</title><rect x="552.4" y="229" width="3.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="555.36" y="239.5" ></text>
</g>
<g >
<title>__virt_addr_valid (1,596,796 samples, 0.05%)</title><rect x="664.8" y="261" width="0.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="667.78" y="271.5" ></text>
</g>
<g >
<title>bpf_map_lookup_elem (30,752,329 samples, 1.02%)</title><rect x="10.5" y="357" width="12.1" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.54" y="367.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (15,650,532 samples, 0.52%)</title><rect x="1083.3" y="325" width="6.1" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1086.28" y="335.5" ></text>
</g>
<g >
<title>bpf_prog_calc_tag (679,877 samples, 0.02%)</title><rect x="1188.9" y="277" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="1191.89" y="287.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (1,225,877 samples, 0.04%)</title><rect x="1187.8" y="357" width="0.5" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1190.84" y="367.5" ></text>
</g>
<g >
<title>memset_orig (20,340,328 samples, 0.67%)</title><rect x="743.6" y="229" width="7.9" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="746.56" y="239.5" ></text>
</g>
<g >
<title>do_fault (645,043 samples, 0.02%)</title><rect x="1188.1" y="229" width="0.2" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1191.06" y="239.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (238,288,066 samples, 7.91%)</title><rect x="1094.6" y="341" width="93.2" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1097.56" y="351.5" >syscall_ret..</text>
</g>
<g >
<title>bpf_map_value_size (8,484,613 samples, 0.28%)</title><rect x="769.8" y="293" width="3.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="772.80" y="303.5" ></text>
</g>
<g >
<title>bpf_map_copy_value (150,021,505 samples, 4.98%)</title><rect x="400.2" y="277" width="58.7" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="403.18" y="287.5" >bpf_ma..</text>
</g>
<g >
<title>memcmp (15,462,349 samples, 0.51%)</title><rect x="447.0" y="245" width="6.1" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="450.03" y="255.5" ></text>
</g>
<g >
<title>handle_mm_fault (645,043 samples, 0.02%)</title><rect x="1188.1" y="261" width="0.2" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="1191.06" y="271.5" ></text>
</g>
<g >
<title>kmalloc_slab (3,895,479 samples, 0.13%)</title><rect x="754.9" y="245" width="1.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="757.90" y="255.5" ></text>
</g>
<g >
<title>all (3,014,359,756 samples, 100%)</title><rect x="10.0" y="405" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="415.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (638,181,277 samples, 21.17%)</title><rect x="829.5" y="309" width="249.8" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="832.51" y="319.5" >syscall_exit_to_user_mode</text>
</g>
<g >
<title>__rcu_read_lock (1,515,272 samples, 0.05%)</title><rect x="385.0" y="277" width="0.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="387.97" y="287.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (750,388 samples, 0.02%)</title><rect x="10.2" y="309" width="0.3" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="13.24" y="319.5" ></text>
</g>
<g >
<title>__virt_addr_valid (69,945,011 samples, 2.32%)</title><rect x="634.7" y="245" width="27.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="637.67" y="255.5" >_..</text>
</g>
<g >
<title>unroll_tree_refs (3,897,689 samples, 0.13%)</title><rect x="1077.5" y="261" width="1.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1080.52" y="271.5" ></text>
</g>
<g >
<title>audit_reset_context (740,469 samples, 0.02%)</title><rect x="1079.0" y="277" width="0.3" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1082.05" y="287.5" ></text>
</g>
<g >
<title>__x64_sys_bpf (1,446,997,740 samples, 48.00%)</title><rect x="225.2" y="309" width="566.5" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="228.24" y="319.5" >__x64_sys_bpf</text>
</g>
<g >
<title>htab_map_alloc (1,394,931 samples, 0.05%)</title><rect x="1189.4" y="277" width="0.6" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1192.43" y="287.5" ></text>
</g>
<g >
<title>kmem_cache_alloc (623,888 samples, 0.02%)</title><rect x="10.0" y="165" width="0.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="13.00" y="175.5" ></text>
</g>
<g >
<title>exit_mmap (801,885 samples, 0.03%)</title><rect x="1188.6" y="261" width="0.3" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1191.58" y="271.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (801,885 samples, 0.03%)</title><rect x="1188.6" y="373" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1191.58" y="383.5" ></text>
</g>
<g >
<title>perf_event_bpf_event (693,262 samples, 0.02%)</title><rect x="1189.2" y="277" width="0.2" height="15.0" fill="rgb(231,121,29)" rx="2" ry="2" />
<text  x="1192.16" y="287.5" ></text>
</g>
<g >
<title>kvmalloc_node (132,003,449 samples, 4.38%)</title><rect x="522.0" y="277" width="51.7" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="525.00" y="287.5" >kvmal..</text>
</g>
<g >
<title>memset_orig (9,947,268 samples, 0.33%)</title><rect x="563.1" y="245" width="3.8" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="566.05" y="255.5" ></text>
</g>
<g >
<title>htab_map_lookup_elem (11,750,836 samples, 0.39%)</title><rect x="469.6" y="277" width="4.6" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="472.60" y="287.5" ></text>
</g>
<g >
<title>__sys_bpf (10,050,240 samples, 0.33%)</title><rect x="221.3" y="309" width="3.9" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="224.30" y="319.5" ></text>
</g>
<g >
<title>tick_sched_handle (793,571 samples, 0.03%)</title><rect x="661.7" y="133" width="0.4" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="664.74" y="143.5" ></text>
</g>
<g >
<title>__x64_sys_bpf (9,271,337 samples, 0.31%)</title><rect x="202.5" y="325" width="3.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="205.52" y="335.5" ></text>
</g>
<g >
<title>__cond_resched (4,686,530 samples, 0.16%)</title><rect x="686.3" y="229" width="1.9" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="689.34" y="239.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (2,304,599 samples, 0.08%)</title><rect x="1025.8" y="277" width="0.9" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1028.77" y="287.5" ></text>
</g>
<g >
<title>check_match (663,723 samples, 0.02%)</title><rect x="1188.3" y="373" width="0.3" height="15.0" fill="rgb(213,40,9)" rx="2" ry="2" />
<text  x="1191.32" y="383.5" ></text>
</g>
<g >
<title>__sys_bpf (2,768,070 samples, 0.09%)</title><rect x="1188.9" y="309" width="1.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1191.89" y="319.5" ></text>
</g>
<g >
<title>do_filp_open (623,888 samples, 0.02%)</title><rect x="10.0" y="245" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>__cgroup_account_cputime (758,568 samples, 0.03%)</title><rect x="446.7" y="53" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="449.73" y="63.5" ></text>
</g>
<g >
<title>[unknown] (1,374,276 samples, 0.05%)</title><rect x="10.0" y="373" width="0.5" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,768,070 samples, 0.09%)</title><rect x="1188.9" y="341" width="1.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1191.89" y="351.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (5,366,173 samples, 0.18%)</title><rect x="669.3" y="261" width="2.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="672.35" y="271.5" ></text>
</g>
<g >
<title>vmemdup_user (3,867,227 samples, 0.13%)</title><rect x="790.2" y="293" width="1.5" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="793.16" y="303.5" ></text>
</g>
<g >
<title>__virt_addr_valid (29,518,994 samples, 0.98%)</title><rect x="347.8" y="261" width="11.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="350.81" y="271.5" ></text>
</g>
<g >
<title>bpf_map_copy_value (4,700,225 samples, 0.16%)</title><rect x="768.0" y="293" width="1.8" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="770.96" y="303.5" ></text>
</g>
<g >
<title>_copy_from_user (8,553,309 samples, 0.28%)</title><rect x="665.4" y="261" width="3.4" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="668.41" y="271.5" ></text>
</g>
<g >
<title>rep_movs_alternative (6,136,402 samples, 0.20%)</title><rect x="756.4" y="261" width="2.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="759.43" y="271.5" ></text>
</g>
<g >
<title>__kmem_cache_free (51,224,476 samples, 1.70%)</title><rect x="501.9" y="245" width="20.1" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="504.95" y="255.5" ></text>
</g>
<g >
<title>__check_object_size (147,703,035 samples, 4.90%)</title><rect x="604.2" y="261" width="57.9" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="607.23" y="271.5" >__chec..</text>
</g>
<g >
<title>alloc_empty_file (623,888 samples, 0.02%)</title><rect x="10.0" y="213" width="0.2" height="15.0" fill="rgb(209,19,4)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>filemap_map_pages (645,043 samples, 0.02%)</title><rect x="1188.1" y="213" width="0.2" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="1191.06" y="223.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (1,556,366 samples, 0.05%)</title><rect x="1020.0" y="293" width="0.6" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1022.99" y="303.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (478,016 samples, 0.02%)</title><rect x="10.2" y="261" width="0.2" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="13.24" y="271.5" ></text>
</g>
<g >
<title>vmemdup_user (425,387,657 samples, 14.11%)</title><rect x="592.3" y="277" width="166.5" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="595.31" y="287.5" >vmemdup_user</text>
</g>
<g >
<title>kfree (3,160,246 samples, 0.10%)</title><rect x="478.7" y="277" width="1.3" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="481.74" y="287.5" ></text>
</g>
<g >
<title>update_process_times (758,568 samples, 0.03%)</title><rect x="446.7" y="117" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="449.73" y="127.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (793,571 samples, 0.03%)</title><rect x="661.7" y="213" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="664.74" y="223.5" ></text>
</g>
<g >
<title>tick_sched_handle (758,568 samples, 0.03%)</title><rect x="446.7" y="133" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="449.73" y="143.5" ></text>
</g>
<g >
<title>kvmalloc_node (217,084,336 samples, 7.20%)</title><rect x="671.4" y="261" width="85.0" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="674.45" y="271.5" >kvmalloc_n..</text>
</g>
<g >
<title>do_syscall_64 (2,239,139,356 samples, 74.28%)</title><rect x="206.7" y="325" width="876.6" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="209.74" y="335.5" >do_syscall_64</text>
</g>
<g >
<title>__rcu_read_unlock (6,226,946 samples, 0.21%)</title><rect x="385.6" y="277" width="2.4" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="388.56" y="287.5" ></text>
</g>
<g >
<title>perf_iterate_ctx (693,262 samples, 0.02%)</title><rect x="1189.2" y="229" width="0.2" height="15.0" fill="rgb(205,4,0)" rx="2" ry="2" />
<text  x="1192.16" y="239.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (758,568 samples, 0.03%)</title><rect x="446.7" y="165" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="449.73" y="175.5" ></text>
</g>
<g >
<title>bprm_execve (750,388 samples, 0.02%)</title><rect x="10.2" y="293" width="0.3" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="13.24" y="303.5" ></text>
</g>
<g >
<title>memcpy_orig (3,813,520 samples, 0.13%)</title><rect x="573.7" y="277" width="1.5" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="576.68" y="287.5" ></text>
</g>
<g >
<title>lookup_nulls_elem_raw (26,037,104 samples, 0.86%)</title><rect x="436.8" y="245" width="10.2" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="439.84" y="255.5" ></text>
</g>
<g >
<title>__kmalloc_node (108,674,452 samples, 3.61%)</title><rect x="525.3" y="261" width="42.6" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="528.34" y="271.5" >__km..</text>
</g>
<g >
<title>bpf_check_uarg_tail_zero (13,213,584 samples, 0.44%)</title><rect x="762.8" y="293" width="5.2" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="765.79" y="303.5" ></text>
</g>
<g >
<title>update_process_times (793,571 samples, 0.03%)</title><rect x="661.7" y="117" width="0.4" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="664.74" y="127.5" ></text>
</g>
<g >
<title>__fget_light (34,141,995 samples, 1.13%)</title><rect x="365.8" y="261" width="13.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="368.81" y="271.5" ></text>
</g>
<g >
<title>rep_movs_alternative (23,410,555 samples, 0.78%)</title><rect x="579.1" y="277" width="9.2" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="582.13" y="287.5" ></text>
</g>
<g >
<title>unmap_vmas (801,885 samples, 0.03%)</title><rect x="1188.6" y="245" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1191.58" y="255.5" ></text>
</g>
<g >
<title>lookup_nulls_elem_raw (7,786,605 samples, 0.26%)</title><rect x="453.1" y="261" width="3.0" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="456.08" y="271.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (758,568 samples, 0.03%)</title><rect x="446.7" y="229" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="449.73" y="239.5" ></text>
</g>
<g >
<title>security_bpf (10,246,013 samples, 0.34%)</title><rect x="588.3" y="277" width="4.0" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="591.29" y="287.5" ></text>
</g>
<g >
<title>migrate_disable (6,216,075 samples, 0.21%)</title><rect x="575.2" y="277" width="2.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="578.17" y="287.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (7,755,459 samples, 0.26%)</title><rect x="1091.5" y="341" width="3.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1094.52" y="351.5" ></text>
</g>
<g >
<title>memset (645,043 samples, 0.02%)</title><rect x="1188.1" y="325" width="0.2" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1191.06" y="335.5" ></text>
</g>
<g >
<title>kvfree (107,365,599 samples, 3.56%)</title><rect x="480.0" y="277" width="42.0" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="482.97" y="287.5" >kvf..</text>
</g>
<g >
<title>syscall_exit_to_user_mode (5,410,979 samples, 0.18%)</title><rect x="1089.4" y="325" width="2.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1092.40" y="335.5" ></text>
</g>
<g >
<title>_copy_from_user (3,168,800 samples, 0.11%)</title><rect x="758.8" y="293" width="1.3" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="761.83" y="303.5" ></text>
</g>
<g >
<title>__virt_addr_valid (7,054,570 samples, 0.23%)</title><rect x="388.0" y="277" width="2.8" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="391.00" y="287.5" ></text>
</g>
<g >
<title>kvmalloc_node (2,361,805 samples, 0.08%)</title><rect x="775.9" y="293" width="0.9" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="778.87" y="303.5" ></text>
</g>
<g >
<title>task_tick_fair (758,568 samples, 0.03%)</title><rect x="446.7" y="85" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="449.73" y="95.5" ></text>
</g>
<g >
<title>access (580,834 samples, 0.02%)</title><rect x="1187.8" y="341" width="0.3" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1190.84" y="351.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (580,834 samples, 0.02%)</title><rect x="1187.8" y="325" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1190.84" y="335.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (580,834 samples, 0.02%)</title><rect x="1187.8" y="293" width="0.3" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1190.84" y="303.5" ></text>
</g>
<g >
<title>migrate_enable (7,083,071 samples, 0.23%)</title><rect x="456.1" y="261" width="2.8" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="459.13" y="271.5" ></text>
</g>
<g >
<title>do_sys_openat2 (623,888 samples, 0.02%)</title><rect x="10.0" y="261" width="0.2" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>__cond_resched (2,290,669 samples, 0.08%)</title><rect x="533.5" y="245" width="0.9" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="536.49" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (750,388 samples, 0.02%)</title><rect x="10.2" y="357" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="13.24" y="367.5" ></text>
</g>
<g >
<title>check_stack_object (15,635,492 samples, 0.52%)</title><rect x="359.7" y="261" width="6.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="362.69" y="271.5" ></text>
</g>
<g >
<title>__kmalloc_node (7,005,608 samples, 0.23%)</title><rect x="382.2" y="277" width="2.8" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="385.23" y="287.5" ></text>
</g>
<g >
<title>__rcu_read_lock (1,558,580 samples, 0.05%)</title><rect x="413.3" y="261" width="0.6" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="416.29" y="271.5" ></text>
</g>
<g >
<title>kmalloc_slab (14,761,932 samples, 0.49%)</title><rect x="555.4" y="245" width="5.8" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="558.45" y="255.5" ></text>
</g>
<g >
<title>task_tick_fair (793,571 samples, 0.03%)</title><rect x="661.7" y="85" width="0.4" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="664.74" y="95.5" ></text>
</g>
<g >
<title>htab_map_lookup_elem (60,877,531 samples, 2.02%)</title><rect x="429.3" y="261" width="23.8" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="432.25" y="271.5" >h..</text>
</g>
<g >
<title>__x64_sys_openat (623,888 samples, 0.02%)</title><rect x="10.0" y="277" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (758,568 samples, 0.03%)</title><rect x="446.7" y="181" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="449.73" y="191.5" ></text>
</g>
<g >
<title>__fget_light (7,802,087 samples, 0.26%)</title><rect x="379.2" y="277" width="3.0" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="382.17" y="287.5" ></text>
</g>
<g >
<title>__kmem_cache_free (14,897,203 samples, 0.49%)</title><rect x="482.7" y="261" width="5.8" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="485.70" y="271.5" ></text>
</g>
<g >
<title>dput (7,753,669 samples, 0.26%)</title><rect x="1053.8" y="245" width="3.0" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1056.76" y="255.5" ></text>
</g>
<g >
<title>__sys_bpf (1,350,682,345 samples, 44.81%)</title><rect x="230.1" y="293" width="528.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="233.09" y="303.5" >__sys_bpf</text>
</g>
<g >
<title>exc_page_fault (645,043 samples, 0.02%)</title><rect x="1188.1" y="293" width="0.2" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="1191.06" y="303.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (112,839,018 samples, 3.74%)</title><rect x="688.2" y="229" width="44.1" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="691.17" y="239.5" >__km..</text>
</g>
<g >
<title>__percpu_counter_init_many (697,818 samples, 0.02%)</title><rect x="1189.4" y="261" width="0.3" height="15.0" fill="rgb(213,37,9)" rx="2" ry="2" />
<text  x="1192.43" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (801,885 samples, 0.03%)</title><rect x="1188.6" y="357" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1191.58" y="367.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (623,888 samples, 0.02%)</title><rect x="10.0" y="309" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>update_load_avg (793,571 samples, 0.03%)</title><rect x="661.7" y="69" width="0.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="664.74" y="79.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (7,080,408 samples, 0.23%)</title><rect x="752.1" y="245" width="2.8" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="755.13" y="255.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (793,571 samples, 0.03%)</title><rect x="661.7" y="181" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="664.74" y="191.5" ></text>
</g>
<g >
<title>__x64_sys_execve (750,388 samples, 0.02%)</title><rect x="10.2" y="325" width="0.3" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="13.24" y="335.5" ></text>
</g>
<g >
<title>kfree (13,036,386 samples, 0.43%)</title><rect x="1056.8" y="245" width="5.1" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1059.79" y="255.5" ></text>
</g>
<g >
<title>__check_object_size (169,887,625 samples, 5.64%)</title><rect x="299.3" y="277" width="66.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="302.30" y="287.5" >__check..</text>
</g>
<g >
<title>entry_SYSCALL_64 (2,768,070 samples, 0.09%)</title><rect x="1188.9" y="357" width="1.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1191.89" y="367.5" ></text>
</g>
<g >
<title>path_put (4,694,226 samples, 0.16%)</title><rect x="1075.7" y="261" width="1.8" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1078.68" y="271.5" ></text>
</g>
<g >
<title>scheduler_tick (758,568 samples, 0.03%)</title><rect x="446.7" y="101" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="449.73" y="111.5" ></text>
</g>
<g >
<title>__check_heap_object (45,099,333 samples, 1.50%)</title><rect x="330.2" y="261" width="17.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="333.16" y="271.5" ></text>
</g>
<g >
<title>__mmput (801,885 samples, 0.03%)</title><rect x="1188.6" y="277" width="0.3" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1191.58" y="287.5" ></text>
</g>
<g >
<title>path_put (13,211,512 samples, 0.44%)</title><rect x="1063.1" y="245" width="5.2" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1066.11" y="255.5" ></text>
</g>
<g >
<title>mmput (801,885 samples, 0.03%)</title><rect x="1188.6" y="293" width="0.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1191.58" y="303.5" ></text>
</g>
<g >
<title>kvfree (7,001,444 samples, 0.23%)</title><rect x="773.1" y="293" width="2.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="776.12" y="303.5" ></text>
</g>
<g >
<title>__check_heap_object (11,696,292 samples, 0.39%)</title><rect x="599.7" y="261" width="4.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="602.66" y="271.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (758,568 samples, 0.03%)</title><rect x="446.7" y="213" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="449.73" y="223.5" ></text>
</g>
<g >
<title>kmalloc_slab (20,949,286 samples, 0.69%)</title><rect x="732.3" y="229" width="8.2" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="735.34" y="239.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (805,823 samples, 0.03%)</title><rect x="359.4" y="245" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="362.37" y="255.5" ></text>
</g>
<g >
<title>_copy_to_user (2,371,400 samples, 0.08%)</title><rect x="399.2" y="277" width="1.0" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="402.25" y="287.5" ></text>
</g>
<g >
<title>security_bpf (3,933,007 samples, 0.13%)</title><rect x="788.6" y="293" width="1.6" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="791.63" y="303.5" ></text>
</g>
<g >
<title>tick_sched_timer (793,571 samples, 0.03%)</title><rect x="661.7" y="149" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="664.74" y="159.5" ></text>
</g>
<g >
<title>should_failslab (1,536,911 samples, 0.05%)</title><rect x="751.5" y="229" width="0.6" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="754.53" y="239.5" ></text>
</g>
<g >
<title>cgroup_rstat_updated (758,568 samples, 0.03%)</title><rect x="446.7" y="37" width="0.3" height="15.0" fill="rgb(244,180,43)" rx="2" ry="2" />
<text  x="449.73" y="47.5" ></text>
</g>
</g>
</svg>
