<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="390" onload="init(evt)" viewBox="0 0 1200 390" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="390.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="373" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="373" > </text>
<g id="frames">
<g >
<title>vm_mmap_pgoff (846,940 samples, 0.03%)</title><rect x="10.0" y="181" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="13.00" y="191.5" ></text>
</g>
<g >
<title>kmalloc_slab (13,405,392 samples, 0.46%)</title><rect x="764.7" y="165" width="5.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="767.71" y="175.5" ></text>
</g>
<g >
<title>vma_link (671,625 samples, 0.02%)</title><rect x="10.3" y="117" width="0.3" height="15.0" fill="rgb(229,110,26)" rx="2" ry="2" />
<text  x="13.34" y="127.5" ></text>
</g>
<g >
<title>_dl_start_user (872,335 samples, 0.03%)</title><rect x="1188.2" y="309" width="0.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1191.23" y="319.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (843,196 samples, 0.03%)</title><rect x="225.7" y="181" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="228.69" y="191.5" ></text>
</g>
<g >
<title>rep_movs_alternative (23,298,997 samples, 0.79%)</title><rect x="619.5" y="213" width="9.3" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="622.47" y="223.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (8,152,622 samples, 0.28%)</title><rect x="761.1" y="149" width="3.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="764.08" y="159.5" ></text>
</g>
<g >
<title>__cond_resched (5,036,865 samples, 0.17%)</title><rect x="578.0" y="181" width="2.1" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="581.04" y="191.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_array (2,559,482 samples, 0.09%)</title><rect x="417.3" y="213" width="1.0" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="420.30" y="223.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (853,387 samples, 0.03%)</title><rect x="1039.8" y="165" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1042.80" y="175.5" ></text>
</g>
<g >
<title>__split_vma (846,940 samples, 0.03%)</title><rect x="10.0" y="101" width="0.3" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="13.00" y="111.5" ></text>
</g>
<g >
<title>timekeeping_advance (853,699 samples, 0.03%)</title><rect x="38.4" y="133" width="0.4" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="41.44" y="143.5" ></text>
</g>
<g >
<title>__x64_sys_bpf (853,732 samples, 0.03%)</title><rect x="10.7" y="245" width="0.4" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="13.71" y="255.5" ></text>
</g>
<g >
<title>__sys_bpf (9,808,927 samples, 0.33%)</title><rect x="235.0" y="245" width="4.0" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="238.02" y="255.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (1,680,523 samples, 0.06%)</title><rect x="1039.5" y="197" width="0.6" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1042.47" y="207.5" ></text>
</g>
<g >
<title>map_vdso (671,625 samples, 0.02%)</title><rect x="10.3" y="181" width="0.3" height="15.0" fill="rgb(227,103,24)" rx="2" ry="2" />
<text  x="13.34" y="191.5" ></text>
</g>
<g >
<title>should_failslab (855,982 samples, 0.03%)</title><rect x="764.4" y="149" width="0.3" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="767.36" y="159.5" ></text>
</g>
<g >
<title>__virt_addr_valid (61,505,722 samples, 2.10%)</title><rect x="681.9" y="181" width="24.8" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="684.90" y="191.5" >_..</text>
</g>
<g >
<title>[unknown] (2,629,420 samples, 0.09%)</title><rect x="10.0" y="309" width="1.1" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>__x64_sys_bpf (14,930,217 samples, 0.51%)</title><rect x="220.0" y="261" width="6.0" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="223.02" y="271.5" ></text>
</g>
<g >
<title>__check_heap_object (44,319,102 samples, 1.51%)</title><rect x="353.5" y="197" width="17.9" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="356.52" y="207.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (5,048,040 samples, 0.17%)</title><rect x="595.9" y="165" width="2.0" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="598.89" y="175.5" ></text>
</g>
<g >
<title>bump_rlimit_memlock (872,524 samples, 0.03%)</title><rect x="1188.6" y="309" width="0.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="1191.58" y="319.5" ></text>
</g>
<g >
<title>exit_mmap (854,120 samples, 0.03%)</title><rect x="1188.9" y="197" width="0.4" height="15.0" fill="rgb(236,143,34)" rx="2" ry="2" />
<text  x="1191.94" y="207.5" ></text>
</g>
<g >
<title>do_syscall_64 (1,728,982 samples, 0.06%)</title><rect x="1189.3" y="277" width="0.7" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1192.28" y="287.5" ></text>
</g>
<g >
<title>__check_heap_object (50,958,516 samples, 1.74%)</title><rect x="661.4" y="181" width="20.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="664.39" y="191.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (853,699 samples, 0.03%)</title><rect x="38.4" y="165" width="0.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="41.44" y="175.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (17,646,144 samples, 0.60%)</title><rect x="504.0" y="213" width="7.1" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="507.04" y="223.5" ></text>
</g>
<g >
<title>__rcu_read_lock (283,315 samples, 0.01%)</title><rect x="443.6" y="197" width="0.1" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="446.61" y="207.5" ></text>
</g>
<g >
<title>dl_main (872,335 samples, 0.03%)</title><rect x="1188.2" y="277" width="0.4" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1191.23" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (872,335 samples, 0.03%)</title><rect x="1188.2" y="229" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1191.23" y="239.5" ></text>
</g>
<g >
<title>syscall_exit_work (1,699,086 samples, 0.06%)</title><rect x="1083.9" y="245" width="0.6" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1086.86" y="255.5" ></text>
</g>
<g >
<title>map_create (859,147 samples, 0.03%)</title><rect x="1189.6" y="229" width="0.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1192.63" y="239.5" ></text>
</g>
<g >
<title>vmemdup_user (3,115,453 samples, 0.11%)</title><rect x="822.4" y="229" width="1.3" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="825.43" y="239.5" ></text>
</g>
<g >
<title>__fget_light (49,087,598 samples, 1.67%)</title><rect x="387.2" y="197" width="19.8" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="390.21" y="207.5" ></text>
</g>
<g >
<title>bpf_map_area_alloc (859,147 samples, 0.03%)</title><rect x="1189.6" y="197" width="0.4" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1192.63" y="207.5" ></text>
</g>
<g >
<title>do_jit (853,732 samples, 0.03%)</title><rect x="10.7" y="165" width="0.4" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="13.71" y="175.5" ></text>
</g>
<g >
<title>syscall_exit_work (136,368,081 samples, 4.65%)</title><rect x="1029.0" y="229" width="54.9" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1031.98" y="239.5" >sysca..</text>
</g>
<g >
<title>kmalloc_slab (7,269,455 samples, 0.25%)</title><rect x="780.3" y="181" width="3.0" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="783.33" y="191.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (843,196 samples, 0.03%)</title><rect x="225.7" y="149" width="0.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="228.69" y="159.5" ></text>
</g>
<g >
<title>_compound_head (854,120 samples, 0.03%)</title><rect x="1188.9" y="149" width="0.4" height="15.0" fill="rgb(225,94,22)" rx="2" ry="2" />
<text  x="1191.94" y="159.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (3,644,031 samples, 0.12%)</title><rect x="525.8" y="197" width="1.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="528.76" y="207.5" ></text>
</g>
<g >
<title>__x64_sys_mmap (846,940 samples, 0.03%)</title><rect x="10.0" y="213" width="0.3" height="15.0" fill="rgb(223,83,19)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (9,193,194 samples, 0.31%)</title><rect x="1096.6" y="277" width="3.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1099.63" y="287.5" ></text>
</g>
<g >
<title>unmap_vmas (854,120 samples, 0.03%)</title><rect x="1188.9" y="181" width="0.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1191.94" y="191.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (846,940 samples, 0.03%)</title><rect x="10.0" y="245" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>bpf_prog_select_runtime (853,732 samples, 0.03%)</title><rect x="10.7" y="197" width="0.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="13.71" y="207.5" ></text>
</g>
<g >
<title>alloc_pages (859,147 samples, 0.03%)</title><rect x="1189.6" y="149" width="0.4" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1192.63" y="159.5" ></text>
</g>
<g >
<title>setup_arg_pages (257,123 samples, 0.01%)</title><rect x="10.6" y="197" width="0.1" height="15.0" fill="rgb(222,82,19)" rx="2" ry="2" />
<text  x="13.61" y="207.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1,728,982 samples, 0.06%)</title><rect x="1189.3" y="293" width="0.7" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1192.28" y="303.5" ></text>
</g>
<g >
<title>map_benchmark (2,931,755,808 samples, 100.00%)</title><rect x="10.0" y="325" width="1180.0" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="13.00" y="335.5" >map_benchmark</text>
</g>
<g >
<title>try_charge_memcg (859,147 samples, 0.03%)</title><rect x="1189.6" y="117" width="0.4" height="15.0" fill="rgb(210,27,6)" rx="2" ry="2" />
<text  x="1192.63" y="127.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (2,802,999 samples, 0.10%)</title><rect x="1027.3" y="213" width="1.1" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1030.29" y="223.5" ></text>
</g>
<g >
<title>mntput (2,792,179 samples, 0.10%)</title><rect x="1064.8" y="181" width="1.1" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1067.80" y="191.5" ></text>
</g>
<g >
<title>__cond_resched (1,942,284 samples, 0.07%)</title><rect x="730.0" y="165" width="0.8" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="733.03" y="175.5" ></text>
</g>
<g >
<title>do_syscall_64 (928,748 samples, 0.03%)</title><rect x="10.3" y="277" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.34" y="287.5" ></text>
</g>
<g >
<title>task_work_run (850,474 samples, 0.03%)</title><rect x="57.1" y="197" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="60.06" y="207.5" ></text>
</g>
<g >
<title>mas_mab_cp (872,335 samples, 0.03%)</title><rect x="1188.2" y="53" width="0.4" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="1191.23" y="63.5" ></text>
</g>
<g >
<title>kfree (3,387,312 samples, 0.12%)</title><rect x="511.1" y="213" width="1.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="514.14" y="223.5" ></text>
</g>
<g >
<title>unroll_tree_refs (6,346,612 samples, 0.22%)</title><rect x="1072.9" y="181" width="2.5" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1075.86" y="191.5" ></text>
</g>
<g >
<title>unroll_tree_refs (1,944,714 samples, 0.07%)</title><rect x="1081.8" y="197" width="0.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1084.83" y="207.5" ></text>
</g>
<g >
<title>__virt_addr_valid (3,320,212 samples, 0.11%)</title><rect x="710.2" y="197" width="1.3" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="713.17" y="207.5" ></text>
</g>
<g >
<title>__kmem_cache_free (69,157,045 samples, 2.36%)</title><rect x="534.1" y="181" width="27.8" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="537.06" y="191.5" >_..</text>
</g>
<g >
<title>mmput (854,120 samples, 0.03%)</title><rect x="1188.9" y="229" width="0.4" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="1191.94" y="239.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (853,699 samples, 0.03%)</title><rect x="38.4" y="277" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="41.44" y="287.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (853,387 samples, 0.03%)</title><rect x="1039.8" y="37" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1042.80" y="47.5" ></text>
</g>
<g >
<title>kfree (7,861,925 samples, 0.27%)</title><rect x="1061.6" y="181" width="3.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1064.63" y="191.5" ></text>
</g>
<g >
<title>__check_heap_object (8,681,839 samples, 0.30%)</title><rect x="313.0" y="213" width="3.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="315.95" y="223.5" ></text>
</g>
<g >
<title>check_stack_object (3,916,763 samples, 0.13%)</title><rect x="714.3" y="197" width="1.6" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="717.34" y="207.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (84,221,006 samples, 2.87%)</title><rect x="730.8" y="165" width="33.9" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="733.81" y="175.5" >__..</text>
</g>
<g >
<title>mas_store_prealloc (872,335 samples, 0.03%)</title><rect x="1188.2" y="117" width="0.4" height="15.0" fill="rgb(223,85,20)" rx="2" ry="2" />
<text  x="1191.23" y="127.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (582,765,599 samples, 19.88%)</title><rect x="849.3" y="245" width="234.6" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="852.31" y="255.5" >syscall_exit_to_user_mode</text>
</g>
<g >
<title>mmap64 (846,940 samples, 0.03%)</title><rect x="10.0" y="261" width="0.3" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>__x86_indirect_thunk_array (1,701,583 samples, 0.06%)</title><rect x="226.0" y="261" width="0.7" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="229.03" y="271.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (872,335 samples, 0.03%)</title><rect x="1188.2" y="293" width="0.4" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1191.23" y="303.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (850,474 samples, 0.03%)</title><rect x="57.1" y="277" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="60.06" y="287.5" ></text>
</g>
<g >
<title>__fdget (49,087,598 samples, 1.67%)</title><rect x="387.2" y="213" width="19.8" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="390.21" y="223.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (850,474 samples, 0.03%)</title><rect x="57.1" y="261" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="60.06" y="271.5" ></text>
</g>
<g >
<title>__sys_bpf (853,732 samples, 0.03%)</title><rect x="10.7" y="229" width="0.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="13.71" y="239.5" ></text>
</g>
<g >
<title>__kmalloc_node (135,118,251 samples, 4.61%)</title><rect x="722.2" y="181" width="54.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="725.16" y="191.5" >__kma..</text>
</g>
<g >
<title>bpf_map_copy_value (1,140,261 samples, 0.04%)</title><rect x="792.5" y="229" width="0.4" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="795.46" y="239.5" ></text>
</g>
<g >
<title>__kmalloc_node (99,596,400 samples, 3.40%)</title><rect x="567.9" y="197" width="40.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="570.87" y="207.5" >__k..</text>
</g>
<g >
<title>__audit_syscall_entry (6,721,639 samples, 0.23%)</title><rect x="835.4" y="229" width="2.7" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="838.37" y="239.5" ></text>
</g>
<g >
<title>memcmp (18,083,079 samples, 0.62%)</title><rect x="473.1" y="181" width="7.3" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="476.12" y="191.5" ></text>
</g>
<g >
<title>memcpy_orig (7,831,578 samples, 0.27%)</title><rect x="611.0" y="213" width="3.2" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="614.02" y="223.5" ></text>
</g>
<g >
<title>path_put (5,030,711 samples, 0.17%)</title><rect x="1079.8" y="197" width="2.0" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1082.80" y="207.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (843,196 samples, 0.03%)</title><rect x="225.7" y="85" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="228.69" y="95.5" ></text>
</g>
<g >
<title>kmalloc_slab (3,658,387 samples, 0.12%)</title><rect x="609.5" y="197" width="1.5" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="612.55" y="207.5" ></text>
</g>
<g >
<title>migrate_enable (7,259,615 samples, 0.25%)</title><rect x="616.5" y="213" width="3.0" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="619.54" y="223.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (853,699 samples, 0.03%)</title><rect x="38.4" y="245" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="41.44" y="255.5" ></text>
</g>
<g >
<title>bpf_map_value_size (18,153,217 samples, 0.62%)</title><rect x="792.9" y="229" width="7.3" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="795.92" y="239.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (5,318,704 samples, 0.18%)</title><rect x="770.1" y="165" width="2.1" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="773.10" y="175.5" ></text>
</g>
<g >
<title>do_exit (854,120 samples, 0.03%)</title><rect x="1188.9" y="245" width="0.4" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1191.94" y="255.5" ></text>
</g>
<g >
<title>__x64_sys_mprotect (872,335 samples, 0.03%)</title><rect x="1188.2" y="213" width="0.4" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1191.23" y="223.5" ></text>
</g>
<g >
<title>ksys_mmap_pgoff (846,940 samples, 0.03%)</title><rect x="10.0" y="197" width="0.3" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="13.00" y="207.5" ></text>
</g>
<g >
<title>dput (6,160,500 samples, 0.21%)</title><rect x="1059.2" y="181" width="2.4" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1062.15" y="191.5" ></text>
</g>
<g >
<title>audit_reset_context (87,620,793 samples, 2.99%)</title><rect x="1040.1" y="197" width="35.3" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1043.15" y="207.5" >au..</text>
</g>
<g >
<title>tick_sched_timer (853,699 samples, 0.03%)</title><rect x="38.4" y="197" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="41.44" y="207.5" ></text>
</g>
<g >
<title>do_syscall_64 (846,940 samples, 0.03%)</title><rect x="10.0" y="229" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (2,576,352,829 samples, 87.88%)</title><rect x="59.7" y="277" width="1036.9" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="62.70" y="287.5" >entry_SYSCALL_64</text>
</g>
<g >
<title>should_failslab (1,376,085 samples, 0.05%)</title><rect x="607.4" y="181" width="0.6" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="610.40" y="191.5" ></text>
</g>
<g >
<title>__vmalloc_node_range (859,147 samples, 0.03%)</title><rect x="1189.6" y="165" width="0.4" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1192.63" y="175.5" ></text>
</g>
<g >
<title>vma_complete (872,335 samples, 0.03%)</title><rect x="1188.2" y="133" width="0.4" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1191.23" y="143.5" ></text>
</g>
<g >
<title>bpf_check_uarg_tail_zero (10,061,415 samples, 0.34%)</title><rect x="788.4" y="229" width="4.1" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="791.41" y="239.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (3,962,271 samples, 0.14%)</title><rect x="608.0" y="197" width="1.5" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="610.95" y="207.5" ></text>
</g>
<g >
<title>kvfree (122,717,951 samples, 4.19%)</title><rect x="512.5" y="213" width="49.4" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="515.50" y="223.5" >kvfree</text>
</g>
<g >
<title>__sys_bpf (1,728,982 samples, 0.06%)</title><rect x="1189.3" y="245" width="0.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1192.28" y="255.5" ></text>
</g>
<g >
<title>shift_arg_pages (257,123 samples, 0.01%)</title><rect x="10.6" y="181" width="0.1" height="15.0" fill="rgb(245,187,44)" rx="2" ry="2" />
<text  x="13.61" y="191.5" ></text>
</g>
<g >
<title>syscall (1,728,982 samples, 0.06%)</title><rect x="1189.3" y="309" width="0.7" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1192.28" y="319.5" ></text>
</g>
<g >
<title>snprintf (869,835 samples, 0.03%)</title><rect x="1189.3" y="197" width="0.3" height="15.0" fill="rgb(253,220,52)" rx="2" ry="2" />
<text  x="1192.28" y="207.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (853,387 samples, 0.03%)</title><rect x="1039.8" y="101" width="0.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1042.80" y="111.5" ></text>
</g>
<g >
<title>__virt_addr_valid (28,436,834 samples, 0.97%)</title><rect x="371.4" y="197" width="11.4" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="374.36" y="207.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (853,387 samples, 0.03%)</title><rect x="1039.8" y="181" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1042.80" y="191.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (114,728,493 samples, 3.91%)</title><rect x="1036.4" y="213" width="46.2" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1039.43" y="223.5" >__au..</text>
</g>
<g >
<title>htab_map_hash (40,240,808 samples, 1.37%)</title><rect x="443.7" y="197" width="16.2" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="446.72" y="207.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (43,290,045 samples, 1.48%)</title><rect x="831.9" y="245" width="17.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="834.89" y="255.5" ></text>
</g>
<g >
<title>bpf_map_copy_value (159,074,626 samples, 5.43%)</title><rect x="425.5" y="213" width="64.0" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="428.52" y="223.5" >bpf_map..</text>
</g>
<g >
<title>mmap_region (846,940 samples, 0.03%)</title><rect x="10.0" y="149" width="0.3" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="13.00" y="159.5" ></text>
</g>
<g >
<title>lookup_nulls_elem_raw (6,768,508 samples, 0.23%)</title><rect x="480.4" y="197" width="2.7" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="483.40" y="207.5" ></text>
</g>
<g >
<title>__sys_bpf (1,342,246,840 samples, 45.78%)</title><rect x="245.7" y="229" width="540.3" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="248.73" y="239.5" >__sys_bpf</text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (843,196 samples, 0.03%)</title><rect x="225.7" y="229" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="228.69" y="239.5" ></text>
</g>
<g >
<title>should_failslab (1,687,414 samples, 0.06%)</title><rect x="775.9" y="165" width="0.6" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="778.86" y="175.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (11,498,056 samples, 0.39%)</title><rect x="1023.8" y="229" width="4.6" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1026.79" y="239.5" ></text>
</g>
<g >
<title>security_bpf (3,080,035 samples, 0.11%)</title><rect x="821.2" y="229" width="1.2" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="824.20" y="239.5" ></text>
</g>
<g >
<title>kvmalloc_node (122,061,621 samples, 4.16%)</title><rect x="561.9" y="213" width="49.1" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="564.89" y="223.5" >kvma..</text>
</g>
<g >
<title>split_vma (872,335 samples, 0.03%)</title><rect x="1188.2" y="165" width="0.4" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="1191.23" y="175.5" ></text>
</g>
<g >
<title>tick_sched_timer (843,196 samples, 0.03%)</title><rect x="225.7" y="165" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="228.69" y="175.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (928,748 samples, 0.03%)</title><rect x="10.3" y="245" width="0.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="13.34" y="255.5" ></text>
</g>
<g >
<title>security_bpf (14,238,930 samples, 0.49%)</title><rect x="628.8" y="213" width="5.8" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="631.84" y="223.5" ></text>
</g>
<g >
<title>_copy_to_user (3,866,187 samples, 0.13%)</title><rect x="786.9" y="229" width="1.5" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="789.86" y="239.5" ></text>
</g>
<g >
<title>memset_orig (7,770,515 samples, 0.27%)</title><rect x="604.3" y="181" width="3.1" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="607.27" y="191.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (853,387 samples, 0.03%)</title><rect x="1039.8" y="85" width="0.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="1042.80" y="95.5" ></text>
</g>
<g >
<title>vma_expand (257,123 samples, 0.01%)</title><rect x="10.6" y="165" width="0.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="13.61" y="175.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (9,227,197 samples, 0.31%)</title><rect x="828.2" y="245" width="3.7" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="831.17" y="255.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (843,196 samples, 0.03%)</title><rect x="225.7" y="213" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="228.69" y="223.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,137,945,596 samples, 72.92%)</title><rect x="226.7" y="261" width="860.5" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="229.71" y="271.5" >do_syscall_64</text>
</g>
<g >
<title>update_wall_time (853,387 samples, 0.03%)</title><rect x="1039.8" y="69" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="1042.80" y="79.5" ></text>
</g>
<g >
<title>__fget_light (8,623,620 samples, 0.29%)</title><rect x="407.0" y="213" width="3.4" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="409.97" y="223.5" ></text>
</g>
<g >
<title>bpf_prog_load (853,732 samples, 0.03%)</title><rect x="10.7" y="213" width="0.4" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="13.71" y="223.5" ></text>
</g>
<g >
<title>__x64_sys_bpf (1,452,791,112 samples, 49.55%)</title><rect x="239.0" y="245" width="584.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="241.97" y="255.5" >__x64_sys_bpf</text>
</g>
<g >
<title>kvmalloc_node (8,918,833 samples, 0.30%)</title><rect x="802.0" y="229" width="3.6" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="805.04" y="239.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (3,106,243 samples, 0.11%)</title><rect x="603.0" y="181" width="1.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="606.02" y="191.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (853,387 samples, 0.03%)</title><rect x="1039.8" y="149" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1042.80" y="159.5" ></text>
</g>
<g >
<title>syscall (2,852,294,464 samples, 97.29%)</title><rect x="38.8" y="293" width="1148.0" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="41.78" y="303.5" >syscall</text>
</g>
<g >
<title>kfree (86,126,165 samples, 2.94%)</title><rect x="527.2" y="197" width="34.7" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="530.23" y="207.5" >kf..</text>
</g>
<g >
<title>mas_wr_store_entry.isra.0 (872,335 samples, 0.03%)</title><rect x="1188.2" y="101" width="0.4" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="1191.23" y="111.5" ></text>
</g>
<g >
<title>check_stack_object (27,636,589 samples, 0.94%)</title><rect x="489.5" y="213" width="11.2" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="492.54" y="223.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (853,699 samples, 0.03%)</title><rect x="38.4" y="229" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="41.44" y="239.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (843,196 samples, 0.03%)</title><rect x="225.7" y="245" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="228.69" y="255.5" ></text>
</g>
<g >
<title>mas_wr_bnode (872,335 samples, 0.03%)</title><rect x="1188.2" y="69" width="0.4" height="15.0" fill="rgb(248,198,47)" rx="2" ry="2" />
<text  x="1191.23" y="79.5" ></text>
</g>
<g >
<title>main (36,381,151 samples, 1.24%)</title><rect x="24.1" y="293" width="14.7" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="27.14" y="303.5" ></text>
</g>
<g >
<title>do_syscall_64 (853,732 samples, 0.03%)</title><rect x="10.7" y="261" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.71" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (854,120 samples, 0.03%)</title><rect x="1188.9" y="293" width="0.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1191.94" y="303.5" ></text>
</g>
<g >
<title>[vmlinux] (854,120 samples, 0.03%)</title><rect x="1188.9" y="277" width="0.4" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="1191.94" y="287.5" ></text>
</g>
<g >
<title>__kmem_cache_free (21,458,611 samples, 0.73%)</title><rect x="517.1" y="197" width="8.7" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="520.13" y="207.5" ></text>
</g>
<g >
<title>htab_map_lookup_elem (50,880,209 samples, 1.74%)</title><rect x="459.9" y="197" width="20.5" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="462.92" y="207.5" ></text>
</g>
<g >
<title>mas_wr_modify (872,335 samples, 0.03%)</title><rect x="1188.2" y="85" width="0.4" height="15.0" fill="rgb(221,75,18)" rx="2" ry="2" />
<text  x="1191.23" y="95.5" ></text>
</g>
<g >
<title>rep_movs_alternative (6,729,529 samples, 0.23%)</title><rect x="783.3" y="197" width="2.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="786.25" y="207.5" ></text>
</g>
<g >
<title>kvfree (4,512,513 samples, 0.15%)</title><rect x="800.2" y="229" width="1.8" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="803.23" y="239.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (853,699 samples, 0.03%)</title><rect x="38.4" y="117" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="41.44" y="127.5" ></text>
</g>
<g >
<title>vmemdup_user (376,133,741 samples, 12.83%)</title><rect x="634.6" y="213" width="151.4" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="637.57" y="223.5" >vmemdup_user</text>
</g>
<g >
<title>migrate_disable (5,888,531 samples, 0.20%)</title><rect x="614.2" y="213" width="2.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="617.17" y="223.5" ></text>
</g>
<g >
<title>unmap_single_vma (854,120 samples, 0.03%)</title><rect x="1188.9" y="165" width="0.4" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="1191.94" y="175.5" ></text>
</g>
<g >
<title>irqentry_exit (850,474 samples, 0.03%)</title><rect x="57.1" y="245" width="0.3" height="15.0" fill="rgb(219,66,15)" rx="2" ry="2" />
<text  x="60.06" y="255.5" ></text>
</g>
<g >
<title>__check_object_size (175,819,722 samples, 6.00%)</title><rect x="316.4" y="213" width="70.8" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="319.45" y="223.5" >__check..</text>
</g>
<g >
<title>__mmput (854,120 samples, 0.03%)</title><rect x="1188.9" y="213" width="0.4" height="15.0" fill="rgb(249,203,48)" rx="2" ry="2" />
<text  x="1191.94" y="223.5" ></text>
</g>
<g >
<title>_install_special_mapping (671,625 samples, 0.02%)</title><rect x="10.3" y="165" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="13.34" y="175.5" ></text>
</g>
<g >
<title>vma_adjust_trans_huge (846,940 samples, 0.03%)</title><rect x="10.0" y="85" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="13.00" y="95.5" ></text>
</g>
<g >
<title>__libc_start_call_main (2,924,798,427 samples, 99.76%)</title><rect x="11.1" y="309" width="1177.1" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="14.06" y="319.5" >__libc_start_call_main</text>
</g>
<g >
<title>syscall_exit_to_user_mode (11,241,061 samples, 0.38%)</title><rect x="1092.1" y="261" width="4.5" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1095.10" y="271.5" ></text>
</g>
<g >
<title>__audit_syscall_entry (5,312,935 samples, 0.18%)</title><rect x="847.2" y="213" width="2.1" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="850.17" y="223.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (843,196 samples, 0.03%)</title><rect x="225.7" y="133" width="0.3" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="228.69" y="143.5" ></text>
</g>
<g >
<title>htab_map_alloc (859,147 samples, 0.03%)</title><rect x="1189.6" y="213" width="0.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1192.63" y="223.5" ></text>
</g>
<g >
<title>lookup_nulls_elem_raw (14,815,637 samples, 0.51%)</title><rect x="467.2" y="181" width="5.9" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="470.16" y="191.5" ></text>
</g>
<g >
<title>tick_sched_timer (853,387 samples, 0.03%)</title><rect x="1039.8" y="117" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="1042.80" y="127.5" ></text>
</g>
<g >
<title>should_failslab (856,439 samples, 0.03%)</title><rect x="597.9" y="165" width="0.4" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="600.92" y="175.5" ></text>
</g>
<g >
<title>__check_object_size (147,778,584 samples, 5.04%)</title><rect x="647.5" y="197" width="59.5" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="650.51" y="207.5" >__chec..</text>
</g>
<g >
<title>irqentry_exit_to_user_mode (850,474 samples, 0.03%)</title><rect x="57.1" y="229" width="0.3" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="60.06" y="239.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (829,966 samples, 0.03%)</title><rect x="706.7" y="181" width="0.3" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="709.66" y="191.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (6,582,889 samples, 0.22%)</title><rect x="1084.5" y="245" width="2.7" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1087.55" y="255.5" ></text>
</g>
<g >
<title>do_mprotect_pkey (872,335 samples, 0.03%)</title><rect x="1188.2" y="197" width="0.4" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1191.23" y="207.5" ></text>
</g>
<g >
<title>vsnprintf (869,835 samples, 0.03%)</title><rect x="1189.3" y="181" width="0.3" height="15.0" fill="rgb(240,164,39)" rx="2" ry="2" />
<text  x="1192.28" y="191.5" ></text>
</g>
<g >
<title>insert_vm_struct (671,625 samples, 0.02%)</title><rect x="10.3" y="133" width="0.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="13.34" y="143.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (853,387 samples, 0.03%)</title><rect x="1039.8" y="133" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="1042.80" y="143.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (214,780,078 samples, 7.33%)</title><rect x="1100.3" y="277" width="86.5" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1103.33" y="287.5" >syscall_re..</text>
</g>
<g >
<title>__kmem_cache_alloc_node (45,232,821 samples, 1.54%)</title><rect x="580.1" y="181" width="18.2" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="583.06" y="191.5" ></text>
</g>
<g >
<title>task_mm_cid_work (850,474 samples, 0.03%)</title><rect x="57.1" y="181" width="0.3" height="15.0" fill="rgb(226,101,24)" rx="2" ry="2" />
<text  x="60.06" y="191.5" ></text>
</g>
<g >
<title>__virt_addr_valid (11,747,935 samples, 0.40%)</title><rect x="412.6" y="213" width="4.7" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="415.57" y="223.5" ></text>
</g>
<g >
<title>syscall@plt (3,627,395 samples, 0.12%)</title><rect x="1186.8" y="293" width="1.4" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1189.77" y="303.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (27,910,327 samples, 0.95%)</title><rect x="838.1" y="229" width="11.2" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="841.08" y="239.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (843,196 samples, 0.03%)</title><rect x="225.7" y="197" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="228.69" y="207.5" ></text>
</g>
<g >
<title>path_put (17,229,753 samples, 0.59%)</title><rect x="1065.9" y="181" width="7.0" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1068.92" y="191.5" ></text>
</g>
<g >
<title>__kmalloc_node (7,885,399 samples, 0.27%)</title><rect x="707.0" y="197" width="3.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="709.99" y="207.5" ></text>
</g>
<g >
<title>__check_object_size (10,368,812 samples, 0.35%)</title><rect x="239.0" y="229" width="4.1" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="241.97" y="239.5" ></text>
</g>
<g >
<title>bprm_execve (928,748 samples, 0.03%)</title><rect x="10.3" y="229" width="0.4" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="13.34" y="239.5" ></text>
</g>
<g >
<title>audit_reset_context (3,115,113 samples, 0.11%)</title><rect x="1082.6" y="213" width="1.3" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1085.61" y="223.5" ></text>
</g>
<g >
<title>vma_prepare (257,123 samples, 0.01%)</title><rect x="10.6" y="149" width="0.1" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="13.61" y="159.5" ></text>
</g>
<g >
<title>check_stack_object (10,958,341 samples, 0.37%)</title><rect x="382.8" y="197" width="4.4" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="385.80" y="207.5" ></text>
</g>
<g >
<title>[unknown] (846,940 samples, 0.03%)</title><rect x="10.0" y="293" width="0.3" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>_copy_from_user (2,228,708 samples, 0.08%)</title><rect x="786.0" y="229" width="0.9" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="788.96" y="239.5" ></text>
</g>
<g >
<title>kvmalloc_node (165,609,999 samples, 5.65%)</title><rect x="716.6" y="197" width="66.7" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="719.60" y="207.5" >kvmallo..</text>
</g>
<g >
<title>tick_sched_do_timer (853,699 samples, 0.03%)</title><rect x="38.4" y="181" width="0.4" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="41.44" y="191.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (872,335 samples, 0.03%)</title><rect x="1188.2" y="245" width="0.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1191.23" y="255.5" ></text>
</g>
<g >
<title>_dl_map_object (846,940 samples, 0.03%)</title><rect x="10.0" y="277" width="0.3" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>__fdget (6,435,340 samples, 0.22%)</title><rect x="243.1" y="229" width="2.6" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="246.14" y="239.5" ></text>
</g>
<g >
<title>amd_clear_divider (11,141,629 samples, 0.38%)</title><rect x="823.7" y="245" width="4.5" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="826.69" y="255.5" ></text>
</g>
<g >
<title>memchr_inv (38,663,498 samples, 1.32%)</title><rect x="805.6" y="229" width="15.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="808.63" y="239.5" ></text>
</g>
<g >
<title>update_wall_time (853,699 samples, 0.03%)</title><rect x="38.4" y="149" width="0.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="41.44" y="159.5" ></text>
</g>
<g >
<title>bpf_map_lookup_elem (32,495,417 samples, 1.11%)</title><rect x="11.1" y="293" width="13.0" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.06" y="303.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (9,407,678 samples, 0.32%)</title><rect x="776.5" y="181" width="3.8" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="779.54" y="191.5" ></text>
</g>
<g >
<title>_copy_from_user (12,235,159 samples, 0.42%)</title><rect x="418.3" y="213" width="5.0" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="421.33" y="223.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (928,748 samples, 0.03%)</title><rect x="10.3" y="293" width="0.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="13.34" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_execve (928,748 samples, 0.03%)</title><rect x="10.3" y="261" width="0.4" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="13.34" y="271.5" ></text>
</g>
<g >
<title>__alloc_pages (859,147 samples, 0.03%)</title><rect x="1189.6" y="133" width="0.4" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1192.63" y="143.5" ></text>
</g>
<g >
<title>__install_special_mapping (671,625 samples, 0.02%)</title><rect x="10.3" y="149" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="13.34" y="159.5" ></text>
</g>
<g >
<title>all (2,931,818,062 samples, 100%)</title><rect x="10.0" y="341" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>_copy_from_user (7,041,406 samples, 0.24%)</title><rect x="711.5" y="197" width="2.8" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="714.50" y="207.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (1,698,470 samples, 0.06%)</title><rect x="715.9" y="197" width="0.7" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="718.91" y="207.5" ></text>
</g>
<g >
<title>__split_vma (872,335 samples, 0.03%)</title><rect x="1188.2" y="149" width="0.4" height="15.0" fill="rgb(237,150,36)" rx="2" ry="2" />
<text  x="1191.23" y="159.5" ></text>
</g>
<g >
<title>bpf_int_jit_compile (853,732 samples, 0.03%)</title><rect x="10.7" y="181" width="0.4" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="13.71" y="191.5" ></text>
</g>
<g >
<title>syscall (853,732 samples, 0.03%)</title><rect x="10.7" y="293" width="0.4" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="13.71" y="303.5" ></text>
</g>
<g >
<title>do_group_exit (854,120 samples, 0.03%)</title><rect x="1188.9" y="261" width="0.4" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1191.94" y="271.5" ></text>
</g>
<g >
<title>arch_setup_additional_pages (671,625 samples, 0.02%)</title><rect x="10.3" y="197" width="0.3" height="15.0" fill="rgb(236,146,35)" rx="2" ry="2" />
<text  x="13.34" y="207.5" ></text>
</g>
<g >
<title>__bpf_map_area_alloc (859,147 samples, 0.03%)</title><rect x="1189.6" y="181" width="0.4" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1192.63" y="191.5" ></text>
</g>
<g >
<title>do_vmi_munmap (846,940 samples, 0.03%)</title><rect x="10.0" y="133" width="0.3" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.00" y="143.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (2,838,547 samples, 0.10%)</title><rect x="1022.6" y="229" width="1.2" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1025.64" y="239.5" ></text>
</g>
<g >
<title>bpf_prog_load (869,835 samples, 0.03%)</title><rect x="1189.3" y="229" width="0.3" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="1192.28" y="239.5" ></text>
</g>
<g >
<title>memset_orig (8,986,318 samples, 0.31%)</title><rect x="772.2" y="165" width="3.7" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="775.24" y="175.5" ></text>
</g>
<g >
<title>load_elf_binary (928,748 samples, 0.03%)</title><rect x="10.3" y="213" width="0.4" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="13.34" y="223.5" ></text>
</g>
<g >
<title>_copy_to_user (5,620,804 samples, 0.19%)</title><rect x="423.3" y="213" width="2.2" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="426.25" y="223.5" ></text>
</g>
<g >
<title>kmalloc_slab (11,814,188 samples, 0.40%)</title><rect x="598.3" y="181" width="4.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="601.27" y="191.5" ></text>
</g>
<g >
<title>__x64_sys_bpf (1,728,982 samples, 0.06%)</title><rect x="1189.3" y="261" width="0.7" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.28" y="271.5" ></text>
</g>
<g >
<title>bpf_prog_kallsyms_add (869,835 samples, 0.03%)</title><rect x="1189.3" y="213" width="0.3" height="15.0" fill="rgb(211,29,6)" rx="2" ry="2" />
<text  x="1192.28" y="223.5" ></text>
</g>
<g >
<title>update_wall_time (843,196 samples, 0.03%)</title><rect x="225.7" y="117" width="0.3" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="228.69" y="127.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (854,120 samples, 0.03%)</title><rect x="1188.9" y="309" width="0.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1191.94" y="319.5" ></text>
</g>
<g >
<title>migrate_enable (15,946,858 samples, 0.54%)</title><rect x="483.1" y="197" width="6.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="486.12" y="207.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (2,212,204 samples, 0.08%)</title><rect x="411.7" y="213" width="0.9" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="414.68" y="223.5" ></text>
</g>
<g >
<title>do_vmi_align_munmap (846,940 samples, 0.03%)</title><rect x="10.0" y="117" width="0.3" height="15.0" fill="rgb(211,29,7)" rx="2" ry="2" />
<text  x="13.00" y="127.5" ></text>
</g>
<g >
<title>do_syscall_64 (5,635,477 samples, 0.19%)</title><rect x="57.4" y="277" width="2.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="60.43" y="287.5" ></text>
</g>
<g >
<title>__kmalloc_node (3,084,141 samples, 0.11%)</title><rect x="410.4" y="213" width="1.3" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="413.44" y="223.5" ></text>
</g>
<g >
<title>__check_heap_object (11,214,479 samples, 0.38%)</title><rect x="643.0" y="197" width="4.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="646.00" y="207.5" ></text>
</g>
<g >
<title>mprotect (872,335 samples, 0.03%)</title><rect x="1188.2" y="261" width="0.4" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1191.23" y="271.5" ></text>
</g>
<g >
<title>down_write (671,625 samples, 0.02%)</title><rect x="10.3" y="101" width="0.3" height="15.0" fill="rgb(222,79,18)" rx="2" ry="2" />
<text  x="13.34" y="111.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (1,398,750 samples, 0.05%)</title><rect x="1028.4" y="229" width="0.6" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1031.41" y="239.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (850,474 samples, 0.03%)</title><rect x="57.1" y="213" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="60.06" y="223.5" ></text>
</g>
<g >
<title>mprotect_fixup (872,335 samples, 0.03%)</title><rect x="1188.2" y="181" width="0.4" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1191.23" y="191.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (12,195,349 samples, 0.42%)</title><rect x="1087.2" y="261" width="4.9" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1090.20" y="271.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (853,699 samples, 0.03%)</title><rect x="38.4" y="213" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="41.44" y="223.5" ></text>
</g>
<g >
<title>kfree (10,906,561 samples, 0.37%)</title><rect x="1075.4" y="197" width="4.4" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1078.41" y="207.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (853,699 samples, 0.03%)</title><rect x="38.4" y="261" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="41.44" y="271.5" ></text>
</g>
<g >
<title>do_mmap (846,940 samples, 0.03%)</title><rect x="10.0" y="165" width="0.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="13.00" y="175.5" ></text>
</g>
<g >
<title>timekeeping_advance (853,387 samples, 0.03%)</title><rect x="1039.8" y="53" width="0.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="1042.80" y="63.5" ></text>
</g>
<g >
<title>timekeeping_advance (843,196 samples, 0.03%)</title><rect x="225.7" y="101" width="0.3" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="228.69" y="111.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (853,732 samples, 0.03%)</title><rect x="10.7" y="277" width="0.4" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="13.71" y="287.5" ></text>
</g>
<g >
<title>htab_map_lookup_elem (8,377,930 samples, 0.29%)</title><rect x="500.7" y="213" width="3.3" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="503.66" y="223.5" ></text>
</g>
</g>
</svg>
