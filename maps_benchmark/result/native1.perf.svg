<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="470" onload="init(evt)" viewBox="0 0 1200 470" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom(true);
			zoom(target);
			if (!document.querySelector('.parent')) {
				// we have basically done a clearzoom so clear the url
				var params = get_params();
				if (params.x) delete params.x;
				if (params.y) delete params.y;
				history.replaceState(null, null, parse_params(params));
				unzoombtn.classList.add("hide");
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		var sl = t.getSubStringLength(0, txt.length);
		// check if only whitespace or if we can fit the entire string into width w
		if (/^ *$/.test(txt) || sl < w)
			return;

		// this isn't perfect, but gives a good starting point
		// and avoids calling getSubStringLength too often
		var start = Math.floor((w/sl) * txt.length);
		for (var x = start; x > 0; x = x-2) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom(dont_update_text) {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			if(!dont_update_text) update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="470.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="453" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="453" > </text>
<g id="frames">
<g >
<title>exit_to_user_mode_prepare (402,619 samples, 0.01%)</title><rect x="1189.0" y="325" width="0.1" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1191.95" y="335.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (847,695 samples, 0.03%)</title><rect x="680.8" y="229" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="683.77" y="239.5" ></text>
</g>
<g >
<title>__dentry_kill (402,619 samples, 0.01%)</title><rect x="1189.0" y="245" width="0.1" height="15.0" fill="rgb(231,120,28)" rx="2" ry="2" />
<text  x="1191.95" y="255.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (850,365 samples, 0.03%)</title><rect x="593.4" y="245" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="596.36" y="255.5" ></text>
</g>
<g >
<title>percpu_counter_add_batch (607,431 samples, 0.02%)</title><rect x="10.4" y="229" width="0.3" height="15.0" fill="rgb(241,166,39)" rx="2" ry="2" />
<text  x="13.43" y="239.5" ></text>
</g>
<g >
<title>update_process_times (850,365 samples, 0.03%)</title><rect x="593.4" y="165" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="596.36" y="175.5" ></text>
</g>
<g >
<title>__vm_munmap (255,552 samples, 0.01%)</title><rect x="10.7" y="245" width="0.1" height="15.0" fill="rgb(231,121,28)" rx="2" ry="2" />
<text  x="13.68" y="255.5" ></text>
</g>
<g >
<title>should_failslab (4,199,338 samples, 0.15%)</title><rect x="583.7" y="261" width="1.7" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="586.66" y="271.5" ></text>
</g>
<g >
<title>__kmalloc_node (2,505,127 samples, 0.09%)</title><rect x="364.7" y="293" width="1.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="367.73" y="303.5" ></text>
</g>
<g >
<title>lookup_nulls_elem_raw (8,364,016 samples, 0.29%)</title><rect x="430.7" y="261" width="3.5" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="433.73" y="271.5" ></text>
</g>
<g >
<title>bpf_map_copy_value (5,029,716 samples, 0.18%)</title><rect x="777.1" y="309" width="2.1" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="780.09" y="319.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (853,305 samples, 0.03%)</title><rect x="51.2" y="325" width="0.4" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="54.20" y="335.5" ></text>
</g>
<g >
<title>change_protection (576,042 samples, 0.02%)</title><rect x="1188.7" y="245" width="0.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1191.71" y="255.5" ></text>
</g>
<g >
<title>queue_work_on (639,172 samples, 0.02%)</title><rect x="10.8" y="245" width="0.2" height="15.0" fill="rgb(248,200,48)" rx="2" ry="2" />
<text  x="13.78" y="255.5" ></text>
</g>
<g >
<title>__bpf_map_area_alloc (652,050 samples, 0.02%)</title><rect x="1189.4" y="261" width="0.2" height="15.0" fill="rgb(254,228,54)" rx="2" ry="2" />
<text  x="1192.38" y="271.5" ></text>
</g>
<g >
<title>syscall_return_via_sysret (249,487,657 samples, 8.72%)</title><rect x="1085.5" y="357" width="102.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="1088.47" y="367.5" >syscall_retu..</text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (2,565,793 samples, 0.09%)</title><rect x="1076.1" y="325" width="1.1" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="1079.12" y="335.5" ></text>
</g>
<g >
<title>__update_load_avg_se (850,365 samples, 0.03%)</title><rect x="593.4" y="101" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="596.36" y="111.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (850,365 samples, 0.03%)</title><rect x="593.4" y="277" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="596.36" y="287.5" ></text>
</g>
<g >
<title>cpuacct_account_field (822,212 samples, 0.03%)</title><rect x="525.2" y="85" width="0.3" height="15.0" fill="rgb(240,163,39)" rx="2" ry="2" />
<text  x="528.17" y="95.5" ></text>
</g>
<g >
<title>tick_sched_timer (850,365 samples, 0.03%)</title><rect x="593.4" y="197" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="596.36" y="207.5" ></text>
</g>
<g >
<title>entry_SYSRETQ_unsafe_stack (8,449,794 samples, 0.30%)</title><rect x="1082.0" y="357" width="3.5" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1084.98" y="367.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (853,305 samples, 0.03%)</title><rect x="51.2" y="341" width="0.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="54.20" y="351.5" ></text>
</g>
<g >
<title>account_system_index_time (822,212 samples, 0.03%)</title><rect x="525.2" y="101" width="0.3" height="15.0" fill="rgb(213,41,9)" rx="2" ry="2" />
<text  x="528.17" y="111.5" ></text>
</g>
<g >
<title>syscall_trace_enter.constprop.0 (26,063,509 samples, 0.91%)</title><rect x="823.0" y="309" width="10.8" height="15.0" fill="rgb(237,148,35)" rx="2" ry="2" />
<text  x="826.02" y="319.5" ></text>
</g>
<g >
<title>check_stack_object (31,838,763 samples, 1.11%)</title><rect x="449.4" y="293" width="13.1" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="452.38" y="303.5" ></text>
</g>
<g >
<title>mprotect_fixup (576,042 samples, 0.02%)</title><rect x="1188.7" y="261" width="0.3" height="15.0" fill="rgb(236,144,34)" rx="2" ry="2" />
<text  x="1191.71" y="271.5" ></text>
</g>
<g >
<title>kfree (10,073,861 samples, 0.35%)</title><rect x="1065.0" y="277" width="4.2" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1068.04" y="287.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (3,327,687 samples, 0.12%)</title><rect x="585.4" y="277" width="1.4" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="588.39" y="287.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (850,365 samples, 0.03%)</title><rect x="593.4" y="229" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="596.36" y="239.5" ></text>
</g>
<g >
<title>__bpf_prog_put_noref (639,172 samples, 0.02%)</title><rect x="10.8" y="277" width="0.2" height="15.0" fill="rgb(233,129,31)" rx="2" ry="2" />
<text  x="13.78" y="287.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (846,253 samples, 0.03%)</title><rect x="1054.7" y="261" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="1057.66" y="271.5" ></text>
</g>
<g >
<title>rep_movs_alternative (4,206,194 samples, 0.15%)</title><rect x="764.0" y="277" width="1.7" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="767.00" y="287.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (822,212 samples, 0.03%)</title><rect x="525.2" y="213" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="528.17" y="223.5" ></text>
</g>
<g >
<title>__virt_addr_valid (9,241,739 samples, 0.32%)</title><rect x="368.9" y="293" width="3.8" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="371.90" y="303.5" ></text>
</g>
<g >
<title>htab_map_lookup_elem (48,658,134 samples, 1.70%)</title><rect x="423.1" y="277" width="20.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="426.12" y="287.5" ></text>
</g>
<g >
<title>do_syscall_64 (255,552 samples, 0.01%)</title><rect x="10.7" y="357" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.68" y="367.5" ></text>
</g>
<g >
<title>__x64_sys_mprotect (576,042 samples, 0.02%)</title><rect x="1188.7" y="293" width="0.3" height="15.0" fill="rgb(209,21,5)" rx="2" ry="2" />
<text  x="1191.71" y="303.5" ></text>
</g>
<g >
<title>should_failslab (845,537 samples, 0.03%)</title><rect x="570.6" y="245" width="0.4" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="573.63" y="255.5" ></text>
</g>
<g >
<title>[unknown] (1,035,884 samples, 0.04%)</title><rect x="10.0" y="373" width="0.4" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="383.5" ></text>
</g>
<g >
<title>do_syscall_64 (496,677 samples, 0.02%)</title><rect x="10.0" y="309" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (576,042 samples, 0.02%)</title><rect x="1188.7" y="325" width="0.3" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1191.71" y="335.5" ></text>
</g>
<g >
<title>mntput (4,183,586 samples, 0.15%)</title><rect x="1058.5" y="261" width="1.7" height="15.0" fill="rgb(220,72,17)" rx="2" ry="2" />
<text  x="1061.48" y="271.5" ></text>
</g>
<g >
<title>kfree (4,208,660 samples, 0.15%)</title><rect x="1056.7" y="261" width="1.8" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="1059.75" y="271.5" ></text>
</g>
<g >
<title>do_execveat_common.isra.0 (255,552 samples, 0.01%)</title><rect x="10.7" y="325" width="0.1" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="13.68" y="335.5" ></text>
</g>
<g >
<title>__x64_sys_bpf (1,412,958,083 samples, 49.38%)</title><rect x="229.6" y="325" width="582.8" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="232.63" y="335.5" >__x64_sys_bpf</text>
</g>
<g >
<title>__virt_addr_valid (2,534,776 samples, 0.09%)</title><rect x="684.2" y="277" width="1.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="687.23" y="287.5" ></text>
</g>
<g >
<title>__vmalloc_node_range (652,050 samples, 0.02%)</title><rect x="1189.4" y="245" width="0.2" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="1192.38" y="255.5" ></text>
</g>
<g >
<title>do_fault (607,431 samples, 0.02%)</title><rect x="10.4" y="277" width="0.3" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="13.43" y="287.5" ></text>
</g>
<g >
<title>kvmalloc_node (4,234,407 samples, 0.15%)</title><rect x="787.4" y="309" width="1.8" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="790.45" y="319.5" ></text>
</g>
<g >
<title>vm_munmap (255,552 samples, 0.01%)</title><rect x="10.7" y="261" width="0.1" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="13.68" y="271.5" ></text>
</g>
<g >
<title>map_benchmark (2,860,946,861 samples, 99.99%)</title><rect x="10.0" y="405" width="1179.9" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="13.00" y="415.5" >map_benchmark</text>
</g>
<g >
<title>do_syscall_64 (8,432,922 samples, 0.29%)</title><rect x="51.6" y="357" width="3.4" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="54.56" y="367.5" ></text>
</g>
<g >
<title>userfaultfd_unmap_prep (255,552 samples, 0.01%)</title><rect x="10.7" y="213" width="0.1" height="15.0" fill="rgb(248,201,48)" rx="2" ry="2" />
<text  x="13.68" y="223.5" ></text>
</g>
<g >
<title>tick_sched_handle (850,365 samples, 0.03%)</title><rect x="593.4" y="181" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="596.36" y="191.5" ></text>
</g>
<g >
<title>kmalloc_slab (3,364,010 samples, 0.12%)</title><rect x="762.6" y="261" width="1.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="765.61" y="271.5" ></text>
</g>
<g >
<title>bpf_check_uarg_tail_zero (13,283,612 samples, 0.46%)</title><rect x="771.6" y="309" width="5.5" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="774.61" y="319.5" ></text>
</g>
<g >
<title>__check_object_size (144,881,110 samples, 5.06%)</title><rect x="621.4" y="277" width="59.7" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="624.36" y="287.5" >__chec..</text>
</g>
<g >
<title>_copy_from_user (6,681,621 samples, 0.23%)</title><rect x="685.3" y="277" width="2.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="688.28" y="287.5" ></text>
</g>
<g >
<title>__check_heap_object (8,435,203 samples, 0.29%)</title><rect x="617.9" y="277" width="3.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="620.88" y="287.5" ></text>
</g>
<g >
<title>check_stack_object (8,350,344 samples, 0.29%)</title><rect x="688.0" y="277" width="3.5" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="691.03" y="287.5" ></text>
</g>
<g >
<title>syscall (639,172 samples, 0.02%)</title><rect x="10.8" y="373" width="0.2" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="13.78" y="383.5" ></text>
</g>
<g >
<title>__kmalloc_node (7,557,379 samples, 0.26%)</title><rect x="681.1" y="277" width="3.1" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="684.12" y="287.5" ></text>
</g>
<g >
<title>bpf_map_lookup_elem (23,483,712 samples, 0.82%)</title><rect x="11.0" y="373" width="9.7" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="14.05" y="383.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (2,525,206 samples, 0.09%)</title><rect x="1012.2" y="309" width="1.0" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1015.21" y="319.5" ></text>
</g>
<g >
<title>bpf_int_jit_compile (628,268 samples, 0.02%)</title><rect x="1189.1" y="277" width="0.3" height="15.0" fill="rgb(243,178,42)" rx="2" ry="2" />
<text  x="1192.12" y="287.5" ></text>
</g>
<g >
<title>__audit_syscall_entry (5,820,694 samples, 0.20%)</title><rect x="831.4" y="293" width="2.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="834.37" y="303.5" ></text>
</g>
<g >
<title>check_stack_object (11,606,748 samples, 0.41%)</title><rect x="344.5" y="277" width="4.8" height="15.0" fill="rgb(215,49,11)" rx="2" ry="2" />
<text  x="347.47" y="287.5" ></text>
</g>
<g >
<title>memset_orig (13,414,857 samples, 0.47%)</title><rect x="578.1" y="261" width="5.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="581.13" y="271.5" ></text>
</g>
<g >
<title>handle_mm_fault (607,431 samples, 0.02%)</title><rect x="10.4" y="309" width="0.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="13.43" y="319.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (822,212 samples, 0.03%)</title><rect x="525.2" y="197" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="528.17" y="207.5" ></text>
</g>
<g >
<title>__x64_sys_bpf (639,172 samples, 0.02%)</title><rect x="10.8" y="325" width="0.2" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="13.78" y="335.5" ></text>
</g>
<g >
<title>vmemdup_user (383,640,655 samples, 13.41%)</title><rect x="607.5" y="293" width="158.2" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="610.51" y="303.5" >vmemdup_user</text>
</g>
<g >
<title>do_syscall_64 (1,945,616 samples, 0.07%)</title><rect x="1189.1" y="357" width="0.8" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1192.12" y="367.5" ></text>
</g>
<g >
<title>tick_sched_handle (847,695 samples, 0.03%)</title><rect x="680.8" y="149" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="683.77" y="159.5" ></text>
</g>
<g >
<title>should_failslab (3,362,777 samples, 0.12%)</title><rect x="744.3" y="229" width="1.4" height="15.0" fill="rgb(206,8,2)" rx="2" ry="2" />
<text  x="747.30" y="239.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (853,305 samples, 0.03%)</title><rect x="51.2" y="245" width="0.4" height="15.0" fill="rgb(208,14,3)" rx="2" ry="2" />
<text  x="54.20" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (496,677 samples, 0.02%)</title><rect x="10.0" y="325" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="13.00" y="335.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (847,695 samples, 0.03%)</title><rect x="680.8" y="245" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="683.77" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (1,945,616 samples, 0.07%)</title><rect x="1189.1" y="373" width="0.8" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1192.12" y="383.5" ></text>
</g>
<g >
<title>update_process_times (847,695 samples, 0.03%)</title><rect x="680.8" y="133" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="683.77" y="143.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (822,212 samples, 0.03%)</title><rect x="525.2" y="229" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="528.17" y="239.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (4,146,779 samples, 0.14%)</title><rect x="486.2" y="277" width="1.7" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="489.23" y="287.5" ></text>
</g>
<g >
<title>__audit_syscall_entry (3,388,248 samples, 0.12%)</title><rect x="821.6" y="309" width="1.4" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="824.62" y="319.5" ></text>
</g>
<g >
<title>sched_clock_cpu (847,695 samples, 0.03%)</title><rect x="680.8" y="85" width="0.3" height="15.0" fill="rgb(229,113,27)" rx="2" ry="2" />
<text  x="683.77" y="95.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (13,444,063 samples, 0.47%)</title><rect x="465.6" y="293" width="5.6" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="468.61" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_execve (255,552 samples, 0.01%)</title><rect x="10.7" y="341" width="0.1" height="15.0" fill="rgb(247,193,46)" rx="2" ry="2" />
<text  x="13.68" y="351.5" ></text>
</g>
<g >
<title>migrate_enable (3,391,157 samples, 0.12%)</title><rect x="592.3" y="293" width="1.4" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="595.31" y="303.5" ></text>
</g>
<g >
<title>native_sched_clock (847,695 samples, 0.03%)</title><rect x="680.8" y="37" width="0.3" height="15.0" fill="rgb(218,64,15)" rx="2" ry="2" />
<text  x="683.77" y="47.5" ></text>
</g>
<g >
<title>kfree (2,427,923 samples, 0.08%)</title><rect x="471.2" y="293" width="1.0" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="474.15" y="303.5" ></text>
</g>
<g >
<title>__check_object_size (118,749,969 samples, 4.15%)</title><rect x="300.3" y="293" width="49.0" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="303.28" y="303.5" >__ch..</text>
</g>
<g >
<title>scheduler_tick (847,695 samples, 0.03%)</title><rect x="680.8" y="117" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="683.77" y="127.5" ></text>
</g>
<g >
<title>_copy_to_user (9,192,223 samples, 0.32%)</title><rect x="767.8" y="309" width="3.8" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="770.82" y="319.5" ></text>
</g>
<g >
<title>kvmalloc_node (173,288,370 samples, 6.06%)</title><rect x="692.5" y="277" width="71.5" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="695.53" y="287.5" >kvmalloc..</text>
</g>
<g >
<title>account_system_time (822,212 samples, 0.03%)</title><rect x="525.2" y="117" width="0.3" height="15.0" fill="rgb(240,161,38)" rx="2" ry="2" />
<text  x="528.17" y="127.5" ></text>
</g>
<g >
<title>task_work_run (402,619 samples, 0.01%)</title><rect x="1189.0" y="309" width="0.1" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="1191.95" y="319.5" ></text>
</g>
<g >
<title>kmalloc_slab (3,390,695 samples, 0.12%)</title><rect x="586.8" y="277" width="1.4" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="589.76" y="287.5" ></text>
</g>
<g >
<title>__alloc_pages (652,050 samples, 0.02%)</title><rect x="1189.4" y="213" width="0.2" height="15.0" fill="rgb(233,129,30)" rx="2" ry="2" />
<text  x="1192.38" y="223.5" ></text>
</g>
<g >
<title>pcpu_freelist_populate (665,298 samples, 0.02%)</title><rect x="1189.6" y="277" width="0.3" height="15.0" fill="rgb(229,112,26)" rx="2" ry="2" />
<text  x="1192.65" y="287.5" ></text>
</g>
<g >
<title>path_put (3,352,029 samples, 0.12%)</title><rect x="1060.2" y="261" width="1.4" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1063.21" y="271.5" ></text>
</g>
<g >
<title>bpf_prog_load (628,268 samples, 0.02%)</title><rect x="1189.1" y="309" width="0.3" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="1192.12" y="319.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (846,253 samples, 0.03%)</title><rect x="1054.7" y="229" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="1057.66" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (2,490,042,968 samples, 87.03%)</title><rect x="55.0" y="357" width="1027.0" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="58.03" y="367.5" >entry_SYSCALL_64</text>
</g>
<g >
<title>__fget_light (33,400,292 samples, 1.17%)</title><rect x="349.3" y="277" width="13.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="352.25" y="287.5" ></text>
</g>
<g >
<title>memset_orig (18,404,741 samples, 0.64%)</title><rect x="751.9" y="245" width="7.6" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="754.92" y="255.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (58,412,309 samples, 2.04%)</title><rect x="546.9" y="261" width="24.1" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="549.89" y="271.5" >_..</text>
</g>
<g >
<title>__check_object_size (20,010,486 samples, 0.70%)</title><rect x="229.6" y="309" width="8.3" height="15.0" fill="rgb(226,98,23)" rx="2" ry="2" />
<text  x="232.63" y="319.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (402,619 samples, 0.01%)</title><rect x="1189.0" y="341" width="0.1" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1191.95" y="351.5" ></text>
</g>
<g >
<title>__fdget (33,400,292 samples, 1.17%)</title><rect x="349.3" y="293" width="13.7" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="352.25" y="303.5" ></text>
</g>
<g >
<title>syscall (2,807,710,298 samples, 98.13%)</title><rect x="30.4" y="373" width="1158.0" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="33.40" y="383.5" >syscall</text>
</g>
<g >
<title>do_user_addr_fault (607,431 samples, 0.02%)</title><rect x="10.4" y="325" width="0.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="13.43" y="335.5" ></text>
</g>
<g >
<title>bpf_map_value_size (13,465,694 samples, 0.47%)</title><rect x="779.2" y="309" width="5.5" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="782.16" y="319.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (822,212 samples, 0.03%)</title><rect x="525.2" y="261" width="0.3" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="528.17" y="271.5" ></text>
</g>
<g >
<title>fpregs_assert_state_consistent (6,725,592 samples, 0.24%)</title><rect x="1019.7" y="293" width="2.8" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1022.74" y="303.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (847,695 samples, 0.03%)</title><rect x="680.8" y="181" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="683.77" y="191.5" ></text>
</g>
<g >
<title>lookup_nulls_elem_raw (4,192,494 samples, 0.15%)</title><rect x="443.2" y="277" width="1.7" height="15.0" fill="rgb(227,101,24)" rx="2" ry="2" />
<text  x="446.19" y="287.5" ></text>
</g>
<g >
<title>__d_lookup_rcu (496,677 samples, 0.02%)</title><rect x="10.0" y="213" width="0.2" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="13.00" y="223.5" ></text>
</g>
<g >
<title>__queue_work (639,172 samples, 0.02%)</title><rect x="10.8" y="229" width="0.2" height="15.0" fill="rgb(212,34,8)" rx="2" ry="2" />
<text  x="13.78" y="239.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (5,751,683 samples, 0.20%)</title><rect x="568.3" y="245" width="2.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="571.26" y="255.5" ></text>
</g>
<g >
<title>security_bpf (5,772,306 samples, 0.20%)</title><rect x="605.1" y="293" width="2.4" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="608.13" y="303.5" ></text>
</g>
<g >
<title>htab_map_alloc (1,317,348 samples, 0.05%)</title><rect x="1189.4" y="293" width="0.5" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="1192.38" y="303.5" ></text>
</g>
<g >
<title>do_filp_open (496,677 samples, 0.02%)</title><rect x="10.0" y="261" width="0.2" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="13.00" y="271.5" ></text>
</g>
<g >
<title>__kmem_cache_free (17,475,883 samples, 0.61%)</title><rect x="479.0" y="277" width="7.2" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="482.02" y="287.5" ></text>
</g>
<g >
<title>__fget_light (4,133,295 samples, 0.14%)</title><rect x="363.0" y="293" width="1.7" height="15.0" fill="rgb(233,132,31)" rx="2" ry="2" />
<text  x="366.03" y="303.5" ></text>
</g>
<g >
<title>elf_map (255,552 samples, 0.01%)</title><rect x="10.7" y="277" width="0.1" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="13.68" y="287.5" ></text>
</g>
<g >
<title>audit_reset_context (5,882,016 samples, 0.21%)</title><rect x="1073.3" y="293" width="2.5" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1076.34" y="303.5" ></text>
</g>
<g >
<title>main (23,440,488 samples, 0.82%)</title><rect x="20.7" y="373" width="9.7" height="15.0" fill="rgb(243,179,42)" rx="2" ry="2" />
<text  x="23.73" y="383.5" ></text>
</g>
<g >
<title>__audit_syscall_exit (100,693,157 samples, 3.52%)</title><rect x="1031.8" y="293" width="41.5" height="15.0" fill="rgb(218,62,14)" rx="2" ry="2" />
<text  x="1034.82" y="303.5" >__a..</text>
</g>
<g >
<title>__x64_sys_bpf (1,945,616 samples, 0.07%)</title><rect x="1189.1" y="341" width="0.8" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="1192.12" y="351.5" ></text>
</g>
<g >
<title>update_process_times (822,212 samples, 0.03%)</title><rect x="525.2" y="149" width="0.3" height="15.0" fill="rgb(250,209,50)" rx="2" ry="2" />
<text  x="528.17" y="159.5" ></text>
</g>
<g >
<title>exc_page_fault (607,431 samples, 0.02%)</title><rect x="10.4" y="341" width="0.3" height="15.0" fill="rgb(212,35,8)" rx="2" ry="2" />
<text  x="13.43" y="351.5" ></text>
</g>
<g >
<title>alloc_pages (652,050 samples, 0.02%)</title><rect x="1189.4" y="229" width="0.2" height="15.0" fill="rgb(210,25,6)" rx="2" ry="2" />
<text  x="1192.38" y="239.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (639,172 samples, 0.02%)</title><rect x="10.8" y="357" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="13.78" y="367.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (853,305 samples, 0.03%)</title><rect x="51.2" y="261" width="0.4" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="54.20" y="271.5" ></text>
</g>
<g >
<title>bpf_prog_load (639,172 samples, 0.02%)</title><rect x="10.8" y="293" width="0.2" height="15.0" fill="rgb(241,165,39)" rx="2" ry="2" />
<text  x="13.78" y="303.5" ></text>
</g>
<g >
<title>migrate_enable (10,828,825 samples, 0.38%)</title><rect x="444.9" y="277" width="4.5" height="15.0" fill="rgb(214,43,10)" rx="2" ry="2" />
<text  x="447.92" y="287.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (539,207 samples, 0.02%)</title><rect x="10.2" y="325" width="0.2" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="13.20" y="335.5" ></text>
</g>
<g >
<title>destroy_inode (402,619 samples, 0.01%)</title><rect x="1189.0" y="181" width="0.1" height="15.0" fill="rgb(219,67,16)" rx="2" ry="2" />
<text  x="1191.95" y="191.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (850,365 samples, 0.03%)</title><rect x="593.4" y="261" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="596.36" y="271.5" ></text>
</g>
<g >
<title>do_syscall_64 (2,085,130,350 samples, 72.88%)</title><rect x="217.2" y="341" width="860.0" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="220.22" y="351.5" >do_syscall_64</text>
</g>
<g >
<title>fpregs_assert_state_consistent (9,209,319 samples, 0.32%)</title><rect x="1022.5" y="309" width="3.8" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="1025.51" y="319.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (853,305 samples, 0.03%)</title><rect x="51.2" y="293" width="0.4" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="54.20" y="303.5" ></text>
</g>
<g >
<title>memcmp (21,841,555 samples, 0.76%)</title><rect x="434.2" y="261" width="9.0" height="15.0" fill="rgb(235,141,33)" rx="2" ry="2" />
<text  x="437.18" y="271.5" ></text>
</g>
<g >
<title>syscall@plt (850,047 samples, 0.03%)</title><rect x="1188.4" y="373" width="0.3" height="15.0" fill="rgb(250,210,50)" rx="2" ry="2" />
<text  x="1191.36" y="383.5" ></text>
</g>
<g >
<title>dentry_unlink_inode (402,619 samples, 0.01%)</title><rect x="1189.0" y="229" width="0.1" height="15.0" fill="rgb(211,28,6)" rx="2" ry="2" />
<text  x="1191.95" y="239.5" ></text>
</g>
<g >
<title>_dl_map_object (1,035,884 samples, 0.04%)</title><rect x="10.0" y="357" width="0.4" height="15.0" fill="rgb(248,199,47)" rx="2" ry="2" />
<text  x="13.00" y="367.5" ></text>
</g>
<g >
<title>kmalloc_slab (6,669,237 samples, 0.23%)</title><rect x="745.7" y="245" width="2.7" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="748.68" y="255.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (402,619 samples, 0.01%)</title><rect x="1189.0" y="373" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="1191.95" y="383.5" ></text>
</g>
<g >
<title>__kmem_cache_free (68,652,747 samples, 2.40%)</title><rect x="496.9" y="261" width="28.3" height="15.0" fill="rgb(226,99,23)" rx="2" ry="2" />
<text  x="499.85" y="271.5" >_..</text>
</g>
<g >
<title>__handle_mm_fault (607,431 samples, 0.02%)</title><rect x="10.4" y="293" width="0.3" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="13.43" y="303.5" ></text>
</g>
<g >
<title>iput (402,619 samples, 0.01%)</title><rect x="1189.0" y="213" width="0.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="1191.95" y="223.5" ></text>
</g>
<g >
<title>__sys_bpf (1,945,616 samples, 0.07%)</title><rect x="1189.1" y="325" width="0.8" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1192.12" y="335.5" ></text>
</g>
<g >
<title>tick_sched_timer (822,212 samples, 0.03%)</title><rect x="525.2" y="181" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="528.17" y="191.5" ></text>
</g>
<g >
<title>kfree (91,084,736 samples, 3.18%)</title><rect x="487.9" y="277" width="37.6" height="15.0" fill="rgb(222,78,18)" rx="2" ry="2" />
<text  x="490.94" y="287.5" >kfree</text>
</g>
<g >
<title>bpf_prog_select_runtime (628,268 samples, 0.02%)</title><rect x="1189.1" y="293" width="0.3" height="15.0" fill="rgb(243,176,42)" rx="2" ry="2" />
<text  x="1192.12" y="303.5" ></text>
</g>
<g >
<title>__fdget (3,359,898 samples, 0.12%)</title><rect x="237.9" y="309" width="1.4" height="15.0" fill="rgb(214,41,10)" rx="2" ry="2" />
<text  x="240.88" y="319.5" ></text>
</g>
<g >
<title>locks_free_lock_context (402,619 samples, 0.01%)</title><rect x="1189.0" y="165" width="0.1" height="15.0" fill="rgb(244,183,43)" rx="2" ry="2" />
<text  x="1191.95" y="175.5" ></text>
</g>
<g >
<title>entry_SYSCALL_64 (255,552 samples, 0.01%)</title><rect x="10.7" y="373" width="0.1" height="15.0" fill="rgb(239,156,37)" rx="2" ry="2" />
<text  x="13.68" y="383.5" ></text>
</g>
<g >
<title>__rcu_read_lock (3,387,519 samples, 0.12%)</title><rect x="365.8" y="293" width="1.4" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="368.77" y="303.5" ></text>
</g>
<g >
<title>unroll_tree_refs (7,564,191 samples, 0.26%)</title><rect x="1070.2" y="277" width="3.1" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1073.23" y="287.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (846,253 samples, 0.03%)</title><rect x="1054.7" y="213" width="0.3" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1057.66" y="223.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (7,505,591 samples, 0.26%)</title><rect x="759.5" y="261" width="3.1" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="762.51" y="271.5" ></text>
</g>
<g >
<title>audit_reset_context (77,349,235 samples, 2.70%)</title><rect x="1033.1" y="277" width="31.9" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="1036.14" y="287.5" >au..</text>
</g>
<g >
<title>syscall_enter_from_user_mode (37,817,178 samples, 1.32%)</title><rect x="818.2" y="325" width="15.6" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="821.17" y="335.5" ></text>
</g>
<g >
<title>scheduler_tick (850,365 samples, 0.03%)</title><rect x="593.4" y="149" width="0.3" height="15.0" fill="rgb(246,190,45)" rx="2" ry="2" />
<text  x="596.36" y="159.5" ></text>
</g>
<g >
<title>__x64_sys_bpf (11,809,965 samples, 0.41%)</title><rect x="212.4" y="341" width="4.8" height="15.0" fill="rgb(215,50,12)" rx="2" ry="2" />
<text  x="215.35" y="351.5" ></text>
</g>
<g >
<title>do_mprotect_pkey (576,042 samples, 0.02%)</title><rect x="1188.7" y="277" width="0.3" height="15.0" fill="rgb(252,218,52)" rx="2" ry="2" />
<text  x="1191.71" y="287.5" ></text>
</g>
<g >
<title>__check_heap_object (56,712,125 samples, 1.98%)</title><rect x="636.6" y="261" width="23.4" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="639.57" y="271.5" >_..</text>
</g>
<g >
<title>__virt_addr_valid (13,430,423 samples, 0.47%)</title><rect x="338.9" y="277" width="5.6" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="341.93" y="287.5" ></text>
</g>
<g >
<title>__virt_addr_valid (51,309,041 samples, 1.79%)</title><rect x="660.0" y="261" width="21.1" height="15.0" fill="rgb(216,53,12)" rx="2" ry="2" />
<text  x="662.96" y="271.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (853,305 samples, 0.03%)</title><rect x="51.2" y="197" width="0.4" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="54.20" y="207.5" ></text>
</g>
<g >
<title>_dl_start_user (576,042 samples, 0.02%)</title><rect x="1188.7" y="389" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1191.71" y="399.5" ></text>
</g>
<g >
<title>set_pte_range (607,431 samples, 0.02%)</title><rect x="10.4" y="245" width="0.3" height="15.0" fill="rgb(224,90,21)" rx="2" ry="2" />
<text  x="13.43" y="255.5" ></text>
</g>
<g >
<title>tick_sched_timer (853,305 samples, 0.03%)</title><rect x="51.2" y="277" width="0.4" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="54.20" y="287.5" ></text>
</g>
<g >
<title>_dl_sysdep_start (576,042 samples, 0.02%)</title><rect x="1188.7" y="373" width="0.3" height="15.0" fill="rgb(234,137,32)" rx="2" ry="2" />
<text  x="1191.71" y="383.5" ></text>
</g>
<g >
<title>bprm_execve (255,552 samples, 0.01%)</title><rect x="10.7" y="309" width="0.1" height="15.0" fill="rgb(218,61,14)" rx="2" ry="2" />
<text  x="13.68" y="319.5" ></text>
</g>
<g >
<title>__libc_start_call_main (2,855,484,545 samples, 99.80%)</title><rect x="11.0" y="389" width="1177.7" height="15.0" fill="rgb(210,26,6)" rx="2" ry="2" />
<text  x="14.05" y="399.5" >__libc_start_call_main</text>
</g>
<g >
<title>sched_clock_noinstr (847,695 samples, 0.03%)</title><rect x="680.8" y="53" width="0.3" height="15.0" fill="rgb(253,222,53)" rx="2" ry="2" />
<text  x="683.77" y="63.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (850,365 samples, 0.03%)</title><rect x="593.4" y="213" width="0.3" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="596.36" y="223.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (3,338,071 samples, 0.12%)</title><rect x="576.8" y="261" width="1.3" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="579.75" y="271.5" ></text>
</g>
<g >
<title>unroll_tree_refs (8,365,292 samples, 0.29%)</title><rect x="1061.6" y="261" width="3.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="1064.59" y="271.5" ></text>
</g>
<g >
<title>path_put (2,498,599 samples, 0.09%)</title><rect x="1069.2" y="277" width="1.0" height="15.0" fill="rgb(249,206,49)" rx="2" ry="2" />
<text  x="1072.19" y="287.5" ></text>
</g>
<g >
<title>tick_sched_timer (847,695 samples, 0.03%)</title><rect x="680.8" y="165" width="0.3" height="15.0" fill="rgb(254,227,54)" rx="2" ry="2" />
<text  x="683.77" y="175.5" ></text>
</g>
<g >
<title>__rcu_read_unlock (4,206,924 samples, 0.15%)</title><rect x="367.2" y="293" width="1.7" height="15.0" fill="rgb(253,224,53)" rx="2" ry="2" />
<text  x="370.16" y="303.5" ></text>
</g>
<g >
<title>__GI___uname (607,431 samples, 0.02%)</title><rect x="10.4" y="373" width="0.3" height="15.0" fill="rgb(215,47,11)" rx="2" ry="2" />
<text  x="13.43" y="383.5" ></text>
</g>
<g >
<title>syscall (1,945,616 samples, 0.07%)</title><rect x="1189.1" y="389" width="0.8" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="1192.12" y="399.5" ></text>
</g>
<g >
<title>update_rq_clock (847,695 samples, 0.03%)</title><rect x="680.8" y="101" width="0.3" height="15.0" fill="rgb(231,119,28)" rx="2" ry="2" />
<text  x="683.77" y="111.5" ></text>
</g>
<g >
<title>dput (4,218,610 samples, 0.15%)</title><rect x="1055.0" y="261" width="1.7" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1058.01" y="271.5" ></text>
</g>
<g >
<title>evict (402,619 samples, 0.01%)</title><rect x="1189.0" y="197" width="0.1" height="15.0" fill="rgb(231,122,29)" rx="2" ry="2" />
<text  x="1191.95" y="207.5" ></text>
</g>
<g >
<title>kvfree (129,365,147 samples, 4.52%)</title><rect x="472.2" y="293" width="53.3" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="475.15" y="303.5" >kvfree</text>
</g>
<g >
<title>mprotect (576,042 samples, 0.02%)</title><rect x="1188.7" y="341" width="0.3" height="15.0" fill="rgb(241,169,40)" rx="2" ry="2" />
<text  x="1191.71" y="351.5" ></text>
</g>
<g >
<title>timekeeping_advance (853,305 samples, 0.03%)</title><rect x="51.2" y="213" width="0.4" height="15.0" fill="rgb(227,104,25)" rx="2" ry="2" />
<text  x="54.20" y="223.5" ></text>
</g>
<g >
<title>rep_movs_alternative (27,679,164 samples, 0.97%)</title><rect x="593.7" y="293" width="11.4" height="15.0" fill="rgb(205,1,0)" rx="2" ry="2" />
<text  x="596.71" y="303.5" ></text>
</g>
<g >
<title>__x64_sys_openat (496,677 samples, 0.02%)</title><rect x="10.0" y="293" width="0.2" height="15.0" fill="rgb(251,215,51)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (3,348,945 samples, 0.12%)</title><rect x="742.9" y="229" width="1.4" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="745.91" y="239.5" ></text>
</g>
<g >
<title>mmap64 (539,207 samples, 0.02%)</title><rect x="10.2" y="341" width="0.2" height="15.0" fill="rgb(220,70,16)" rx="2" ry="2" />
<text  x="13.20" y="351.5" ></text>
</g>
<g >
<title>__sys_bpf (639,172 samples, 0.02%)</title><rect x="10.8" y="309" width="0.2" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="13.78" y="319.5" ></text>
</g>
<g >
<title>dput (402,619 samples, 0.01%)</title><rect x="1189.0" y="261" width="0.1" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1191.95" y="271.5" ></text>
</g>
<g >
<title>__fput (402,619 samples, 0.01%)</title><rect x="1189.0" y="277" width="0.1" height="15.0" fill="rgb(248,200,47)" rx="2" ry="2" />
<text  x="1191.95" y="287.5" ></text>
</g>
<g >
<title>migrate_disable (6,740,964 samples, 0.24%)</title><rect x="589.5" y="293" width="2.8" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="592.53" y="303.5" ></text>
</g>
<g >
<title>path_openat (496,677 samples, 0.02%)</title><rect x="10.0" y="245" width="0.2" height="15.0" fill="rgb(249,202,48)" rx="2" ry="2" />
<text  x="13.00" y="255.5" ></text>
</g>
<g >
<title>kmalloc_slab (13,989,663 samples, 0.49%)</title><rect x="571.0" y="261" width="5.8" height="15.0" fill="rgb(225,95,22)" rx="2" ry="2" />
<text  x="573.98" y="271.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (846,253 samples, 0.03%)</title><rect x="1054.7" y="245" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="1057.66" y="255.5" ></text>
</g>
<g >
<title>update_wall_time (853,305 samples, 0.03%)</title><rect x="51.2" y="229" width="0.4" height="15.0" fill="rgb(207,11,2)" rx="2" ry="2" />
<text  x="54.20" y="239.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (847,695 samples, 0.03%)</title><rect x="680.8" y="197" width="0.3" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="683.77" y="207.5" ></text>
</g>
<g >
<title>htab_map_lookup_elem (7,494,772 samples, 0.26%)</title><rect x="462.5" y="293" width="3.1" height="15.0" fill="rgb(228,107,25)" rx="2" ry="2" />
<text  x="465.51" y="303.5" ></text>
</g>
<g >
<title>[unknown] (2,538,039 samples, 0.09%)</title><rect x="10.0" y="389" width="1.0" height="15.0" fill="rgb(210,24,5)" rx="2" ry="2" />
<text  x="13.00" y="399.5" ></text>
</g>
<g >
<title>memcpy_orig (3,324,499 samples, 0.12%)</title><rect x="588.2" y="293" width="1.3" height="15.0" fill="rgb(247,194,46)" rx="2" ry="2" />
<text  x="591.16" y="303.5" ></text>
</g>
<g >
<title>do_sys_openat2 (496,677 samples, 0.02%)</title><rect x="10.0" y="277" width="0.2" height="15.0" fill="rgb(253,221,52)" rx="2" ry="2" />
<text  x="13.00" y="287.5" ></text>
</g>
<g >
<title>bpf_prog_free (639,172 samples, 0.02%)</title><rect x="10.8" y="261" width="0.2" height="15.0" fill="rgb(228,106,25)" rx="2" ry="2" />
<text  x="13.78" y="271.5" ></text>
</g>
<g >
<title>do_jit (628,268 samples, 0.02%)</title><rect x="1189.1" y="261" width="0.3" height="15.0" fill="rgb(224,89,21)" rx="2" ry="2" />
<text  x="1192.12" y="271.5" ></text>
</g>
<g >
<title>filemap_map_pages (607,431 samples, 0.02%)</title><rect x="10.4" y="261" width="0.3" height="15.0" fill="rgb(229,112,27)" rx="2" ry="2" />
<text  x="13.43" y="271.5" ></text>
</g>
<g >
<title>dl_main (576,042 samples, 0.02%)</title><rect x="1188.7" y="357" width="0.3" height="15.0" fill="rgb(236,145,34)" rx="2" ry="2" />
<text  x="1191.71" y="367.5" ></text>
</g>
<g >
<title>__cond_resched (2,548,757 samples, 0.09%)</title><rect x="545.8" y="261" width="1.1" height="15.0" fill="rgb(217,58,14)" rx="2" ry="2" />
<text  x="548.84" y="271.5" ></text>
</g>
<g >
<title>sysvec_apic_timer_interrupt (822,212 samples, 0.03%)</title><rect x="525.2" y="245" width="0.3" height="15.0" fill="rgb(220,69,16)" rx="2" ry="2" />
<text  x="528.17" y="255.5" ></text>
</g>
<g >
<title>vmemdup_user (4,212,280 samples, 0.15%)</title><rect x="810.6" y="309" width="1.8" height="15.0" fill="rgb(214,41,9)" rx="2" ry="2" />
<text  x="813.63" y="319.5" ></text>
</g>
<g >
<title>security_bpf (6,747,470 samples, 0.24%)</title><rect x="807.8" y="309" width="2.8" height="15.0" fill="rgb(247,197,47)" rx="2" ry="2" />
<text  x="810.84" y="319.5" ></text>
</g>
<g >
<title>_start (402,619 samples, 0.01%)</title><rect x="1189.0" y="389" width="0.1" height="15.0" fill="rgb(245,185,44)" rx="2" ry="2" />
<text  x="1191.95" y="399.5" ></text>
</g>
<g >
<title>__GI___open64_nocancel (496,677 samples, 0.02%)</title><rect x="10.0" y="341" width="0.2" height="15.0" fill="rgb(218,63,15)" rx="2" ry="2" />
<text  x="13.00" y="351.5" ></text>
</g>
<g >
<title>__check_heap_object (10,901,223 samples, 0.38%)</title><rect x="295.8" y="293" width="4.5" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="298.78" y="303.5" ></text>
</g>
<g >
<title>bpf_map_area_alloc (652,050 samples, 0.02%)</title><rect x="1189.4" y="277" width="0.2" height="15.0" fill="rgb(232,124,29)" rx="2" ry="2" />
<text  x="1192.38" y="287.5" ></text>
</g>
<g >
<title>__kmem_cache_alloc_node (101,295,713 samples, 3.54%)</title><rect x="703.9" y="245" width="41.8" height="15.0" fill="rgb(208,16,4)" rx="2" ry="2" />
<text  x="706.91" y="255.5" >__k..</text>
</g>
<g >
<title>__next_zones_zonelist (652,050 samples, 0.02%)</title><rect x="1189.4" y="197" width="0.2" height="15.0" fill="rgb(223,86,20)" rx="2" ry="2" />
<text  x="1192.38" y="207.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (586,781,904 samples, 20.51%)</title><rect x="833.8" y="325" width="242.0" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="836.77" y="335.5" >syscall_exit_to_user_mode</text>
</g>
<g >
<title>__sys_bpf (4,182,711 samples, 0.15%)</title><rect x="227.9" y="325" width="1.7" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="230.90" y="335.5" ></text>
</g>
<g >
<title>asm_exc_page_fault (607,431 samples, 0.02%)</title><rect x="10.4" y="357" width="0.3" height="15.0" fill="rgb(225,93,22)" rx="2" ry="2" />
<text  x="13.43" y="367.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (22,464,325 samples, 0.79%)</title><rect x="1013.2" y="309" width="9.3" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="1016.25" y="319.5" ></text>
</g>
<g >
<title>_copy_from_user (20,979,211 samples, 0.73%)</title><rect x="374.1" y="293" width="8.7" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="377.10" y="303.5" ></text>
</g>
<g >
<title>exit_to_user_mode_prepare (6,645,392 samples, 0.23%)</title><rect x="815.4" y="325" width="2.8" height="15.0" fill="rgb(228,108,25)" rx="2" ry="2" />
<text  x="818.43" y="335.5" ></text>
</g>
<g >
<title>do_syscall_64 (402,619 samples, 0.01%)</title><rect x="1189.0" y="357" width="0.1" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1191.95" y="367.5" ></text>
</g>
<g >
<title>amd_clear_divider (7,435,293 samples, 0.26%)</title><rect x="812.4" y="325" width="3.0" height="15.0" fill="rgb(207,9,2)" rx="2" ry="2" />
<text  x="815.36" y="335.5" ></text>
</g>
<g >
<title>sched_clock (847,695 samples, 0.03%)</title><rect x="680.8" y="69" width="0.3" height="15.0" fill="rgb(212,33,7)" rx="2" ry="2" />
<text  x="683.77" y="79.5" ></text>
</g>
<g >
<title>memcg_slab_post_alloc_hook (8,462,463 samples, 0.30%)</title><rect x="748.4" y="245" width="3.5" height="15.0" fill="rgb(234,135,32)" rx="2" ry="2" />
<text  x="751.43" y="255.5" ></text>
</g>
<g >
<title>__kmalloc_node (126,980,002 samples, 4.44%)</title><rect x="533.0" y="277" width="52.4" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="536.02" y="287.5" >__kma..</text>
</g>
<g >
<title>tick_sched_handle (822,212 samples, 0.03%)</title><rect x="525.2" y="165" width="0.3" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="528.17" y="175.5" ></text>
</g>
<g >
<title>syscall_exit_to_user_mode (3,288,292 samples, 0.11%)</title><rect x="1080.6" y="341" width="1.4" height="15.0" fill="rgb(251,211,50)" rx="2" ry="2" />
<text  x="1083.63" y="351.5" ></text>
</g>
<g >
<title>kick_pool (639,172 samples, 0.02%)</title><rect x="10.8" y="197" width="0.2" height="15.0" fill="rgb(244,181,43)" rx="2" ry="2" />
<text  x="13.78" y="207.5" ></text>
</g>
<g >
<title>memchr_inv (45,221,977 samples, 1.58%)</title><rect x="789.2" y="309" width="18.6" height="15.0" fill="rgb(240,162,38)" rx="2" ry="2" />
<text  x="792.19" y="319.5" ></text>
</g>
<g >
<title>kvfree (6,627,366 samples, 0.23%)</title><rect x="784.7" y="309" width="2.7" height="15.0" fill="rgb(209,22,5)" rx="2" ry="2" />
<text  x="787.71" y="319.5" ></text>
</g>
<g >
<title>____fput (402,619 samples, 0.01%)</title><rect x="1189.0" y="293" width="0.1" height="15.0" fill="rgb(221,74,17)" rx="2" ry="2" />
<text  x="1191.95" y="303.5" ></text>
</g>
<g >
<title>_copy_to_user (8,419,236 samples, 0.29%)</title><rect x="382.8" y="293" width="3.4" height="15.0" fill="rgb(206,8,1)" rx="2" ry="2" />
<text  x="385.75" y="303.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (853,305 samples, 0.03%)</title><rect x="51.2" y="309" width="0.4" height="15.0" fill="rgb(228,109,26)" rx="2" ry="2" />
<text  x="54.20" y="319.5" ></text>
</g>
<g >
<title>is_vmalloc_addr (2,548,160 samples, 0.09%)</title><rect x="691.5" y="277" width="1.0" height="15.0" fill="rgb(215,46,11)" rx="2" ry="2" />
<text  x="694.48" y="287.5" ></text>
</g>
<g >
<title>syscall_exit_work (119,924,475 samples, 4.19%)</title><rect x="1026.3" y="309" width="49.5" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1029.31" y="319.5" >sysc..</text>
</g>
<g >
<title>htab_map_hash (50,057,590 samples, 1.75%)</title><rect x="402.5" y="277" width="20.6" height="15.0" fill="rgb(237,151,36)" rx="2" ry="2" />
<text  x="405.48" y="287.5" ></text>
</g>
<g >
<title>_copy_from_user (5,055,400 samples, 0.18%)</title><rect x="765.7" y="309" width="2.1" height="15.0" fill="rgb(206,7,1)" rx="2" ry="2" />
<text  x="768.73" y="319.5" ></text>
</g>
<g >
<title>map_create (1,317,348 samples, 0.05%)</title><rect x="1189.4" y="309" width="0.5" height="15.0" fill="rgb(238,155,37)" rx="2" ry="2" />
<text  x="1192.38" y="319.5" ></text>
</g>
<g >
<title>do_syscall_64 (576,042 samples, 0.02%)</title><rect x="1188.7" y="309" width="0.3" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="1191.71" y="319.5" ></text>
</g>
<g >
<title>lookup_fast (496,677 samples, 0.02%)</title><rect x="10.0" y="229" width="0.2" height="15.0" fill="rgb(219,68,16)" rx="2" ry="2" />
<text  x="13.00" y="239.5" ></text>
</g>
<g >
<title>syscall_enter_from_user_mode (8,363,053 samples, 0.29%)</title><rect x="1077.2" y="341" width="3.4" height="15.0" fill="rgb(254,229,54)" rx="2" ry="2" />
<text  x="1080.18" y="351.5" ></text>
</g>
<g >
<title>__sysvec_apic_timer_interrupt (847,695 samples, 0.03%)</title><rect x="680.8" y="213" width="0.3" height="15.0" fill="rgb(242,173,41)" rx="2" ry="2" />
<text  x="683.77" y="223.5" ></text>
</g>
<g >
<title>asm_sysvec_apic_timer_interrupt (853,305 samples, 0.03%)</title><rect x="51.2" y="357" width="0.4" height="15.0" fill="rgb(232,127,30)" rx="2" ry="2" />
<text  x="54.20" y="367.5" ></text>
</g>
<g >
<title>__check_heap_object (23,354,401 samples, 0.82%)</title><rect x="329.3" y="277" width="9.6" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="332.30" y="287.5" ></text>
</g>
<g >
<title>account_process_tick (822,212 samples, 0.03%)</title><rect x="525.2" y="133" width="0.3" height="15.0" fill="rgb(234,136,32)" rx="2" ry="2" />
<text  x="528.17" y="143.5" ></text>
</g>
<g >
<title>__sys_bpf (1,276,517,554 samples, 44.62%)</title><rect x="239.3" y="309" width="526.4" height="15.0" fill="rgb(239,159,38)" rx="2" ry="2" />
<text  x="242.27" y="319.5" >__sys_bpf</text>
</g>
<g >
<title>__queue_work.part.0 (639,172 samples, 0.02%)</title><rect x="10.8" y="213" width="0.2" height="15.0" fill="rgb(222,79,19)" rx="2" ry="2" />
<text  x="13.78" y="223.5" ></text>
</g>
<g >
<title>wake_up_process (639,172 samples, 0.02%)</title><rect x="10.8" y="181" width="0.2" height="15.0" fill="rgb(213,37,8)" rx="2" ry="2" />
<text  x="13.78" y="191.5" ></text>
</g>
<g >
<title>update_load_avg (850,365 samples, 0.03%)</title><rect x="593.4" y="117" width="0.3" height="15.0" fill="rgb(240,165,39)" rx="2" ry="2" />
<text  x="596.36" y="127.5" ></text>
</g>
<g >
<title>all (2,861,139,542 samples, 100%)</title><rect x="10.0" y="421" width="1180.0" height="15.0" fill="rgb(213,39,9)" rx="2" ry="2" />
<text  x="13.00" y="431.5" ></text>
</g>
<g >
<title>__kmalloc_node (155,751,404 samples, 5.44%)</title><rect x="695.3" y="261" width="64.2" height="15.0" fill="rgb(222,80,19)" rx="2" ry="2" />
<text  x="698.28" y="271.5" >__kmall..</text>
</g>
<g >
<title>do_vmi_munmap (255,552 samples, 0.01%)</title><rect x="10.7" y="229" width="0.1" height="15.0" fill="rgb(253,223,53)" rx="2" ry="2" />
<text  x="13.68" y="239.5" ></text>
</g>
<g >
<title>do_syscall_64 (639,172 samples, 0.02%)</title><rect x="10.8" y="341" width="0.2" height="15.0" fill="rgb(209,20,4)" rx="2" ry="2" />
<text  x="13.78" y="351.5" ></text>
</g>
<g >
<title>task_tick_fair (850,365 samples, 0.03%)</title><rect x="593.4" y="133" width="0.3" height="15.0" fill="rgb(217,57,13)" rx="2" ry="2" />
<text  x="596.36" y="143.5" ></text>
</g>
<g >
<title>bpf_map_copy_value (153,138,862 samples, 5.35%)</title><rect x="386.2" y="293" width="63.2" height="15.0" fill="rgb(246,189,45)" rx="2" ry="2" />
<text  x="389.23" y="303.5" >bpf_ma..</text>
</g>
<g >
<title>syscall_exit_work (849,742 samples, 0.03%)</title><rect x="1075.8" y="325" width="0.3" height="15.0" fill="rgb(238,154,36)" rx="2" ry="2" />
<text  x="1078.77" y="335.5" ></text>
</g>
<g >
<title>load_elf_binary (255,552 samples, 0.01%)</title><rect x="10.7" y="293" width="0.1" height="15.0" fill="rgb(223,83,20)" rx="2" ry="2" />
<text  x="13.68" y="303.5" ></text>
</g>
<g >
<title>kvmalloc_node (151,928,024 samples, 5.31%)</title><rect x="525.5" y="293" width="62.7" height="15.0" fill="rgb(237,150,35)" rx="2" ry="2" />
<text  x="528.50" y="303.5" >kvmall..</text>
</g>
<g >
<title>__x86_indirect_thunk_array (3,371,144 samples, 0.12%)</title><rect x="372.7" y="293" width="1.4" height="15.0" fill="rgb(231,123,29)" rx="2" ry="2" />
<text  x="375.71" y="303.5" ></text>
</g>
<g >
<title>raw_spin_rq_unlock (639,172 samples, 0.02%)</title><rect x="10.8" y="165" width="0.2" height="15.0" fill="rgb(207,10,2)" rx="2" ry="2" />
<text  x="13.78" y="175.5" ></text>
</g>
</g>
</svg>
